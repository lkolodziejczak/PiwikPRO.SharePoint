{
  "trackers": [
    {
      "name": "GlobalArrayTracker",
      "params": {
        "variableName": "dataLayer"
      }
    }
  ],
  "sharedEvent": {
    "deepCatch": {
      "jobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{context:userLoginName}}%27",
      "department": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{context:userLoginName}}%27",
      "office": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{context:userLoginName}}%27"
    },
    "sharedMappings": {
      "userID": "context:userLoginName.anonymize()",
      "userDisplayName": "context:userDisplayName",
      "userDepartment": "deep:department.value",
      "userOffice": "deep:office.value",
      "userJobTitle": "deep:jobTitle.value"
    }
  },
  "events": [
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "^(?:(?!SitePages\/Forms|\/Lists\/|\/Forms\/|\/_layouts\/|mode=preview|Mode=Edit).)*$",
      "deepCatch": {
        "props": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$expand=ContentType,FieldValuesAsText",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:props.FieldValuesAsText.Author",
        "authorID": "deep:author.UserName.decodeClaims().anonymize()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value",
        "pageUrl": "global:location.href",
        "contentType": "deep:props.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "pageID": "deep:props.FieldValuesAsText.UniqueId",
        "pageTitle": "deep:props.Title",
        "pageWebTitle": "context:webTitle",
        "pageWebId": "context:webId",
        "sitecolectionID": "context:siteId",
        "sitecolletionTitle": "context:siteTitle",
        "!testPropertyForDetectNews": "deep:props.LayoutWebpartsContent"
      }
    },
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "\/Forms\/|layouts\/15\/viewlsts\\.aspx",
      "deepCatch": {},
      "mappings": {
        "pageUrl": "global:location.href",
        "pageWebTitle": "context:webTitle",
        "pageWebId": "context:webId",
        "sitecolectionID": "context:siteId",
        "sitecolletionTitle": "context:siteTitle"
      }
    },
    {
      "name": "listViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "^(?=.*\/Lists\/)(?:(?!DispForm\\.aspx).)*$",
      "deepCatch": {},
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listWebTitle": "context:webTitle",
        "listWebId": "context:webId",
        "sitecolectionID": "context:siteId",
        "sitecolletionTitle": "context:siteTitle"
      }
    },
    {
      "name": "likeItem",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/like[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=Id,UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "unlikeItem",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/unlike[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "commentItem",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{response:id}}",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "commentReply",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments\\([0-9]+\\)\\/replies[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "comment": "complex:{{ancestor:1}}?$select=id,author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentAuthor": "deep:comment.author.loginName.decodeClaims().anonymize()",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{deep:comment.id}}",
        "commentReplyUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{response:id}}",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "likeComment",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments\\([0-9]+\\)\\/like[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "comment": "complex:{{ancestor:1}}?$select=id,author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentAuthor": "deep:comment.author.loginName.decodeClaims().anonymize()",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{deep:comment.id}}",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "unlikeComment",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments\\([0-9]+\\)\\/unlike[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "comment": "complex:{{ancestor:1}}?$select=id,author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "itemUniqueId": "deep:item.UniqueId",
        "itemAuthorUserName": "deep:item.Author.UserName.anonymize()",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentAuthor": "deep:comment.author.loginName.decodeClaims().anonymize()",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{deep:comment.id}}",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "itemContentTypeId": "deep:item.ContentTypeId",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "search",
      "eventType": "postMessage",
      "catchFilter": "QueryString",
      "mappings": {
        "queryString": "response:prefix.parseJson().EntityRequests.0.Query.QueryString",
        "count": "response:qfResponse.parseJson().EntitySets.0.ResultSets.0.Total"
      }
    },
    {
      "name": "itemShared",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/ForwardObjectLink.*?@a2=.*$",
      "deepCatch": {
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=FieldValuesAsText",
        "listTitle": "complex:{{ancestor:2}}?@a1={{querystring:@a1}}",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "listUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileDirRef}}/",
        "listTitle": "deep:listTitle.Title",
        "listId": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareLink.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=File,Properties,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "contentType": "deep:item.ContentType.Name",
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.File.ServerRelativeUrl}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.Id",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderCreatedOrUploaded",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/folders\/AddUsingPath\\(DecodedUrl=@a1,overwrite=@a2\\)\\?.*$[/]*$",
      "deepCatch": {
        "folder": "complex:{{ancestor:3}}/GetFolderByServerRelativePath(DecodedUrl={{querystring:@a1}})?&$expand=ListItemAllFields,ListItemAllFields/ContentType",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{deep:folder.ListItemAllFields.ID}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:folder.ListItemAllFields.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:folder.ServerRelativeUrl}}",
        "folderName": "deep:folder.Name",
        "folderTitle": "deep:folder.ListItemAllFields.Title",
        "contentType": "deep:folder.ListItemAllFields.ContentType.Name",
        "folderUniqueId": "deep:folder.UniqueId",
        "folderId": "deep:folder.ListItemAllFields.ID",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:folder.ListItemAllFields.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "filePinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/AddToSpotlight\\(itemId=@a3,folderPath=@a4,afterItemId=@a5\\)\\?@a1=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a3}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a3}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileId": "deep:request.FieldValuesAsText.ID",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/RemoveFromSpotlight\\(itemId=@a3,folderPath=@a4\\)\\?@a1=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a3}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@a1}})/Items({{querystring:@a3}})/FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a3}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:item.Title",
        "fileId": "deep:item.ID",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderPinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/AddToSpotlight\\(itemId=@a3,folderPath=@a4,afterItemId=@a5\\)\\?@a1=.*?-1[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@a1}})/Items({{querystring:@a3}})/FieldValuesAsText",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a3}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a3}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderTitle": "deep:item.Title",
        "folderId": "deep:item.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/RemoveFromSpotlight\\(itemId=@a3,folderPath=@a4\\)\\?@a1=.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@a1}})/Items({{querystring:@a3}})/FieldValuesAsText",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a3}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a3}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderTitle": "deep:item.Title",
        "folderId": "deep:item.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "post",
      "catchFilter": "\/AddToSpotlight\\(itemId=@a3,folderPath=@a4,afterItemId=@a5\\)\\?@a1=.*?-1[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@a1}})/Items({{querystring:@a3}})?&$expand=FieldValuesAsText"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ID"
      }
    },
    {
      "name": "pageUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "post",
      "catchFilter": "\/RemoveFromSpotlight\\(itemId=@a3,folderPath=@a4\\)\\?@a1=.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@a1}})/Items({{querystring:@a3}})?&$expand=FieldValuesAsText"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ID"
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetFolderById\\(@a1\\)\\/recycle\\?@a1=.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemByUniqueId(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a1}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:request.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:2}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "whoCreated": "deep:item.AuthorEmail.anonymize()",
        "folderSize": "deep:item.Size",
        "folderTitle": "deep:item.Title",
        "FolderUrl": "deep:item.DirName",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "folderModified": "deep:request.FieldValuesAsText.Modified",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileUploaded",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/AddUsingPath\\(DecodedUrl=@a2,overwrite=@a3,AutoCheckoutOnInvalidData=@a4\\).*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:2}}?@a1={{querystring:@a1}}&$expand=Files,Files/Author&$filter=Name eq {{querystring:@a2}}",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:item.Files.0.Author.Email}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:item.Files.0.Author.Email}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:item.Files.0.Author.Email}}%27"
      },
      "mappings": {
        "libraryName": "context:listTitle",
        "filesize": "response:parseJson().d.Length",
        "fileUniqueId": "response:parseJson().d.UniqueId",
        "fileName": "response:parseJson().d.Name",
        "fileExt": "response:parseJson().d.Name.substractExt()",
        "fileUrl": "complex:{{global:location.origin}}{{response:parseJson().d.ServerRelativeUrl}}",
        "parentFolderName": "deep:item.Name",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "authorDisplayName": "deep:item.Files.0.Author.Title",
        "authorID": "deep:item.Files.0.Author.Email.anonymize()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "pageUrl": "^(?:(?!\/Lists\/).)*$",
      "method": "post",
      "catchFilter": "\/GetItemById.*?\/recycle.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:3}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "whoCreated": "deep:item.AuthorEmail.anonymize()",
        "filesize": "deep:item.Size",
        "deletionDate": "deep:item.DeletedDate",
        "title": "deep:item.Title",
        "fileUrl": "complex:{{global:location.origin}}{{deep:item.DirName}}/{{deep:item.Title}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "post",
      "catchFilter": "\/GetItemById.*?\/recycle.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2={{querystring:@a2}}&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:3}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "whoCreated": "deep:item.AuthorEmail.anonymize()",
        "filesize": "deep:item.Size",
        "deletionDate": "deep:item.DeletedDate",
        "title": "deep:item.Title",
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.DirName}}/{{deep:item.Title}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "folderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareLink.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "filesize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageAddToNavigation",
      "suffix": 1,
      "eventType": "ajax",
      "method": "post",
      "pageUrl": "^(?!.*(SitePages\/Forms)).*",
      "catchFilter": "\/navigation\/QuickLaunch[/]*$",
      "deepCatch": {},
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{response:Url}}",
        "pageTitle": "response:Title",
        "pageId": "response:Id"
      }
    },
    {
      "name": "pageAddToNavigation",
      "suffix": 2,
      "eventType": "ajax",
      "method": "post",
      "pageUrl": "SitePages\/Forms",
      "catchFilter": "\/navigation\/QuickLaunch[/]*$",
      "deepCatch": {},
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{response:parseJson().d.Url}}",
        "pageTitle": "response:parseJson().d.Title",
        "pageId": "response:parseJson().d.Id"
      }
    },
    {
      "name": "pageMakeHomePage",
      "eventType": "ajax",
      "suffix": "_modern",
      "method": "post",
      "catchFilter": "\/RootFolder$",
      "deepCatch": {
        "pageProps": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='/sites/{{context:webTitle}}/{{body:parseJson().WelcomePage}}')",
        "pagePropsAllFields": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='/sites/{{context:webTitle}}/{{body:parseJson().WelcomePage}}')/ListItemAllFields",
        "item": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='/sites/{{context:webTitle}}/{{body:parseJson().WelcomePage}}')?&$expand=ListItemAllFields"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageName": "deep:item.Name",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.Id"
      }
    },
    {
      "name": "folderShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareLink.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=Folder,Properties,ContentType",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "contentType": "deep:request.ContentType.Name",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "folderTitle": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderId": "deep:request.ID",
        "folderUniqueId": "deep:item.Folder.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "pagePromoteSaveAsTemplate",
      "eventType": "event",
      "suffix": "_template",
      "pageUrl": "\/Templates\/",
      "method": "click",
      "catchFilter": "button[data-automation-id='pageCommandBarSaveTemplateButton']",
      "deferred": false,
      "registerOnInit": true,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='/sites/{{context:webTitle}}/SitePages{{url:(\/Templates.*?\\.aspx)}}')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.ID",
        "itemAuthorUserName": "deep:item.Author.Email.anonymize()",
        "authorDisplayName": "deep:author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteSaveAsTemplate",
      "eventType": "event",
      "suffix": "_notemplate",
      "pageUrl": "^(?:(?!\/Templates\/).)*$",
      "method": "click",
      "catchFilter": "button[data-automation-id='pageCommandBarSaveTemplateButton']",
      "deferred": false,
      "registerOnInit": true,
      "registerOnEvent": "click",
      "delay": 800,
      "delayExecution": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{context:pageItemId}}&$expand=FieldValuesAsText,ContentType",
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='/sites/{{context:webTitle}}/SitePages/Templates/{{url:(?<=\/SitePages\/)(.*?)$}}')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.ID",
        "itemAuthorUserName": "deep:item.Author.Email.anonymize()",
        "authorDisplayName": "deep:author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteAsNews",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/sitepages\/pages\\(\\d+\\)\/PromoteToNews$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/Web/GetFileByServerRelativePath(decodedurl='{{global:location.pathname}}')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.ID",
        "itemAuthorUserName": "deep:item.Author.Email.anonymize()",
        "authorDisplayName": "deep:author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteCopyLink",
      "eventType": "event",
      "method": "click",
      "catchFilter": "[class*=copyButton]",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/_api/Web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{url:(?<=\/SitePages\/)(.*?)(?=\\.aspx)}}.aspx')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.ID",
        "itemAuthorUserName": "deep:item.Author.Email.anonymize()",
        "authorDisplayName": "deep:author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "reloadTrackerForListCreating",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:document.querySelectorAll(\"i[data-icon-name='Add']\")[0].parentElement.parentElement",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 300,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForListCreating3",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:document.querySelectorAll(\"i[data-icon-name='CalculatorAddition']\")[0].parentElement.parentElement",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 300,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForListCreating2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[role='menuitem'][name*='List']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {}
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automation-id='createList']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{ancestor:3}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.querySelector(\".od-createList-listDetails input\"); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listURL": "url:(.*[^Forms\\/][^AllItems.aspx])",
        "listID": "deep:propertiesList.Id",
        "DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl"
      }
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[aria-label='Create'].ms-ListCreationPanel-CreateButton",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{ancestor:3}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.querySelector('.ms-ListCreationPanel-NameField').children[0].children[1].children[0]; el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listUrl": "url:(.*[^Forms\\/][^AllItems.aspx])",
        "listId": "deep:propertiesList.Id",
        "DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl"
      }
    },
    {
      "name": "reloadTrackerForListCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a#idStorefrontMyAppIconImage",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {}
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "input#ctl00_PlaceHolderMain_onetidCreateList",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 3000,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{ancestor:3}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.activeElement.contentDocument.querySelector('#onetidListTitle'); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listURL": "complex:{{global:location.origin}}{{deep:propertiesList.RootFolder.ServerRelativeUrl}}",
        "listID": "deep:propertiesList.Id",
        "DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl"
      }
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "input#ctl00_PlaceHolderMain_onetidCreateList",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{ancestor:3}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.querySelector('#onetidListTitle'); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listURL": "complex:{{global:location.origin}}{{deep:propertiesList.RootFolder.ServerRelativeUrl}}",
        "listID": "deep:propertiesList.Id",
        "DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl01_RptControls_BtnSave",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\.aspx\\?List={.*?[/]*$",
      "deepCatch": {},
      "deferredMappings": {
        "NewTitle": "eval:var el = document.querySelector('#ctl00_PlaceHolderMain_ctl00_ctl03_TxtListTitle'); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:NewTitle",
        "listId": "url:([(]?[0-9A-F]{8}[-]?([0-9A-F]{4}[-]){3}[0-9A-F]{12}[)]?)",
        "listUrl": "eval:document.querySelector('.ms-listeditheader').children[0].children[0].children[2].children[1].textContent.trim().replace('AllItems.aspx','')"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automationid='exitQuickEditCommand']",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": "[class*=ms-CommandBar-primaryCommand]",
      "registerOnInit": true,
      "delay": 2000,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/web\\/GetList\\(@a1\\)\\/AddValidateUpdateItemUsingPath\\(\\)\\?\\@a1=.*?[/]*$",
      "deepCatch": {},
      "mappings": {
        "listId": "context:listId",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)",
        "listTitle": "context:listTitle"
      }
    },
    {
      "name": "reloadTrackerForListUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "li[id*='List-title'] > a",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForListUpdated2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a.ms-Nav-link",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForListUpdated2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a.ms-Nav-link",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby='Ribbon.List.ViewFormat.Datasheet_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {
        "listTitledef": "context:listTitle",
        "listIddef": "context:listId"
      },
      "mappings": {
        "listTitle": "deferred:listTitledef",
        "listId": "deferred:listIddef",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "input[id*='RightRptControls_ctl00_ctl00_diidIOSaveItem']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:document.querySelector('td.ms-list-addnew').children[1]",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {
        "listTitledef": "context:listTitle",
        "listIddef": "context:listId"
      },
      "mappings": {
        "listTitle": "deferred:listTitledef",
        "listId": "deferred:listIddef",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)"
      }
    },
    {
      "name": "listDeleted",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/web\\/lists\\(@appId\\)\\/recycle\\?\\@appId=.*?[/]*$",
      "deepCatch": {},
      "deepCatchPre": {
        "propList": "complex:{{ancestor:4}}/_api/web/lists(guid{{querystring:@appId}})?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "mappings": {
        "listId": "querystringwithoutquotamarks:@appId",
        "listTitle": "deep:propList.Title",
        "listUrl": "complex:{{global:location.origin}}{{deep:propList.RootFolder.ServerRelativeUrl}}/"
      }
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl10_RptControls_onetidListEdit2",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\_layouts\\/15\\/viewlsts.aspx?.*$",
      "deepCatch": {},
      "deferredMappings": {
        "ListTitled": "eval:document.querySelector('#DeltaPlaceHolderPageTitleInTitleArea').children[0].children[0].outerText",
        "ListURLd": "eval:document.querySelector('#idItemHoverTable').children[0].children[2].children[1].outerText",
        "ListIDd": "url:([(]?[a-fA-F0-9]{8}[-]?([a-fA-F0-9]{4}[-]?){3}[a-fA-F0-9]{12}[)]?)"
      },
      "mappings": {
        "listId": "deferred:ListIDd",
        "listTitle": "deferred:ListTitled",
        "listUrl": "deferred:ListURLd"
      }
    },
    {
      "name": "pageCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_createButton",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\.aspx\\?WikiPageMode=Edit\\&InitialTabId=Ribbon.EditingTools.CPEditTab\\&VisibilityContext=WSSWikiPage.*?[/]*$",
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:listId}}')/Items?$filter=FileLeafRef eq '{{deferred:PageName}}.aspx'&$select=GUID,ContentTypeId",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "deferredMappings": {
        "PageName": "eval:input('#ctl00_PlaceHolderMain_nameInput')"
      },
      "mappings": {
        "contentTypeId": "deep:propList.value.0.ContentTypeId",
        "fileUrl": "url:(.*\\.aspx)",
        "filename": "deferred:PageName",
        "fileId": "deep:propList.value.0.GUID",
        "listId": "context:listId",
        "contentType": "eval:'Wiki Page'",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#onetidCreate",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\.aspx\\?PageView=Shared\\&DisplayMode=Design\\&InitialTabId=Ribbon.WebPartPage\\&VisibilityContext=WSSWebPartPage.*?[/]*$",
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{deferred:ListID}}')/Items?$filter=FileLeafRef eq '{{deferred:PageName}}.aspx'&$select=GUID",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "deferredMappings": {
        "ListID": "eval:document.querySelector('#onetidDocLibIDSelect').value",
        "PageName": "eval:input('#onetidListTitle')",
        "ContentTypeID": "url:(0x0101[^&]+)"
      },
      "mappings": {
        "fileUrl": "url:(.*\\.aspx)",
        "filename": "deferred:PageName",
        "contentTypeId": "deferred:ContentTypeID",
        "fileId": "deep:propList.value.0.GUID",
        "listId": "deferred:ListID",
        "contentType": "eval:'Web Part Page'",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automation-id='pageCommandBarEditButton']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='SaveAndPublish_ToolTip']",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:listId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageTitle": "eval:document.querySelectorAll('#DeltaPlaceHolderPageTitleInTitleArea')[0].innerText.trim()",
        "typeOfContent": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='WebPartPage.Edit.Edit.Menu.Actions.Stop_ToolTip']",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:listId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageTitle": "eval:document.querySelectorAll('#DeltaPlaceHolderPageTitleInTitleArea')[0].innerText.trim()",
        "typeOfContent": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[title='Edit'][role='button']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": "\\.aspx.*?[/]*$",
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForPageEdited2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='StopEditing_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 100,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "publishAction",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/sitepages\\/pages\\(\\d+\\)\\/publish$",
      "deepCatch": {
        "propList": "complex:{{ancestor:1}}?$select=AbsoluteUrl,ContentTypeId,UniqueId,Title,LayoutWebpartsContent,Version",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageId": "deep:propList.UniqueId",
        "pageUrl": "deep:propList.AbsoluteUrl",
        "typeOfContent": "deep:propList.ContentTypeId",
        "listId": "context:listId",
        "pageName": "deep:propList.Title",
        "!testPageProperty1": "deep:propList.LayoutWebpartsContent.parseJson().0.properties.titlePlaceholder",
        "!pageVersion": "deep:propList.Version",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "subsiteCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl00_RptControls_BtnCreateSubweb",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {
        "SubsiteTitle": "eval:document.querySelector('#ctl00_PlaceHolderMain_idTitleDescSection_ctl01_TxtCreateSubwebTitle').value",
        "SubsiteWebAddress": "eval:document.querySelector('#ctl00_PlaceHolderMain_idUrlSection_ctl01_TxtCreateSubwebName').value"
      },
      "mappings": {
        "pageName": "deferred:SubsiteTitle",
        "template": "context:webTemplateConfiguration"
      }
    },
    {
      "name": "listItemDirectView",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automationid='FieldRenderer-name']",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": "div[data-automationid='DetailsList']",
      "registerOnInit": true,
      "delay": 500,
      "delayExecution": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{selectedrows:0.ID}}&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listId": "context:listId",
        "itemTitle": "deep:request.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "listItemDirectView",
      "eventType": "pageView",
      "pageUrl": "\\/DispForm.aspx\\?ID=[0-9]",
      "deepCatch": {
        "item": "complex:{{context:siteAbsoluteUrl}}/_api/web/Lists('{{context:listId}}')/GetItemById({{eval: window.location.search.substr(0,window.location.search.indexOf('&')).split('?ID=')[1]}})?$select=FileRef"
      },
      "mappings": {
        "listUrl": "eval: window.location.href.substr(0, window.location.href.lastIndexOf('/')).replaceAll('%20',' ')+'/'",
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "itemTitle": "eval: document.querySelector('.ReactFieldEditor-TextSingleLine').textContent",
        "itemUrl": "complex:{{eval:window.location.origin}}{{deep:item.FileRef}}"
      }
    },
    {
      "name": "newsLink",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/sitepages\\/pages\\/reposts[/]*$",
      "deepCatch": {},
      "mappings": {
        "postTitle": "response:Title",
        "contentType": "response:PageLayoutType",
        "postId": "response:UniqueId",
        "postUrl": "response:AbsoluteUrl"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_modern0",
      "method": "click",
      "catchFilter": "eval:var clickedButtonName; \n document.addEventListener('click', function(e) { \n e = e || window.event; \n var target = e.target || e.srcElement, \n clickedButtonName = target.textContent || target.innerText; \n target.parentElement.firstElementChild.tagName.toLowerCase() === 'button'? target.parentElement.click():null;}, true); \n//debugger; \n var btnsCol = document.querySelectorAll('button[class*=clickable'); \n var selBtns = []; \n btnsCol.forEach(el => {\n let ext = el.innerHTML.split('.').pop(); \n el.innerHTML != ext ? selBtns.push(el) : null}); \n selBtns?selBtns:null",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": "[class*=contentWrapper]",
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:siteAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{selectedrows:0.FileLeafRef}}')",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{selectedrows:0.ID}}&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:item.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "ajax",
      "method": "get",
      "catchFilter": "\/download\\.aspx\\?UniqueId=.*?$[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{selectedRows:0.ID}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_contextmenu",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": ".ms-ContextualMenu-list button[data-automationid='downloadCommand']",
      "deferred": false,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{selectedRows:0.ID}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_menu",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": ".ms-CommandBar-primaryCommand button[data-automationid='downloadCommand']",
      "deferred": false,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{selectedRows:0.ID}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderDownloaded",
      "eventType": "event",
      "suffix": "_contextmenu",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": ".ms-ContextualMenu-list button[data-automationid='downloadCommand']",
      "deferred": false,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{selectedRows:0.ID}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderTitle": "deep:request.Title",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderDownloaded",
      "eventType": "event",
      "suffix": "_menu",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": ".ms-CommandBar-primaryCommand button[data-automationid='downloadCommand']",
      "deferred": false,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{selectedRows:0.ID}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderTitle": "deep:request.Title",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteEmail",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automation-id='sendByEmailDialogSendButton']",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 300,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/_api/Web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{url:(?<=\/SitePages\/)(.*?)(?=\\.aspx)}}.aspx')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=UserName,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageId": "deep:item.ListItemAllFields.ID",
        "itemAuthorUserName": "deep:item.Author.Email.anonymize()",
        "authorDisplayName": "deep:author.Title",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listItemAttachmentView",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:try {var el = document.querySelector(\"[data-icon-name='Attach']\").parentElement.parentElement.children[1].children[0].children[0].querySelectorAll('div:not([class*=UploadContainer]) > a')} catch(e) {}; el?el:null",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}/{{context:webServerRelativeUrl}}/_api/Web/lists/GetByTitle('{{context:listTitle}}')/items?$filter=Title eq '{{eval:document.querySelector('.od-Panel .od-Panel-content .od-ListForm-breadcrumb ul.BreadcrumbBar-list span.BreadcrumbBar-item').getAttribute('title')}}'&$expand=FieldValuesAsText"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listId": "context:listId",
        "itemTitle": "deep:request.value.0.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "fileUploaded",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl01_RptControls_btnOK",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 300,
      "nextPageUrl": null,
      "deferredMappings": {},
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFolderByServerRelativeUrl('{{querystring:RootFolder}}')/files?$expand=Properties&$filter=Name eq '{{eval:var el = document.querySelector('#ctl00_PlaceHolderMain_ctl02_ctl04_InputFile').value.slice(12)}}'"
      },
      "mappings": {
        "filename": "deep:request.value.0.Name",
        "libraryName": "context:listTitle",
        "filesize": "deep:request.value.0.Properties.vti_x005f_filesize",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_classic0",
      "method": "click",
      "catchFilter": "eval:var btnsCol = document.querySelectorAll('a.ms-listlink'); \n var selBtns = []; \n btnsCol.forEach(el => {\n let ext = el.getAttribute('aria-label').replaceAll(' ','').split(',').lastItem; \n ext != 'Folder' ? selBtns.push(el) : null}); \n selBtns?selBtns:null",
      "deferred": true,
      "registerOnInit": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{deferred:id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml"
      },
      "deferredMappings": {
        "id": "event:target.getId()"
      },
      "mappings": {
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "filesize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "a[id^='Ribbon.Documents.Manage.Delete-Medium']",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "filesize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "click",
      "catchFilter": "#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "filesize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "folderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "pageName"
      },
      "method": "click",
      "catchFilter": "#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}&$select=Title,UserName",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Title')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27i:0%23.f|membership|{{deep:author.UserName}}%27"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "filesize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "folderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.UserName.decodeClaims()",
        "itemAuthorDepartment": "deep:authorDepartment.value",
        "itemAuthorOffice": "deep:authorOffice.value",
        "itemAuthorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": "#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": "#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "whoCreated": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "title": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "folderCreated",
      "suffix": 1,
      "eventType": "event",
      "method": "click",
      "pageUrl": "^(?:(?!RootFolder).)*$",
      "catchFilter": "eval:document.querySelector('#csfd_createButton_toolBarTbl_RightRptControls_diidIOSaveItem')",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": ".ms-backgroundImage",
      "registerOnInit": false,
      "delay": 2000,
      "delayExecution": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl=%27{{context:listUrl}}/{{eval:document.querySelector('.ccfc_folderNameInput').value}}%27)?$select=Name,UniqueId,ListItemAllFields/Title,ListItemAllFields/Id,ListItemAllFields/ContentType/SchemaXml,ServerRelativeUrl&$expand=ListItemAllFields,ListItemAllFields/ContentType"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.ServerRelativeUrl}}",
        "folderName": "deep:request.Name",
        "folderTitle": "deep:request.ListItemAllFields.Title",
        "contentType": "deep:request.ListItemAllFields.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "folderUniqueId": "deep:request.UniqueId",
        "folderId": "deep:request.ListItemAllFields.Id",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "folderCreated",
      "suffix": 2,
      "eventType": "event",
      "method": "click",
      "pageUrl": "RootFolder",
      "catchFilter": "eval:document.querySelector('#csfd_createButton_toolBarTbl_RightRptControls_diidIOSaveItem')",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": ".ms-backgroundImage",
      "registerOnInit": false,
      "delay": 2000,
      "delayExecution": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl=%27{{querystring:RootFolder}}/{{eval:document.querySelector('.ccfc_folderNameInput').value}}%27)?$select=Name,UniqueId,ListItemAllFields/Title,ListItemAllFields/Id,ListItemAllFields/ContentType/SchemaXml,ServerRelativeUrl&$expand=ListItemAllFields,ListItemAllFields/ContentType"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.ServerRelativeUrl}}",
        "folderName": "deep:request.Name",
        "folderTitle": "deep:request.ListItemAllFields.Title",
        "contentType": "deep:request.ListItemAllFields.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "folderUniqueId": "deep:request.UniqueId",
        "folderId": "deep:request.ListItemAllFields.Id",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "itemCopyLink",
      "eventType": "event",
      "suffix": "_popup",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": "#od-share .od-ShareMain [data-icon-name='Link']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items?$expand=FieldValuesAsText,ContentType&$filter=Title eq '{{event:target.getTitleOfListItem()}}'"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.value.0.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.value.0.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "itemCopyLink",
      "eventType": "event",
      "suffix": "_popupFromManageAccess",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": ".ms-Callout .od-ShareMain [data-icon-name='Link']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{selectedrows:0.ID}})?$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "itemCopyLink",
      "eventType": "event",
      "suffix": "_menu",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": ".ms-CommandBar [data-automationid='copyLinkCommand']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{selectedrows:0.ID}})?$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "itemCopyLink",
      "eventType": "event",
      "suffix": "_fromDirectView",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": "[aria-label='Copy link']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{selectedrows:0.ID}})?$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "itemCopyLink",
      "eventType": "event",
      "suffix": "_contextMenu",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": ".ms-ContextualMenu-list [data-automationid='copyLinkCommand']",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": true,
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{selectedrows:0.ID}})?$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "itemSharedByMail",
      "eventType": "event",
      "suffix": "_popup",
      "pageUrl": "\/Lists\/",
      "method": "click",
      "catchFilter": ".od-ShareMain [data-icon-name='OutlookLogo']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 900,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items?$expand=FieldValuesAsText,ContentType&$filter=Title eq '{{event:target.getTitleOfListItem()}}'"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listId": "context:listId",
        "itemTitle": "deep:item.value.0.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.value.0.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_classic1",
      "method": "click",
      "catchFilter": "a[id^=ID_CA_Open], #ID_EditIn_Word.ms-contextmenu-link, #ID_EditIn_Excel.ms-contextmenu-link",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": true,
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}})?$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_classic2",
      "method": "click",
      "catchFilter": "a[id^=ID_CA_Open], #ID_EditIn_Word.ms-contextmenu-link, #ID_EditIn_Excel.ms-contextmenu-link",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/items({{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}})?$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "listItemAttachmentView",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#idAttachmentsTable tr",
      "deferred": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}/{{context:webServerRelativeUrl}}/_api/Web/lists/GetByTitle('{{context:listTitle}}')/items({{querystring:ID}})?&$expand=FieldValuesAsText"
      },
      "deferredMappings": {
        "id": "querystring:ID"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "listId": "context:listId",
        "itemTitle": "deep:request.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "fileShared",
      "eventType": "event",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "#btnShare",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 0,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml"
      },
      "deferredMappings": {},
      "mappings": {
        "whoCreated": "deep:request.File.Author.Email.anonymize()",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "filesize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "folderShared",
      "eventType": "event",
      "suffix": "_classic",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": "#btnShare",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 0,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}%27&$expand=Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&@a1=%27{{context:listId}}%27"
      },
      "mappings": {
        "whoCreated": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "documentlibraryName": "context:listTitle",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}"
      }
    },
    {
      "name": "itemShared",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#btnShare",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 0,
      "pageUrl": "\/Lists\/",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}%27&$expand=Properties,FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}'&@a1=%27{{context:listId}}%27"
      },
      "mappings": {
        "authorId": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "filesize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize"
      }
    },
    {
      "name": "listItemDirectView",
      "eventType": "event",
      "method": "click",
      "catchFilter": "div[field=LinkTitle] a",
      "deferred": true,
      "registerOnInit": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{querystring:ID}}%27&$expand=Properties,FieldValuesAsText"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "itemTitle": "deep:request.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ID_DownloadACopy",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "eventNodes": null,
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}&$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileCreated",
      "eventType": "event",
      "suffix": 1,
      "method": "click",
      "catchFilter": "#js-newdocWOPI-divWord-WPQ1, #js-newdocWOPI-divExcel-WPQ1, #js-newdocWOPI-divPowerPoint-WPQ1, #ctl00_PlaceHolderMain_buttonSectionMain_RptControls_buttonOK",
      "deferred": true,
      "registerOnEvent": "click",
      "eventNodes": null,
      "registerOnInit": false,
      "delay": 1500,
      "nextPageUrl": "\/Doc\\.aspx\\?sourcedoc=.*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileById(DecodedUrl='{{querystring:sourcedoc}}')"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "pageCopyLink",
      "eventType": "event",
      "suffix": 1,
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "#ID_GetLink",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": true,
      "delay": 300,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{context:listTitle}}')/GetItemById({{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}})?$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "elUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "elTitle": "deep:request.FieldValuesAsText.Title",
        "elId": "deep:request.Id",
        "elUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "folderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "suffix": "_classic",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "#btnShare",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 0,
      "pageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0].id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml"
      },
      "deferredMappings": {},
      "mappings": {
        "whoCreated": "deep:request.File.Author.Email.anonymize()",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "filesize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "folderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileCreated",
      "eventType": "event",
      "suffix": 2,
      "method": "click",
      "catchFilter": "[data-automationid='createWordCommand'], [data-automationid='createExcelCommand'], [data-automationid='createPowerPointCommand']",
      "deferred": false,
      "registerOnEvent": "click",
      "eventNodes": null,
      "registerOnInit": false,
      "delay": 0,
      "delayExecution": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/Items?@a1='{{context:listId}}'&$orderby=ID+desc&$top=1&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "fileTitle": "deep:request.value.0.Title",
        "fileUniqueId": "deep:request.value.0.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.value.0.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.value.0.FieldValuesAsText.FileLeafRef.substractExt()",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.value.0.FieldValuesAsText.FileRef.getParent().getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef.getParent()}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}"
      }
    },
    {
      "name": "fileCreated",
      "eventType": "event",
      "suffix": 3,
      "method": "click",
      "catchFilter": "eval:document.querySelector('[data-automation-id=\"Create\"]').closest('.ms-Dialog--close').querySelector('.ms-Dialog-title').innerText.includes('OneNote') ? document.querySelector('[data-automation-id=\"Create\"]') : null",
      "deferred": false,
      "registerOnEvent": "click",
      "eventNodes": null,
      "registerOnInit": false,
      "delay": 500,
      "delayExecution": 1000,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/Items?@a1='{{context:listId}}'&$orderby=ID+desc&$top=1&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "fileTitle": "deep:request.value.0.Title",
        "fileUniqueId": "deep:request.value.0.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.value.0.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.value.0.FieldValuesAsText.FileLeafRef.substractExt()",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.value.0.FieldValuesAsText.FileRef.getParent().getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef.getParent()}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_modern2",
      "method": "click",
      "catchFilter": "[data-automationid='openInOfficeOnlineCommand'], [data-automationid='openInOfficeClientCommand']",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "eventNodes": null,
      "registerOnInit": false,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:siteAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{selectedrows:0.FileLeafRef}}')",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{selectedrows:0.ID}}&$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "fileTitle": "deep:item.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_modern_subtreemodify",
      "method": "click",
      "catchFilter": "[data-automationid='openInOfficeOnlineCommand'], [data-automationid='openInOfficeClientCommand']",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": "body",
      "registerOnInit": false,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "item": "complex:{{context:siteAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{selectedrows:0.FileLeafRef}}')",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{selectedrows:0.ID}}&$expand=FieldValuesAsText,ContentType/SchemaXml"
      },
      "mappings": {
        "fileTitle": "deep:item.Title",
        "fileUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "documentlibraryName": "context:listUrl.getLastSegment()",
        "documentlibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}",
        "objectType": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()"
      }
    }
  ]
}