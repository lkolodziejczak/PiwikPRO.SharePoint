{"version":3,"sources":["services/SettingsService.ts","tracking/IUrlTrackerProps.ts","Constants.ts","App.module.scss","tracking/Tracking.ts","tracking/trackers/GlobalArrayTracker.ts","tracking/trackers/ConsoleTracker.ts","tracking/trackers/BroadcastingTracker.ts","tracking/trackers/TrackersProvider.ts","polyfills.ts","form/useSettingsForm.ts","form/Form.tsx","App.tsx","tracking/contexts/Context.ts","serviceWorker.ts","index.tsx","services/SettingsKeys.ts"],"names":["ensureSettingsList","siteUrl","listTitle","a","Web","lists","ensure","OnQuickLaunch","list","created","fields","addText","defaultView","add","breakRoleInheritance","getSettingsList","items","select","config","item","Title","Value","setSettingsList","values","promises","key","existingItem","find","x","push","getById","Id","update","Object","keys","Promise","all","getPropertyBag","selectProperties","allProperties","properties","result","replace","setPropertyBag","body","objectId","map","join","endpoint","client","SPHttpClient","post","headers","res","json","response","ErrorInfo","Error","ErrorMessage","getSettings","currentUserPiwikAdminPromise","window","location","origin","Constants","piwikAdminServerRelativeUrl","currentUser","propertyBagPromise","_spPageContextInfo","siteAbsoluteUrl","settingsListPromise","siteCollectionSettingsListName","piwikProSiteDirectoryPromise","getList","getItemsByCAMLQuery","ViewXml","currentUserPiwikAdmin","adminPropertyBag","adminSettingsList","IsSiteAdmin","adminPropertyBagPromise","adminSettingsListPromise","globalSettingsListName","propertyBag","settingsList","piwikProSiteDirectory","data","ClientID","SettingsKeys","ClientSecret","ContainersUrl","EnforceSslComunication","IsCurrentUserPiwikAdmin","IsTrackingActive","JobVersion","PiwikStatus","pwk_status","SendDepartment","SendExtendedUserinfo","SendJobTitle","SendOffice","SendUserIdEncoded","SendUserName","SiteId","TemplateSendDepartment","TemplateSendExtendedUserinfo","TemplateSendJobTitle","TemplateSendOffice","TemplateSendUserIdEncoded","TemplateSendUserName","Url","UseSha3","UseSiteCollectionSettings","setSettings","settings","webAbsoluteUrl","indexOf","fetch","sp","site","getContextInfo","FormDigestValue","toString","method","getTrackerSettingsWithCaching","storage","PnPClientStorage","session","getOrPut","useSiteCollectionSettings","sendExtendedUserinfo","Date","now","trackerSettingsCacheExpirationInMinutes","NAV_TYPE","version","configUrl","module","exports","Tracking","context","trackerSettings","tracker","selectedRows","event","secondSearchAvoid","secondListItemDirectViewArray","secondlistItemAttachmentViewArray","deletedListsBefore","deletedListsAfter","fetchOld","bind","clickedCurrentTarget","_nav","getSearchDecoded","search_decoded","search","entries","pair","value","SettingsService","this","loadTagManager","siteClientTag","substring","lastIndexOf","length","hostname","configResponse","trackerInit","trackersProvider","TrackersProvider","getTracker","trackPageView","processDeferredEvent","asyncDeltaManager","add_pageLoaded","setTimeout","initInterceptors","urlTracker","document","addEventListener","setXMLHttpRequestInterceptor","setFetchInterceptor","setPostMessageInterceptor","setEventInterceptors","setSelectedRowsChangedInterceptor","iframes","querySelectorAll","Array","from","filter","src","startsWith","forEach","iframe","contentWindow","interceptorRegistered","interceptorRegisteredFromIframe","responseKey","undefined","toLowerCase","decodeURI","self","top","e","eventConfigs","events","eventType","eventConfig","pageUrl","RegExp","test","href","serverRequestPath","inIframe","name","hasOwnProperty","isOnNullPage","pageListId","pageItemId","processMappings","then","decodeUrls","contentTypeName","contentType","that","open","XMLHttpRequest","prototype","send","interceptXhrMethods","url","async","user","pass","_method","_url","call","oldOnReadyStateChange","start","getTime","deep","onReadyStateChange","readyState","time","arr","getAllResponseHeaders","trim","split","headerMap","line","parts","header","shift","includes","xmlDoc","DOMParser","parseFromString","isStartPage","processAjaxRequest","onreadystatechange","catchFilter","tryDecodeURI","i","deepCatchPre","processDeepCatch","setInterval","Function","input","init","String","clone","inputClone","resultClone","processPostMessage","elements","activeElement","eval","isArray","NodeList","isPrototypeOf","register","returnItemsArrayByCatchFilter","pageUrlCondition","element","attributeName","suffix","getAttribute","setAttribute","oldOnClick","oldOnClickProperty","onclick","blocking","removeAttribute","delayClick","delayedOnClick","ev","targetCatchFilter","target","matches","piwikTrigger","preventDefault","stopImmediatePropagation","useCurrentTarget","currentTarget","useWindowTarget","oldConfirm","confirm","oldHideMenu","HideMenu","oldCalloutManagerCloseAll","closeAll","confirmation","message","CalloutManager","newEvent","constructor","type","dispatchEvent","checkElementType","currentCheckedElementType","eventConfigsToProcess","registerOnEvent","elementType","processEvent","immediateProcessDeferred","deferred","delay","eventNodes","listDeletedProcessing","node","registerOnInit","detail","eventConfigDeferred","JSON","parse","stringify","deepCatch","mappings","deferredMappings","sessionStorage","deferredUrl","processEventInternal","filterFiletype","filetype","fieldname","getFileType","second2","parentFolderUrl","documentLibraryUrl","parentFolderTitle","parentFolderName","documentLibraryName","folderUrl","deletedList","console","log","trackEvent","error","removeItem","deferredItem","nextPageUrl","itemName","ext","pop","ProgId","bodyGetter","responseGetter","responseHeaders","duration","second","tempVersion","parseInt","typeOfContent","catchFilterPropertyName","objectType","sharedEvent","maps","sharedMappings","keySharedToDelete","processMappingsInternal","deepUrlsKeys","deepUrlKey","deepToProcess","deepUrl","makeDeepCatchRequest","xmlInsteadOfJson","fetchRetry","cache","language","retryOn","retries","retryDelay","text","selector","querySelector","removeStartAspx","processExpression","expression","splittedExpression","sourceType","valueExpression","slice","regExp","exec","getPropertyValueByPath","urlObj","URL","urlParams","searchParams","get","urlParts","replaceAsync","match","listUrl","isMappingIgnored","mappingExpression","obj","path","propertyPath","property","tempContentTypeId","foundCT","SHA3","SHA1","doc","getElementsByTagName","innerHTML","splitted","id","parentElement","title","closest","innerText","tempVarA","assign","Key","mode","str","searchValue","replacer","promise","fileName","dataLayerName","containersUrl","scripts","tags","createElement","isStgDebug","cookie","b","c","d","setTime","toUTCString","stgCreateCookie","qP","qPString","parentNode","insertBefore","n","api","arguments","parameters","pathname","INIT","URLSearchParams","history","pushState","state","apply","updateCurrentPath","CLICK","HISTORY","reject","resolve","GlobalArrayTracker","variableName","traceLog","fixArrayPush","ConsoleTracker","BroadcastingTracker","trackers","globalArray","params","some","require","useSettingsForm","dismiss","useState","inputs","setInputs","isLoading","setIsLoading","isSaving","setIsSaving","setError","loadSettings","useEffect","handleSubmit","handleInputChange","persist","handleCheckboxChange","checked","handleChoiceGroupChangeBoolean","option","setValue","Form","props","enableTrackingCheckbox","setEnableTrackingCheckbox","setEnableTracking","useConstCallback","Spinner","size","SpinnerSize","large","styles","root","textAlign","marginTop","onSubmit","Pivot","aria-label","PivotItem","headerText","Stack","tokens","childrenGap","Label","style","fontWeight","fontSize","Text","Checkbox","label","onChange","color","TextField","disabled","Link","data-interception","ChoiceGroup","selectedKey","options","display","marginBottom","marginLeft","applicationRole","PrimaryButton","Button","onClick","initializeIcons","disableWarnings","App","React","isOpen","setIsOpen","openPanel","dismissPanel","className","piwikProLink","Panel","PanelType","medium","onDismiss","closeButtonAriaLabel","Context","siteId","webId","webTitle","siteServerRelativeUrl","lastItem","userLoginName","userDisplayName","webServerRelativeUrl","listId","webTemplateConfiguration","Boolean","configureTracking","tracking","setup","baseUrl","ie11","customizations","GlobalSettings","getValue","theme","getTheme","effects","spacing","fonts","addPiwikSettings","isSiteAdmin","tryToAddPiwikProSettingsLink","navBarDataLinks","append","ReactDOM","render","settingsButton","contextMenu","settingsElement","interval","clearInterval","navigator","serviceWorker","ready","registration","unregister","catch","IsConnectedToMetaSite","MetaSiteId"],"mappings":"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","file":"static/js/main.3d09fae0.chunk.js","sourcesContent":["import { PnPClientStorage } from '@pnp/common';\r\nimport { IList, SPHttpClient, Web, sp } from '@pnp/sp/presets/all';\r\nimport { ISettings } from './ISettings';\r\nimport { ITrackerSettings } from './ITrackerSettings';\r\nimport { SettingsKeys } from './SettingsKeys';\r\nimport { Constants } from \"../Constants\";\r\n\r\nconst ensureSettingsList = async (siteUrl: string, listTitle: string): Promise<IList> => {\r\n    const list = await Web(siteUrl).lists.ensure(listTitle, \"\", 100, false, { OnQuickLaunch: false });\r\n    if (list.created) {\r\n        await list.list.fields.addText(\"Value\", 255);\r\n        await list.list.defaultView.fields.add(\"Value\");\r\n        await list.list.breakRoleInheritance();\r\n    }\r\n    return list.list;\r\n};\r\n\r\nconst getSettingsList = async (siteUrl: string, listTitle: string): Promise<{ [key: string]: string }> => {\r\n    const list = await ensureSettingsList(siteUrl, listTitle);\r\n    const items = await list.items.select('Id', 'Title', 'Value')();\r\n    const config: { [key: string]: string } = {};\r\n    for (let item of items) {\r\n        config[item.Title] = item.Value;\r\n    }\r\n    return config;\r\n};\r\n\r\nconst setSettingsList = async (siteUrl: string, listTitle: string, values: { [key: string]: string }): Promise<void> => {\r\n    const list = await ensureSettingsList(siteUrl, listTitle);\r\n    const items = await list.items.select('Id', 'Title', 'Value')();\r\n    const promises: Promise<any>[] = [];\r\n    for (let key of Object.keys(values)) {\r\n        const existingItem = items.find(x => x.Title === key);\r\n        if (existingItem) {\r\n            if (existingItem.Value !== values[key]) {\r\n                promises.push(list.items.getById(existingItem.Id).update({ Value: values[key] }));\r\n            }\r\n        } else {\r\n            promises.push(list.items.add({ Title: key, Value: values[key] }));\r\n        }\r\n    }\r\n    await Promise.all(promises);\r\n};\r\n\r\nconst getPropertyBag = async (siteUrl: string, selectProperties?: string[]): Promise<{ [key: string]: string }> => {\r\n    let properties: any;\r\n    if (selectProperties) {\r\n        properties = await Web(siteUrl).allProperties.select(...selectProperties)();\r\n    }\r\n    else {\r\n        properties = await Web(siteUrl).allProperties();\r\n    }\r\n\r\n    const result: { [key: string]: string } = {};\r\n    for (let key of Object.keys(properties)) {\r\n        result[key.replace(/_x005f_/gi, \"_\")] = properties[key];\r\n    }\r\n    return result;\r\n};\r\n\r\nconst setPropertyBag = async (siteUrl: string, values: { [key: string]: string | boolean }): Promise<void> => {\r\n    // We're using forged client.svc query here as setting property bag via REST API is not supported\r\n    const body = (() => {\r\n        let objectId: number = 4;\r\n        return `\r\n            <Request xmlns=\"http://schemas.microsoft.com/sharepoint/clientquery/2009\" SchemaVersion=\"15.0.0.0\" LibraryVersion=\"16.0.0.0\" ApplicationName=\"Javascript Library\">\r\n                <Actions>\r\n                    ${Object.keys(values).map(key => `\r\n                        <Method Name=\"SetFieldValue\" Id=\"${objectId++}\" ObjectPathId=\"4\">\r\n                            <Parameters>\r\n                                <Parameter Type=\"String\">${key}</Parameter>\r\n                                <Parameter Type=\"String\">${values[key]}</Parameter>\r\n                            </Parameters>\r\n                        </Method>\r\n                    `).join('')}\r\n                    <Method Name=\"Update\" Id=\"${objectId++}\" ObjectPathId=\"2\" />\r\n                </Actions>\r\n                <ObjectPaths>\r\n                    <StaticProperty Id=\"0\" TypeId=\"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\" Name=\"Current\" />\r\n                    <Property Id=\"2\" ParentId=\"0\" Name=\"Web\" />\r\n                    <Property Id=\"4\" ParentId=\"2\" Name=\"AllProperties\" />\r\n                </ObjectPaths>\r\n            </Request>\r\n        `;\r\n    })();\r\n\r\n    const endpoint = `${siteUrl}/_vti_bin/client.svc/ProcessQuery`;\r\n    const client = new SPHttpClient();\r\n\r\n    const res = await client.post(endpoint, {\r\n        headers: {\r\n            'Accept': '*/*',\r\n            'Content-Type': 'text/xml;charset=\"UTF-8\"',\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        },\r\n        body\r\n    });\r\n    const response = await res.json();\r\n\r\n    if (response[0].ErrorInfo) {\r\n        throw new Error(response[0].ErrorInfo.ErrorMessage);\r\n    }\r\n};\r\n\r\nconst getSettings = async (): Promise<ISettings> => {\r\n    const currentUserPiwikAdminPromise = Web(window.location.origin + Constants.piwikAdminServerRelativeUrl)\r\n        .currentUser\r\n        .select(\"IsSiteAdmin\")();\r\n    const propertyBagPromise = getPropertyBag(_spPageContextInfo.siteAbsoluteUrl);\r\n    const settingsListPromise = getSettingsList(_spPageContextInfo.siteAbsoluteUrl, Constants.siteCollectionSettingsListName);\r\n    const piwikProSiteDirectoryPromise = Web(window.location.origin + Constants.piwikAdminServerRelativeUrl)\r\n        .getList(\"/sites/PiwikAdmin/Lists/PiwikAdmin\")\r\n        .getItemsByCAMLQuery({ ViewXml: `<View><Query><Where><Eq><FieldRef Name=\"pwk_url\" /><Value Type=\"Text\">${_spPageContextInfo.siteAbsoluteUrl}</Value></Eq></Where></Query></View>` });\r\n\r\n    const currentUserPiwikAdmin = await currentUserPiwikAdminPromise;\r\n\r\n    let adminPropertyBag = {};\r\n    let adminSettingsList = {};\r\n\r\n    if (currentUserPiwikAdmin.IsSiteAdmin) {\r\n        const adminPropertyBagPromise = getPropertyBag(window.location.origin + Constants.piwikAdminServerRelativeUrl);\r\n        const adminSettingsListPromise = getSettingsList(window.location.origin + Constants.piwikAdminServerRelativeUrl, Constants.globalSettingsListName);\r\n        adminPropertyBag = await adminPropertyBagPromise;\r\n        adminSettingsList = await adminSettingsListPromise;\r\n    }\r\n\r\n    const propertyBag = await propertyBagPromise;\r\n    const settingsList = await settingsListPromise;\r\n    const piwikProSiteDirectory = await piwikProSiteDirectoryPromise;\r\n\r\n    const data: ISettings = {\r\n        ClientID: adminSettingsList[SettingsKeys.ClientID],\r\n        ClientSecret: adminSettingsList[SettingsKeys.ClientSecret],\r\n        ContainersUrl: adminPropertyBag[SettingsKeys.ContainersUrl],\r\n        EnforceSslComunication: adminPropertyBag[SettingsKeys.EnforceSslComunication] === 'true',\r\n        IsCurrentUserPiwikAdmin: currentUserPiwikAdmin.IsSiteAdmin,\r\n        IsTrackingActive: propertyBag[SettingsKeys.IsTrackingActive] === 'true',\r\n        JobVersion: adminPropertyBag[SettingsKeys.JobVersion],\r\n        PiwikStatus: !settingsList[SettingsKeys.PiwikStatus] || settingsList[SettingsKeys.PiwikStatus] === \"Processed\" ? piwikProSiteDirectory[0]?.pwk_status : settingsList[SettingsKeys.PiwikStatus],\r\n        SendDepartment: propertyBag[SettingsKeys.SendDepartment] === 'true',\r\n        SendExtendedUserinfo: propertyBag[SettingsKeys.SendExtendedUserinfo] === 'true',\r\n        SendJobTitle: propertyBag[SettingsKeys.SendJobTitle] === 'true',\r\n        SendOffice: propertyBag[SettingsKeys.SendOffice] === 'true',\r\n        SendUserIdEncoded: propertyBag[SettingsKeys.SendUserIdEncoded] === 'true',\r\n        SendUserName: propertyBag[SettingsKeys.SendUserName] === 'true',\r\n        SiteId: propertyBag[SettingsKeys.SiteId],\r\n        TemplateSendDepartment: adminPropertyBag[SettingsKeys.TemplateSendDepartment] === 'true',\r\n        TemplateSendExtendedUserinfo: adminPropertyBag[SettingsKeys.TemplateSendExtendedUserinfo] === 'true',\r\n        TemplateSendJobTitle: adminPropertyBag[SettingsKeys.TemplateSendJobTitle] === 'true',\r\n        TemplateSendOffice: adminPropertyBag[SettingsKeys.TemplateSendOffice] === 'true',\r\n        TemplateSendUserIdEncoded: adminPropertyBag[SettingsKeys.TemplateSendUserIdEncoded] === 'true',\r\n        TemplateSendUserName: adminPropertyBag[SettingsKeys.TemplateSendUserName] === 'true',\r\n        Url: adminPropertyBag[SettingsKeys.Url],\r\n        UseSha3: adminPropertyBag[SettingsKeys.UseSha3] === 'true',\r\n        UseSiteCollectionSettings: propertyBag[SettingsKeys.UseSiteCollectionSettings] === 'true'\r\n    };\r\n\r\n    return data;\r\n};\r\n\r\nconst setSettings = async (settings: ISettings): Promise<void> => {\r\n    const promises: Promise<any>[] = [];\r\n\r\n    if (settings.PiwikStatus === \"Adding\" || settings.PiwikStatus === \"Deleting\") {\r\n        if (_spPageContextInfo.webAbsoluteUrl.indexOf(\".sharepoint.com\") > -1) {\r\n            promises.push(setSettingsList(_spPageContextInfo.siteAbsoluteUrl, Constants.siteCollectionSettingsListName, {\r\n                [SettingsKeys.PiwikStatus]: settings.PiwikStatus\r\n            }));\r\n        } else {\r\n            promises.push(fetch(\r\n                `${_spPageContextInfo.siteAbsoluteUrl}/_vti_bin/CUSTOM/PiwikPROChangeTrackingStatus.svc/ChangeTrackingStatus?status=${settings.PiwikStatus === \"Adding\" ? \"0\" : \"1\"}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Accept\": \"application/json; odata=nometadata\",\r\n                        \"X-RequestDigest\": (await sp.site.getContextInfo())?.FormDigestValue?.toString()\r\n                    }\r\n                }\r\n            ));\r\n        }\r\n    }\r\n\r\n    if (settings.IsTrackingActive) {\r\n        promises.push(setPropertyBag(_spPageContextInfo.siteAbsoluteUrl, {\r\n            [SettingsKeys.SendDepartment]: settings.SendDepartment,\r\n            [SettingsKeys.SendExtendedUserinfo]: settings.SendExtendedUserinfo,\r\n            [SettingsKeys.SendJobTitle]: settings.SendJobTitle,\r\n            [SettingsKeys.SendOffice]: settings.SendOffice,\r\n            [SettingsKeys.SendUserIdEncoded]: settings.SendUserIdEncoded,\r\n            [SettingsKeys.SendUserName]: settings.SendUserName,\r\n            [SettingsKeys.UseSiteCollectionSettings]: settings.UseSiteCollectionSettings\r\n        }));\r\n    }\r\n\r\n    if (settings.IsCurrentUserPiwikAdmin) {\r\n        promises.push(setPropertyBag(window.location.origin + Constants.piwikAdminServerRelativeUrl, {\r\n            [SettingsKeys.ContainersUrl]: settings.ContainersUrl,\r\n            [SettingsKeys.EnforceSslComunication]: settings.EnforceSslComunication,\r\n            [SettingsKeys.TemplateSendDepartment]: settings.TemplateSendDepartment,\r\n            [SettingsKeys.TemplateSendExtendedUserinfo]: settings.TemplateSendExtendedUserinfo,\r\n            [SettingsKeys.TemplateSendJobTitle]: settings.TemplateSendJobTitle,\r\n            [SettingsKeys.TemplateSendOffice]: settings.TemplateSendOffice,\r\n            [SettingsKeys.TemplateSendUserIdEncoded]: settings.TemplateSendUserIdEncoded,\r\n            [SettingsKeys.TemplateSendUserName]: settings.TemplateSendUserName,\r\n            [SettingsKeys.Url]: settings.Url,\r\n            [SettingsKeys.UseSha3]: settings.UseSha3\r\n        }));\r\n\r\n        promises.push(setSettingsList(window.location.origin + Constants.piwikAdminServerRelativeUrl, Constants.globalSettingsListName, {\r\n            [SettingsKeys.ClientID]: settings.ClientID,\r\n            [SettingsKeys.ClientSecret]: settings.ClientSecret\r\n        }));\r\n    }\r\n\r\n    await Promise.all(promises);\r\n};\r\n\r\nconst getTrackerSettingsWithCaching = async (): Promise<ITrackerSettings> => {\r\n    const storage = new PnPClientStorage();\r\n    return await storage.session.getOrPut(`Piwik:TrackerSettings:${_spPageContextInfo.siteAbsoluteUrl}`, async (): Promise<ITrackerSettings> => {\r\n        const propertyBagPromise = getPropertyBag(_spPageContextInfo.siteAbsoluteUrl);\r\n        const adminPropertyBagPromise = getPropertyBag(window.location.origin + Constants.piwikAdminServerRelativeUrl);\r\n\r\n        const propertyBag = await propertyBagPromise;\r\n        const adminPropertyBag = await adminPropertyBagPromise;\r\n\r\n        const useSiteCollectionSettings = propertyBag[SettingsKeys.UseSiteCollectionSettings] === 'true';\r\n        const sendExtendedUserinfo = useSiteCollectionSettings\r\n            ? propertyBag[SettingsKeys.SendExtendedUserinfo] === 'true'\r\n            : adminPropertyBag[SettingsKeys.TemplateSendExtendedUserinfo] === 'true';\r\n\r\n        const data: ITrackerSettings = {\r\n            ContainersUrl: adminPropertyBag[SettingsKeys.ContainersUrl]\r\n                || adminPropertyBag[SettingsKeys.Url]?.replace(/\\.piwik\\.pro/gi, \".containers.piwik.pro\"),\r\n            IsTrackingActive: propertyBag[SettingsKeys.IsTrackingActive] === 'true',\r\n            SendDepartment: sendExtendedUserinfo && (useSiteCollectionSettings\r\n                ? propertyBag[SettingsKeys.SendDepartment] === 'true'\r\n                : adminPropertyBag[SettingsKeys.TemplateSendDepartment] === 'true'),\r\n            SendJobTitle: sendExtendedUserinfo && (useSiteCollectionSettings\r\n                ? propertyBag[SettingsKeys.SendJobTitle] === 'true'\r\n                : adminPropertyBag[SettingsKeys.TemplateSendJobTitle] === 'true'),\r\n            SendOffice: sendExtendedUserinfo && (useSiteCollectionSettings\r\n                ? propertyBag[SettingsKeys.SendOffice] === 'true'\r\n                : adminPropertyBag[SettingsKeys.TemplateSendOffice] === 'true'),\r\n            SendUserIdEncoded: useSiteCollectionSettings\r\n                ? propertyBag[SettingsKeys.SendUserIdEncoded] === 'true'\r\n                : adminPropertyBag[SettingsKeys.TemplateSendUserIdEncoded] === 'true',\r\n            SendUserName: sendExtendedUserinfo && (useSiteCollectionSettings\r\n                ? propertyBag[SettingsKeys.SendUserName] === 'true'\r\n                : adminPropertyBag[SettingsKeys.TemplateSendUserName] === 'true'),\r\n            SiteId: propertyBag[SettingsKeys.SiteId],\r\n            Url: adminPropertyBag[SettingsKeys.Url],\r\n            UseSha3: adminPropertyBag[SettingsKeys.UseSha3] === 'true'\r\n        };\r\n\r\n        return data;\r\n    }, new Date(Date.now() + Constants.trackerSettingsCacheExpirationInMinutes * 60 * 1000));\r\n};\r\n\r\nexport default {\r\n    getSettings,\r\n    setSettings,\r\n    getTrackerSettingsWithCaching\r\n};","\r\n/** Holds data about a navigation event, leveragingthe html5 browser history API */\r\nexport interface INavEvent {\r\n  type: NAV_TYPE;\r\n  /** current page URL hostname */\r\n  origin: string;\r\n  /** current page URL path */\r\n  pathname: string;\r\n  /** current page URL search query => ?, #, structured in an array */\r\n  search: URLSearchParams;\r\n  /** an array of the different query param in the url */\r\n  search_decoded?: {key:string,value:string}[];\r\n}\r\n\r\n/** the html5 browser history api differentiates between some type navigation events, when clicking on a html element, using the back/forward browser buttons... */\r\nexport enum NAV_TYPE {\r\n  HISTORY,    //0\r\n  CLICK,      //1\r\n  /** Initially state, right after page has been loaded */\r\n  INIT,       //2\r\n  /** represents the spfx page transition event */\r\n  SP_PAGE_TRANSITION //todo: some custom logic may be needed when sp page transtion event is triggered, but url is not changed.\r\n}","export class Constants {\r\n    public static readonly piwikAdminServerRelativeUrl = \"/sites/PiwikAdmin\";\r\n    public static readonly globalSettingsListName = \"PiwikConfig\";\r\n    public static readonly siteCollectionSettingsListName = \"PiwikSettings\";\r\n    public static readonly trackerSettingsCacheExpirationInMinutes = 60;\r\n    public static readonly version = \"1.1.1.0\";\r\n\r\n    //PROD\r\n    //public static readonly configUrl: string = \"https://piwikpro-sharepoint-api.azurewebsites.net/api/config\";\r\n\r\n    //DEV online\r\n    //  public static readonly configUrl: string = `${Constants.piwikAdminServerRelativeUrl}/_api/web/GetFileByServerRelativeUrl('${Constants.piwikAdminServerRelativeUrl}/Style Library/Dev/piwik-config.json')/$value`;\r\n    \r\n    //DEV onprem 2013\r\n    // public static readonly configUrl: string = `${Constants.piwikAdminServerRelativeUrl}/_api/web/GetFileByServerRelativeUrl('${Constants.piwikAdminServerRelativeUrl}/Style Library/Dev/piwik-config-onprem-2013.json')/$value`;\r\n\r\n    //DEV onprem 2016\r\n    // public static readonly configUrl: string = `${Constants.piwikAdminServerRelativeUrl}/_api/web/GetFileByServerRelativeUrl('${Constants.piwikAdminServerRelativeUrl}/Style Library/Dev/piwik-config-onprem-2016.json')/$value`;\r\n\r\n    //DEV onprem 2019\r\n    //public static readonly configUrl: string = `${Constants.piwikAdminServerRelativeUrl}/_api/web/GetFileByServerRelativeUrl('${Constants.piwikAdminServerRelativeUrl}/Style Library/Dev/piwik-config-onprem-2019.json')/$value`;\r\n\r\n    //PROD common SPonprems\r\n    public static readonly configUrl: string = `${Constants.piwikAdminServerRelativeUrl}/_api/web/GetFileByServerRelativeUrl('${Constants.piwikAdminServerRelativeUrl}/Style Library/PROD/piwik-config.json')/$value`;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piwikProLink\":\"App_piwikProLink__30Hx0\"};","import { PnPClientStorage } from '@pnp/common';\r\nimport SHA1 from \"crypto-js/sha1\";\r\nimport SHA3 from \"crypto-js/sha3\";\r\nimport { TrackersProvider } from './trackers/TrackersProvider';\r\nimport { ITracker } from \"./trackers/ITracker\";\r\nimport { IContext } from \"./contexts/IContext\";\r\nimport { Constants } from \"../Constants\";\r\nimport fetchRetry from \"fetch-retry\";\r\nimport { ITrackerSettings } from \"../services/ITrackerSettings\";\r\nimport SettingsService from \"../services/SettingsService\";\r\nimport { INavEvent, NAV_TYPE } from './IUrlTrackerProps';\r\n\r\nexport class Tracking {\r\n  private config: any;\r\n  private trackerSettings: ITrackerSettings;\r\n  private tracker: ITracker;\r\n  private selectedRows: any;\r\n  private event: any;\r\n  private secondSearchAvoid = [];\r\n  private secondListItemDirectViewArray = [];\r\n  private secondlistItemAttachmentViewArray = [];\r\n  private deletedListsBefore = [];\r\n  private deletedListsAfter = [];\r\n  private fetchOld: (input: RequestInfo, init?: RequestInit) => any = window.fetch.bind(window);\r\n  private clickedCurrentTarget;\r\n  private _nav: INavEvent;\r\n\r\n  constructor(private readonly context: IContext) { }\r\n\r\n  public async init(): Promise<void> {\r\n    this.trackerSettings = await SettingsService.getTrackerSettingsWithCaching();\r\n\r\n    if (!this.trackerSettings.IsTrackingActive)\r\n      return;\r\n\r\n    await this.loadTagManager();\r\n\r\n    const version = _spPageContextInfo.siteClientTag.substring(_spPageContextInfo.siteClientTag.lastIndexOf(\"$\") + 1, _spPageContextInfo.siteClientTag.length);\r\n\r\n    const configUrl = `${Constants.configUrl}?version=${version}&tenant=${window.location.hostname}`;\r\n    const configResponse = await fetch(configUrl);\r\n    this.config = await configResponse.json();\r\n    const trackerInit = () => {\r\n      const trackersProvider = new TrackersProvider(this.config, this.context);\r\n      this.tracker = trackersProvider.getTracker();\r\n    }\r\n    trackerInit();\r\n    this.trackPageView();\r\n\r\n    const trackPageView = () => {\r\n      this.trackPageView();\r\n      this.processDeferredEvent();\r\n    };\r\n\r\n    // MDS\r\n    if ((window as any).asyncDeltaManager) {\r\n      (window as any).asyncDeltaManager.add_pageLoaded(() => {\r\n        setTimeout(async (): Promise<void> => {\r\n          await this.loadTagManager();\r\n          trackPageView();\r\n          initInterceptors();\r\n          trackerInit();\r\n          // this.setEventInterceptors(window);\r\n          \r\n        }, 10);\r\n      });\r\n    } else {\r\n      await this.urlTracker();\r\n    }\r\n\r\n    document.addEventListener('piwik.pageView', trackPageView);\r\n    const initInterceptors = () => {\r\n      this.setXMLHttpRequestInterceptor(window);\r\n      this.setFetchInterceptor(window);\r\n      this.setPostMessageInterceptor(window);\r\n      this.setEventInterceptors(window);\r\n      this.setSelectedRowsChangedInterceptor(window);\r\n      window.addEventListener(\"click\", (event: any) => this.event = event, true);\r\n      window.addEventListener(\"click\", () => {\r\n        setTimeout(() => {\r\n          const iframes = document.querySelectorAll(\"iframe\");\r\n          Array.from(iframes).filter(x => x.src.startsWith(window.location.origin) || x.src.startsWith(\"/\")).forEach((iframe) => {\r\n            if (!(iframe.contentWindow as any).interceptorRegistered) {\r\n              (iframe.contentWindow as any).interceptorRegistered = true;\r\n              this.setXMLHttpRequestInterceptor(iframe.contentWindow);\r\n              this.setFetchInterceptor(iframe.contentWindow);\r\n              this.setPostMessageInterceptor(iframe.contentWindow);\r\n              this.setEventInterceptors(iframe.contentWindow);\r\n              this.setSelectedRowsChangedInterceptor(iframe.contentWindow);\r\n              iframe.contentWindow.addEventListener(\"click\", () => {\r\n                setTimeout(() => {\r\n                  if (!(window as any).interceptorRegisteredFromIframe) {\r\n                    (window as any).interceptorRegisteredFromIframe = true;\r\n                    this.setXMLHttpRequestInterceptor(window);\r\n                    this.setFetchInterceptor(window);\r\n                    this.setPostMessageInterceptor(window);\r\n                    this.setEventInterceptors(window);\r\n                    // this.setSelectedRowsChangedInterceptor(window);\r\n                  }\r\n                }, 1000);\r\n              }, true);\r\n            }\r\n          });\r\n        }, 2000);\r\n      }, true); \r\n    }\r\n    initInterceptors();\r\n\r\n    this.processDeferredEvent();\r\n  }\r\n\r\n  private decodeUrls(res: any) {\r\n    const responseKeys = Object.keys(res);\r\n    responseKeys.forEach(responseKey => {\r\n      if (res && res[responseKey] && res[responseKey] != null && res[responseKey] != undefined && (typeof (res[responseKey])).toLowerCase() === \"string\") {\r\n        res[responseKey] = res[responseKey].startsWith(\"http\") ? decodeURI(res[responseKey]) : res[responseKey]\r\n      }\r\n    });\r\n  }\r\n\r\n  private inIframe () {\r\n    try {\r\n        return window.self !== window.top;\r\n    } catch (e) {\r\n        return true;\r\n    }\r\n}\r\n\r\n  public async trackPageView(): Promise<void> {\r\n    const eventConfigs = this.config.events.filter(x => x.eventType.toLowerCase() === \"pageview\");\r\n\r\n    if (!eventConfigs)\r\n      return;\r\n    eventConfigs.forEach(eventConfig => {\r\n      if ((!eventConfig.pageUrl || new RegExp(eventConfig.pageUrl).test(window.location.href) || \r\n       new RegExp(eventConfig.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)) && !this.inIframe()) {\r\n        if (eventConfig.name === \"pageViewEnrichment\"){\r\n          if(eventConfig.hasOwnProperty(\"isOnNullPage\") && !eventConfig.isOnNullPage && this.context.pageListId === null && this.context.pageItemId === null) {\r\n            return;\r\n          }\r\n          if(eventConfig.hasOwnProperty(\"isOnNullPage\") && eventConfig.isOnNullPage && this.context.pageListId !== null && this.context.pageItemId !== null) {\r\n            return;\r\n          }\r\n        }\r\n        this.processMappings(eventConfig, window.location.href, null, null, null).then((res) => {\r\n          this.decodeUrls(res);\r\n          if (eventConfig.name === \"pageViewEnrichment\") {\r\n            if (res[\"!testPropertyForDetectNews\"] && res[\"!testPropertyForDetectNews\"].indexOf(\"titlePlaceholder\") > -1 && res.contentTypeName.indexOf(\"Site Page\") > -1) {\r\n              res.contentType = \"News Page\";\r\n            }\r\n          }\r\n          const mappingsKeys = Object.keys(res)\r\n          mappingsKeys.forEach(key => {\r\n            if (key.startsWith(\"!\")) {\r\n              delete res[key]\r\n            }\r\n          });\r\n          this.tracker.trackPageView(eventConfig[\"name\"], window.location.href, res);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  private setXMLHttpRequestInterceptor(window: any): void {\r\n\r\n    function tryDecodeURI(url)\r\n    {\r\n      try {\r\n        return decodeURI(url);\r\n    } catch (e) {\r\n        return url;\r\n    }\r\n  }\r\n\r\n    let that = this;\r\n    let open = window.XMLHttpRequest.prototype.open;\r\n    let send = window.XMLHttpRequest.prototype.send;\r\n\r\n    const interceptXhrMethods = function () {\r\n      if(window.XMLHttpRequest) {\r\n      window.XMLHttpRequest.prototype.open = function (method, url, async, user, pass) {\r\n        this._method = method;\r\n        this._url = url;\r\n        open.call(this, method, url, async, user, pass);\r\n\r\n        window.XMLHttpRequest.prototype.send = function (data) {\r\n          let self: XMLHttpRequest = this;\r\n          let start = new Date().getTime();\r\n          let oldOnReadyStateChange;\r\n          let method: string = this._method;\r\n          let url: string = this._url;\r\n          const deep = {};\r\n\r\n          function onReadyStateChange() {\r\n            if (self.readyState === 4 /* complete */) {\r\n              let time = new Date().getTime() - start;\r\n\r\n              // Get the raw header string\r\n              var headers = self.getAllResponseHeaders();\r\n\r\n              // Convert the header string into an array\r\n              // of individual headers\r\n              var arr = headers.trim().split(/[\\r\\n]+/);\r\n\r\n              // Create a map of header names to values\r\n              var headerMap = {};\r\n              arr.forEach(line => {\r\n                var parts = line.split(': ');\r\n                var header = parts.shift();\r\n                var value = parts.join(': ');\r\n                headerMap[header] = value;\r\n              });\r\n              if (url.includes(\"_vti_bin/client.svc/ProcessQuery\")) {\r\n                let parser = new DOMParser();\r\n                let xmlDoc = parser.parseFromString(data, \"text/xml\");\r\n                data = xmlDoc;\r\n              }\r\n\r\n              if (!that.isStartPage(url)) {\r\n                that.processAjaxRequest(url, method, async () => data, async () => self.response, headerMap, time, deep);\r\n              }\r\n            }\r\n\r\n            if (oldOnReadyStateChange) {\r\n              oldOnReadyStateChange();\r\n            }\r\n          }\r\n\r\n          if (self.addEventListener) {\r\n            self.addEventListener(\"readystatechange\", onReadyStateChange, false);\r\n          } else {\r\n            oldOnReadyStateChange = self.onreadystatechange;\r\n            self.onreadystatechange = onReadyStateChange;\r\n          }\r\n\r\n          const eventConfigs: Array<any> = that.config.events.filter(x =>\r\n            x.eventType.toLowerCase() === \"ajax\" &&\r\n            ((x.method == null && method.toLowerCase() === \"get\") || x.method.toLowerCase() === method.toLowerCase()) &&\r\n            new RegExp(x.catchFilter, \"i\").test(tryDecodeURI(url)));\r\n\r\n          (async () => {\r\n            if (!that.isStartPage(url)) {\r\n              for (let i = 0; i < eventConfigs.length; i++) {\r\n                if (eventConfigs[i].deepCatchPre) {\r\n                  await that.processDeepCatch(\r\n                    eventConfigs[i].deepCatchPre,\r\n                    url,\r\n                    async () => data,\r\n                    async () => { },\r\n                    {},\r\n                    {},\r\n                    deep,\r\n                    eventConfigs[i]\r\n                  );\r\n                }\r\n              }\r\n            }\r\n\r\n            send.call(self, data);\r\n          })();\r\n        };\r\n      };\r\n    };\r\n  };\r\n\r\n    interceptXhrMethods();\r\n    setInterval(interceptXhrMethods, 1000);\r\n  }\r\n\r\n  private setFetchInterceptor(window: Window): void {\r\n    function tryDecodeURI(url)\r\n    {\r\n      try {\r\n        return decodeURI(url);\r\n    } catch (e) {\r\n        return url;\r\n    }\r\n  }\r\n\r\n    if (!/\\{\\s+\\[native code\\]/.test(Function.prototype.toString.call(window.fetch))) {\r\n      return;\r\n    }\r\n\r\n    window.fetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\r\n      const inputClone = typeof input === 'string' || input instanceof String ? null : await input.clone();\r\n      const method = inputClone == null ? \"GET\" : (inputClone.method || \"GET\");\r\n      const url = inputClone == null ? input as string : inputClone.url;\r\n\r\n      if (this.isStartPage(url)) {\r\n        return await this.fetchOld(input, init);\r\n      }\r\n\r\n      const eventConfigs: Array<any> = this.config.events.filter(x =>\r\n        x.eventType.toLowerCase() === \"ajax\" &&\r\n        ((x.method == null && method.toLowerCase() === \"get\") || x.method.toLowerCase() === method.toLowerCase()) &&\r\n        new RegExp(x.catchFilter, \"i\").test(tryDecodeURI(url)));\r\n\r\n      const deep = {};\r\n\r\n      for (let i = 0; i < eventConfigs.length; i++) {\r\n        if (eventConfigs[i].deepCatchPre) {\r\n          await this.processDeepCatch(\r\n            eventConfigs[i].deepCatchPre,\r\n            url,\r\n            async () => inputClone == null ? undefined : await inputClone.json(),\r\n            async () => { },\r\n            {},\r\n            {},\r\n            deep,\r\n            eventConfigs[i]\r\n          );\r\n        }\r\n      }\r\n\r\n      let start = new Date().getTime();\r\n      const result = await this.fetchOld(input, init);\r\n      const resultClone = result.clone();\r\n\r\n      this.processAjaxRequest(\r\n        url,\r\n        method,\r\n        async () => inputClone == null ? undefined : await inputClone.json(),\r\n        async () => await resultClone.clone().json(),\r\n        {},\r\n        new Date().getTime() - start,\r\n        deep\r\n      );\r\n\r\n      return result;\r\n    };\r\n  }\r\n\r\n  private setPostMessageInterceptor(window: Window): void {\r\n    window.addEventListener(\r\n      'message',\r\n      event => this.processPostMessage(event.data));\r\n  }\r\n  private returnItemsArrayByCatchFilter(catchFilter): Array<any> {\r\n    let elements: any;\r\n    if (catchFilter.startsWith(\"eval:\")) {\r\n      try {\r\n        elements = eval(catchFilter.substring(5)) || [];\r\n        if ((!Array.isArray(elements)) && (!NodeList.prototype.isPrototypeOf(elements))) {\r\n          return elements = [elements];\r\n        } else {\r\n          return elements\r\n        }\r\n      }\r\n      catch{\r\n        //for avoid errors in console if there is no element\r\n      }\r\n    } else {\r\n      try {\r\n        elements = window.document.querySelectorAll(catchFilter).length > 0 ? window.document.querySelectorAll(catchFilter) : window.document.activeElement[\"contentDocument\"].querySelectorAll(catchFilter);\r\n      }\r\n      catch { }\r\n      return elements\r\n    }\r\n\r\n  }\r\n\r\n  private setEventInterceptors(window: Window): void {\r\n    const eventConfigs = this.config.events.filter(x => x.eventType.toLowerCase() === \"event\");\r\n    for (let eventConfig of eventConfigs) {\r\n      const register = () => {\r\n        setTimeout(() => {\r\n          let elements = this.returnItemsArrayByCatchFilter(eventConfig.catchFilter);\r\n          if (elements) {\r\n            if (!eventConfig.pageUrlCondition || (eventConfig.pageUrlCondition && (new RegExp(eventConfig.pageUrlCondition).test(window.location.href)\r\n            || new RegExp(eventConfig.pageUrlCondition).test(window.location.origin + _spPageContextInfo.serverRequestPath)))) {\r\n              elements.forEach(element => {\r\n                const attributeName = `${eventConfig.name}${eventConfig.suffix ? eventConfig.suffix : ''}`;\r\n\r\n                if (!(element.getAttribute ? element.getAttribute(attributeName) : (element as any)[attributeName])) {\r\n                  element.setAttribute ? element.setAttribute(attributeName, true) : ((element as any)[attributeName] = true);\r\n                  let oldOnClick = element.getAttribute ? element.getAttribute('onclick') : undefined;\r\n                  let oldOnClickProperty = element.onclick;\r\n\r\n                  if (oldOnClick === 'return false;')\r\n                    oldOnClick = null;\r\n\r\n                  if (eventConfig.blocking) {\r\n                    if (oldOnClick)\r\n                      element.removeAttribute('onclick');\r\n                    if (oldOnClickProperty)\r\n                      element.onclick = null;\r\n                  }\r\n                  if (eventConfig.delayClick) {\r\n                    if (!element.getAttribute(\"delayClick\")) {\r\n                      element.removeAttribute('onclick');\r\n                      let delayedOnClick = `setTimeout(() => {${oldOnClick};}, 100)`;\r\n                      element.setAttribute('onclick', delayedOnClick);\r\n                      element.setAttribute(\"delayClick\", true)\r\n                    }\r\n                  }\r\n                  element.addEventListener(eventConfig.method, async (ev: Event) => {\r\n                    if (eventConfig.targetCatchFilter && !(ev.target as HTMLElement).matches(eventConfig.targetCatchFilter))\r\n                      return;\r\n\r\n                    if (eventConfig.blocking) {\r\n                      if (!(ev as any).piwikTrigger) {\r\n                        ev.preventDefault();\r\n                        ev.stopImmediatePropagation();\r\n\r\n                        if(eventConfig.useCurrentTarget)\r\n                        {\r\n                          this.clickedCurrentTarget = ev.currentTarget;\r\n                        }\r\n\r\n                        if (eventConfig.useWindowTarget) {\r\n                            if (eventConfig.name.indexOf(\"topMenuItem\") > -1) {\r\n                                if (ev.target[\"className\"].indexOf(\"ms-ContextualMenu-itemText\") > -1) {\r\n                                    this.clickedCurrentTarget = ev.target[\"parentElement\"][\"parentElement\"];\r\n                                }\r\n                                else {\r\n                                    this.clickedCurrentTarget = ev.target;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (oldOnClick)\r\n                          element.setAttribute('onclick', oldOnClick);\r\n                        if (oldOnClickProperty)\r\n                          element.onclick = oldOnClickProperty;\r\n\r\n                        const oldConfirm = window.confirm;\r\n                        const oldHideMenu = (window as any).HideMenu;\r\n                        const oldCalloutManagerCloseAll = window[\"CalloutManager\"]?.closeAll;\r\n                        let response = true;\r\n\r\n                        if (eventConfig.confirmation) {\r\n                          window.confirm = function (message) {\r\n                            response = oldConfirm(message);\r\n                            return false;\r\n                          }\r\n\r\n                          if (oldHideMenu)\r\n                            (window as any).HideMenu = () => { };\r\n                          if (window[\"CalloutManager\"]?.closeAll)\r\n                            CalloutManager.closeAll = () => true;\r\n\r\n                          if (oldOnClick) {\r\n                            eval(oldOnClick);\r\n                          } else {\r\n                            const newEvent = new (ev as any).constructor(ev.type, ev);\r\n                            newEvent.piwikTrigger = true;\r\n                            ev.target.dispatchEvent(newEvent);\r\n                          }\r\n                          window.confirm = function () { return true; };\r\n                        }\r\n\r\n                        if (response) {\r\n                          const currentCheckedElementType = await this.checkElementType();\r\n                          const eventConfigsToProcess: any[] = eventConfigs.filter(x => x.blocking && x.catchFilter === eventConfig.catchFilter && x.registerOnEvent === eventConfig.registerOnEvent);\r\n                          const promises = eventConfigsToProcess.map(async x => {\r\n                            if (((!x.elementType  || (x.elementType && x.elementType === currentCheckedElementType)) && (new RegExp(x.pageUrl).test(window.location.href) || new RegExp(x.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath))) && (!eventConfig.targetCatchFilter || (ev.target as HTMLElement).matches(eventConfig.targetCatchFilter))){\r\n                              await this.processEvent(x)\r\n                              if(x.immediateProcessDeferred && x.deferred) {\r\n                                await this.processDeferredEvent();\r\n                              }\r\n                            }\r\n                          });\r\n                          await Promise.all(promises);\r\n                          if (oldHideMenu && (window as any).HideMenu)\r\n                            (window as any).HideMenu = oldHideMenu;\r\n                          if (oldCalloutManagerCloseAll && CalloutManager?.closeAll)\r\n                            CalloutManager.closeAll = oldCalloutManagerCloseAll;\r\n\r\n                          if (oldOnClick && eventConfig.confirmation) {\r\n                            eval(oldOnClick);\r\n                          } else {\r\n                            const newEvent = new (ev as any).constructor(ev.type, ev);\r\n                            newEvent.piwikTrigger = true;\r\n                            ev.target.dispatchEvent(newEvent);\r\n                          }\r\n                        }\r\n\r\n                        window.confirm = oldConfirm;\r\n\r\n                        if (oldOnClick)\r\n                          element.removeAttribute('onclick');\r\n                        }\r\n                      } else {\r\n                        const currentCheckedElementType = await this.checkElementType();\r\n                          if (!eventConfig.elementType  || (eventConfig.elementType && eventConfig.elementType === currentCheckedElementType)) {\r\n                            await this.processEvent(eventConfig);\r\n                            if(eventConfig.immediateProcessDeferred && eventConfig.deferred) {\r\n                              await this.processDeferredEvent();\r\n                            }\r\n                            }\r\n                      }\r\n                  }, true);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }, eventConfig.delay || 0);\r\n      };\r\n\r\n      if (eventConfig.registerOnEvent) {\r\n        if (eventConfig.eventNodes) {\r\n          let elements = window.document.querySelectorAll(eventConfig.eventNodes);\r\n          elements.forEach(element => {\r\n            element.addEventListener(eventConfig.registerOnEvent, () => register(), true)\r\n          });\r\n        } else {\r\n          window.document.addEventListener(eventConfig.registerOnEvent, () => register(), true);\r\n          if(eventConfig.listDeletedProcessing)\r\n          {\r\n            this.deletedListsBefore = [];\r\n            document.querySelectorAll('#applist>div>div>div>div>a').forEach(node => this.deletedListsBefore.push(node));\r\n          }\r\n        }\r\n        if (eventConfig.registerOnInit) {\r\n          register();\r\n        }\r\n      } else {\r\n        register();\r\n      }\r\n    }\r\n  }\r\n\r\n  private setSelectedRowsChangedInterceptor(window: Window) {\r\n    window.document.addEventListener('piwik.selectedRowsChanged', (e: CustomEvent) => this.selectedRows = e.detail);\r\n  }\r\n\r\n  private async processEvent(eventConfig: any): Promise<void> {\r\n    if (eventConfig.deferred) {\r\n      if (!eventConfig.pageUrl || new RegExp(eventConfig.pageUrl).test(window.location.href)\r\n      || new RegExp(eventConfig.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)) {\r\n        const eventConfigDeferred = JSON.parse(JSON.stringify(eventConfig));\r\n        eventConfigDeferred.deepCatch = null;\r\n        eventConfigDeferred.mappings = eventConfig.deferredMappings;\r\n\r\n        const res = await this.processMappings(eventConfigDeferred, window.location.href, null, null, null);\r\n\r\n        window.sessionStorage[\"piwik-deferred\"] = JSON.stringify({\r\n          name: eventConfigDeferred.name,\r\n          eventType: eventConfigDeferred.eventType,\r\n          method: eventConfigDeferred.method,\r\n          catchFilter: eventConfigDeferred.catchFilter,\r\n          pageUrl: eventConfigDeferred.pageUrl,\r\n          suffix: eventConfigDeferred.suffix,\r\n          deferredMappings: res,\r\n          deferredUrl: window.location.href,\r\n        });\r\n      }\r\n    } else {\r\n      if (!eventConfig.pageUrl || new RegExp(eventConfig.pageUrl).test(window.location.href) || new RegExp(eventConfig.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)) {\r\n        await this.processEventInternal(eventConfig, window.location.href);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async processEventInternal(eventConfig: any, url: string, deferredMappings: any = null): Promise<void> {\r\n    try {\r\n      const res = await this.processMappings(eventConfig, url, null, null, null, deferredMappings);\r\n      if (eventConfig.filterFiletype && (eventConfig.filterFiletype == null || eventConfig.filterFiletype.filetype == null || eventConfig.filterFiletype.fieldname == null)) {\r\n        return;\r\n      } else {\r\n        if (eventConfig.filterFiletype && eventConfig.filterFiletype.fieldname) {\r\n          const filetype = this.getFileType(res[eventConfig.filterFiletype.fieldname])\r\n          if (eventConfig.filterFiletype.filetype != filetype) {\r\n            return;\r\n          }\r\n        }\r\n        if ((eventConfig.pageUrl && !(new RegExp(eventConfig.pageUrl).test(url)\r\n        || new RegExp(eventConfig.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)))) {\r\n          return;\r\n        } else {\r\n          if (eventConfig.name.indexOf(\"listCreated\") > -1) {\r\n            if (res[\"!DocumentTemplateUrl\"] !== null) {\r\n              eventConfig.name = \"documentLibraryCreated\";\r\n            }\r\n          }\r\n\r\n          if (eventConfig.name.indexOf(\"reloadTrackerFor\") > -1) {\r\n            return;\r\n          }\r\n\r\n          if (eventConfig.name.indexOf(\"listItemAttachmentView\") > -1) {\r\n            let second2 = (new Date().getTime() / 1000).toString();\r\n            if (second2.indexOf(\".\") > -1) {\r\n              second2 = second2.split('.')[0];\r\n              if (this.secondlistItemAttachmentViewArray.indexOf(second2) > -1) {\r\n                return;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (eventConfig.name.indexOf(\"folderDownloaded\") > -1 || eventConfig.name.indexOf(\"fileDownloaded\") > -1\r\n            || eventConfig.name.indexOf(\"folderCreatedOrUploaded\") > -1 || eventConfig.name.indexOf(\"filePinnedToTop\") > -1\r\n            || eventConfig.name.indexOf(\"fileUnpinned\") > -1 || eventConfig.name.indexOf(\"folderPinnedToTop\") > -1\r\n            || eventConfig.name.indexOf(\"folderDeleted\") > -1 || eventConfig.name.indexOf(\"fileUploaded\") > -1\r\n            || eventConfig.name.indexOf(\"fileDeleted\") > -1 || eventConfig.name.indexOf(\"fileShared\") > -1\r\n            || eventConfig.name.indexOf(\"folderShared\") > -1 || eventConfig.name.indexOf(\"fileOpenedOrEdited\") > -1\r\n            || eventConfig.name.indexOf(\"folderUnpinned\") > -1) {\r\n            if (res.parentFolderUrl == res.documentLibraryUrl) {\r\n              res.parentFolderTitle = res[\"!listTitle\"];\r\n              res.parentFolderName = res.documentLibraryName;\r\n            }\r\n          }\r\n\r\n          if (eventConfig.name.indexOf(\"fileDownloaded\") > -1 || eventConfig.name.indexOf(\"fileOpenedOrEdited\") > -1)\r\n          {\r\n            if (!res[\"fileExt\"])\r\n            {\r\n                return;\r\n            }\r\n          }\r\n\r\n          const mappingsKeys = Object.keys(res)\r\n          mappingsKeys.forEach(key => {\r\n            if (key.startsWith(\"!\")) {\r\n              delete res[key]\r\n            }\r\n          });\r\n          this.decodeUrls(res);\r\n          \r\n          if (eventConfig.name.indexOf(\"listItemAttachmentView\") > -1) {\r\n            let second2 = (new Date().getTime() / 1000).toString();\r\n            if (second2.indexOf(\".\") > -1) {\r\n              second2 = second2.split('.')[0];\r\n              this.secondlistItemAttachmentViewArray.push(second2);\r\n            }\r\n          }\r\n\r\n          if (eventConfig.name.indexOf(\"pageDeleted\") > -1) {\r\n            try{\r\n            if (res[\"pageName\"].indexOf(\".aspx\") > -1) {\r\n              res[\"pageName\"] = res[\"pageName\"].replace(\".aspx\",\"\");\r\n            }\r\n          }\r\n          catch{}\r\n          }\r\n          if (eventConfig.name.indexOf(\"folderShared\") > -1) {\r\n            if (res.folderUrl === res.documentLibraryUrl) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          if(eventConfig.listDeletedProcessing)\r\n          {\r\n            try\r\n            {\r\n              this.deletedListsAfter = [];\r\n              document.querySelectorAll('#applist>div>div>div>div>a').forEach(node => this.deletedListsAfter.push(node));\r\n              var deletedList;\r\n              for (var i = 0; i < this.deletedListsBefore.length; i++) {\r\n                  if(this.deletedListsAfter.indexOf(this.deletedListsBefore[i])==-1)\r\n                  {\r\n                    deletedList = this.deletedListsBefore[i];\r\n                    break;\r\n                  }\r\n             }\r\n\r\n              res[\"listID\"] = deletedList[\"id\"].replace(\"viewlist\",\"\");\r\n              res[\"listTitle\"] = deletedList[\"title\"];\r\n              res[\"listURL\"] = deletedList[\"href\"].substring(0,deletedList[\"href\"].lastIndexOf('/')+1);\r\n\r\n              this.deletedListsBefore = [];\r\n              document.querySelectorAll('#applist>div>div>div>div>a').forEach(node => this.deletedListsBefore.push(node));\r\n              this.deletedListsAfter = [];\r\n            }\r\n            catch{ \r\n              console.log(\"Problem with list deleted event\");\r\n            }\r\n          }\r\n\r\n          await this.tracker.trackEvent(\r\n            eventConfig.name,\r\n            res);\r\n        }\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.error(error);\r\n      throw new Error(); \r\n    }\r\n  }\r\n\r\n  private async processDeferredEvent(): Promise<void> {\r\n    const deferred = window.sessionStorage[\"piwik-deferred\"];\r\n    if (!deferred) {\r\n      return;\r\n    }\r\n    setTimeout(async (): Promise<void> => {\r\n      window.sessionStorage.removeItem(\"piwik-deferred\");\r\n      const deferredItem = JSON.parse(deferred);\r\n      const eventConfig = this.config.events.find(x =>\r\n        x.name === deferredItem.name &&\r\n        x.eventType === deferredItem.eventType &&\r\n        x.method === deferredItem.method &&\r\n        x.catchFilter === deferredItem.catchFilter &&\r\n        x.pageUrl === deferredItem.pageUrl &&\r\n        x.suffix === deferredItem.suffix\r\n      );\r\n      if (!eventConfig) {\r\n        return;\r\n      }\r\n      if (!eventConfig.nextPageUrl || new RegExp(eventConfig.nextPageUrl).test(window.location.href) || new RegExp(eventConfig.nextPageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)) {\r\n        await this.processEventInternal(eventConfig, deferredItem.deferredUrl ? deferredItem.deferredUrl : window.location.href, deferredItem.deferredMappings);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  private getFileType(itemName: string): string {\r\n    if (itemName) {\r\n      const ext = itemName.split('.').pop();\r\n      if (itemName !== ext) {\r\n        if (ext === \"aspx\") {\r\n          return \"page\";\r\n        } else {\r\n          return \"file\";\r\n        }\r\n      } else {\r\n        if (this.selectedRows?.length > 0 && this.selectedRows[0].ProgId === \"OneNote.Notebook\") {\r\n          return \"file\";\r\n        } else {\r\n          return \"folder\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private async processAjaxRequest(url: string, method: string, bodyGetter: () => Promise<any>, responseGetter: () => Promise<any>, responseHeaders: any, duration: number, deep: any = {}): Promise<void> {\r\n    function tryDecodeURI(url)\r\n    {\r\n      try {\r\n        return decodeURI(url);\r\n    } catch (e) {\r\n        return url;\r\n    }\r\n  }\r\n    const eventConfigs: Array<any> = this.config.events.filter(x =>\r\n      x.eventType.toLowerCase() === \"ajax\" &&\r\n      ((x.method == null && method.toLowerCase() === \"get\") || x.method.toLowerCase() === method.toLowerCase()) &&\r\n      new RegExp(x.catchFilter, \"i\").test(tryDecodeURI(url)));\r\n\r\n    eventConfigs.forEach(eventConfig => {\r\n      if (!eventConfig.pageUrlCondition || (eventConfig.pageUrlCondition && (new RegExp(eventConfig.pageUrlCondition).test(window.location.href)\r\n      || new RegExp(eventConfig.pageUrlCondition).test(window.location.origin + _spPageContextInfo.serverRequestPath)))) {\r\n      this.processMappings(eventConfig, url, bodyGetter, responseGetter, responseHeaders, undefined, deep).then(res => {\r\n        if (eventConfig.filterFiletype && (eventConfig.filterFiletype == null || eventConfig.filterFiletype.filetype == null || eventConfig.filterFiletype.fieldname == null)) {\r\n          return;\r\n        } else {\r\n          if (eventConfig.filterFiletype && eventConfig.filterFiletype.fieldname) {\r\n            const filetype = this.getFileType(res[eventConfig.filterFiletype.fieldname])\r\n            if (eventConfig.filterFiletype.filetype !== filetype) {\r\n              return;\r\n            }\r\n          }\r\n          if ((eventConfig.pageUrl && !(new RegExp(eventConfig.pageUrl).test(window.location.href)\r\n          || new RegExp(eventConfig.pageUrl).test(window.location.origin + _spPageContextInfo.serverRequestPath)))) {\r\n            return;\r\n          } else {\r\n            if (eventConfig.name.indexOf(\"search\") > -1) {\r\n              if (eventConfig.suffix.indexOf(\"_classicSP2013\") > -1) {\r\n                if (res[\"queryString\"] === undefined || res[\"queryString\"].indexOf(\"path:&quot;\") >-1) {\r\n                  return;\r\n                }\r\n                else\r\n                {\r\n                  let second = (new Date().getTime() / 1000).toString();\r\n                  if(second.indexOf(\".\")>-1)\r\n                  {\r\n                    second = second.split('.')[0];\r\n                    if(this.secondSearchAvoid.indexOf(second) > -1)\r\n                    {\r\n                      return;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if (eventConfig.name.indexOf(\"listItemDirectView\") > -1) {\r\n              let second = (new Date().getTime() / 1000).toString();\r\n              if (second.indexOf(\".\") > -1) {\r\n                second = second.split('.')[0];\r\n                if (this.secondListItemDirectViewArray.indexOf(second) > -1) {\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if (eventConfig.name.indexOf(\"folderDownloaded\") > -1 || eventConfig.name.indexOf(\"fileDownloaded\") > -1\r\n              || eventConfig.name.indexOf(\"folderCreatedOrUploaded\") > -1 || eventConfig.name.indexOf(\"filePinnedToTop\") > -1\r\n              || eventConfig.name.indexOf(\"fileUnpinned\") > -1 || eventConfig.name.indexOf(\"folderPinnedToTop\") > -1\r\n              || eventConfig.name.indexOf(\"folderDeleted\") > -1 || eventConfig.name.indexOf(\"fileUploaded\") > -1\r\n              || eventConfig.name.indexOf(\"fileDeleted\") > -1 || eventConfig.name.indexOf(\"fileShared\") > -1\r\n              || eventConfig.name.indexOf(\"folderShared\") > -1 || eventConfig.name.indexOf(\"fileOpenedOrEdited\") > -1\r\n              || eventConfig.name.indexOf(\"folderUnpinned\") > -1) {\r\n              if (res.parentFolderUrl == res.documentLibraryUrl) {\r\n                res.parentFolderTitle = res[\"!listTitle\"];\r\n                res.parentFolderName = res.documentLibraryName;\r\n              }\r\n            }\r\n\r\n            if (eventConfig.name.indexOf(\"fileDownloaded\") > -1 || eventConfig.name.indexOf(\"fileOpenedOrEdited\") > -1)\r\n            {\r\n              if (!res[\"fileExt\"])\r\n              {\r\n                  return;\r\n              }\r\n            }\r\n\r\n            if (eventConfig.name.indexOf(\"publishAction\") > -1 || eventConfig.name.indexOf(\"pageCreated\") > -1 || eventConfig.name.indexOf(\"newsPost\") > -1\r\n              || eventConfig.name.indexOf(\"pageEdited\") > -1 || eventConfig.name.indexOf(\"newsEdited\") > -1) {\r\n              let tempVersion = 0;\r\n              if (res[\"!pageVersion\"].indexOf(\".\") > -1) {\r\n                tempVersion = parseInt(res[\"!pageVersion\"].split('.')[0]);\r\n              }\r\n              else {\r\n                tempVersion = parseInt(res[\"!pageVersion\"]);\r\n              }\r\n              switch (res.typeOfContent) {\r\n                case \"0x0101080099FF4FA0A41D6C4FBF4A361E67AD94FF\": {\r\n                  res.typeOfContent = \"Wiki Page\";\r\n                  eventConfig.name = \"pageCreated\";\r\n                  break;\r\n                }\r\n                case \"0x010100066D651BED1B8F4AA6949087C4C86201\": {\r\n                  res.typeOfContent = \"Web Part Page\";\r\n                  eventConfig.name = \"pageCreated\";\r\n                  break;\r\n                }\r\n                case \"0x0101009D1CB255DA76424F860D91F20E6C4118000B9CCA7695D746439680EBD51D3E8011\": {\r\n                  if (res[\"!testPageProperty1\"]) {\r\n                    res.typeOfContent = \"News Page\";\r\n                    if (tempVersion > 1) {\r\n                      eventConfig.name = \"newsEdited\";\r\n                    }\r\n                    else {\r\n                      eventConfig.name = \"newsPost\";\r\n                    }\r\n                    break;\r\n                  }\r\n                }\r\n                default: {\r\n                  if (res[\"!testPageProperty1\"] && res.typeOfContent.indexOf(\"0x0101009D1CB255DA76424F860D91F20E6C411800\") > -1) {\r\n                    res.typeOfContent = \"News Page\";\r\n                    if (tempVersion > 1) {\r\n                      eventConfig.name = \"newsEdited\";\r\n                    }\r\n                    else {\r\n                      eventConfig.name = \"newsPost\";\r\n                    }\r\n                  }\r\n                  else {\r\n                    res.typeOfContent = \"Site Page\";\r\n                    if (tempVersion > 1) {\r\n                      eventConfig.name = \"pageEdited\";\r\n                    }\r\n                    else {\r\n                      eventConfig.name = \"pageCreated\";\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if (eventConfig.name === \"commentItem\" || eventConfig.name === \"unlikeItem\"\r\n              || eventConfig.name === \"likeItem\" || eventConfig.name === \"commentReply\"\r\n              || eventConfig.name === \"likeComment\" || eventConfig.name === \"unlikeComment\") {\r\n              if (res[\"!testCommentPageProperty1\"] && res[\"!testCommentPageProperty1\"].indexOf(\"titlePlaceholder\") > -1 && res[\"!itemContentTypeId\"].indexOf(\"0x0101009D1CB255DA76424F860D91F20E6C411800\") > -1) {\r\n                res.contentTypeName = \"News Page\";\r\n              }\r\n              else {\r\n                if (res[\"!testCommentPageProperty1\"] && res[\"!testCommentPageProperty1\"].indexOf(\"titlePlaceholder\") == -1 && res[\"!itemContentTypeId\"].indexOf(\"0x0101009D1CB255DA76424F860D91F20E6C411800\") > -1) {\r\n                  res.contentTypeName = \"Site Page\";\r\n                }\r\n              }\r\n            }\r\n\r\n            // if (res.documentlibraryUrl && res.folderUrl && res.documentlibraryUrl === res.folderUrl) {\r\n            //   res.folderUrl = \"\";\r\n            //   res.folderName = \"\";\r\n            // }\r\n            if (eventConfig.catchFilterPropertyName && eventConfig.catchFilterPropertyName !== res[\"!actionName\"]) {\r\n              return;\r\n            }\r\n            const mappingsKeys = Object.keys(res)\r\n            mappingsKeys.forEach(key => {\r\n              if (key.startsWith(\"!\")) {\r\n                delete res[key]\r\n              }\r\n            });\r\n            if (this.selectedRows?.length > 0 && this.selectedRows[0].ProgId === \"OneNote.Notebook\") {\r\n              if (eventConfig?.mappings?.objectType) {\r\n                res.objectType = \"OneNote.Notebook\"\r\n              }\r\n            }\r\n            this.decodeUrls(res);\r\n\r\n            if (eventConfig.name.indexOf(\"search\") > -1) {\r\n              let second = (new Date().getTime() / 1000).toString();\r\n              if (second.indexOf(\".\") > -1) {\r\n                second = second.split('.')[0];\r\n                this.secondSearchAvoid.push(second);\r\n              }\r\n            }\r\n\r\n            if (eventConfig.name.indexOf(\"listItemDirectView\") > -1) {\r\n              let second = (new Date().getTime() / 1000).toString();\r\n              if (second.indexOf(\".\") > -1) {\r\n                second = second.split('.')[0];\r\n                this.secondListItemDirectViewArray.push(second);\r\n              }\r\n            }\r\n\r\n            this.tracker.trackEvent(\r\n              eventConfig[\"name\"],\r\n              res,\r\n              duration);\r\n          }\r\n        }\r\n      })\r\n    }\r\n    })\r\n  }\r\n\r\n  private async processPostMessage(data: string): Promise<void> {\r\n    const eventConfig = this.config.events.find(x =>\r\n      x.eventType.toLowerCase() === \"postmessage\" &&\r\n      new RegExp(x.catchFilter, \"i\").test(data));\r\n\r\n    if (!eventConfig)\r\n      return;\r\n\r\n    const res = await this.processMappings(eventConfig, window.location.href, null, async () => JSON.parse(data), []);\r\n\r\n    if(eventConfig.name.indexOf(\"search\")>-1)\r\n    {\r\n      if(!res[\"queryString\"])\r\n      {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.tracker.trackEvent(\r\n      eventConfig.name,\r\n      res);\r\n  }\r\n\r\n  private async processMappings(eventConfig: any, url: string, bodyGetter: () => Promise<any>, responseGetter: () => Promise<any>, responseHeaders: any, deferredMappings: any = null, deep: any = {}): Promise<any> {\r\n    if ((eventConfig.deepCatch && Object.keys(eventConfig.deepCatch).length !== 0) || (eventConfig.deepCatchPre && Object.keys(eventConfig.deepCatchPre).length !== 0)) {\r\n      await this.processDeepCatch(eventConfig.deepCatch, url, bodyGetter, responseGetter, responseHeaders, deferredMappings, deep, eventConfig);\r\n    }\r\n    await this.processDeepCatch(this.config.sharedEvent.deepCatch, url, bodyGetter, responseGetter, responseHeaders, deferredMappings, deep, eventConfig);\r\n    const maps = { ...this.config.sharedEvent.sharedMappings, ...eventConfig.mappings };\r\n    const mappingsKeys = Object.keys(maps)\r\n    mappingsKeys.forEach(key => {\r\n      if (key.startsWith(\"#\")) {\r\n        let keySharedToDelete = key.substring(1);\r\n        delete maps[keySharedToDelete];\r\n        delete maps[key];\r\n      }\r\n    });\r\n    return await this.processMappingsInternal(maps, url, bodyGetter, responseGetter, responseHeaders, deferredMappings, deep, eventConfig);\r\n  }\r\n\r\n  private async processDeepCatch(deepCatch: any, url: string, bodyGetter: () => Promise<any>, responseGetter: () => Promise<any>, responseHeaders: any, deferredMappings: any = null, deep: any, eventConfig: any): Promise<void> {\r\n    const deepUrlsKeys = Object.keys(deepCatch);\r\n    for (let deepUrlKey of deepUrlsKeys) {\r\n      const deepToProcess = {} as any;\r\n      deepToProcess[deepUrlKey] = deepCatch[deepUrlKey];\r\n\r\n      const deepUrl = await this.processMappingsInternal(deepToProcess, url, bodyGetter, responseGetter, responseHeaders, deferredMappings, deep, eventConfig);\r\n\r\n      if (!deepUrl[deepUrlKey])\r\n        continue;\r\n\r\n      const makeDeepCatchRequest = async (): Promise<any> => {\r\n        let res;\r\n        if(eventConfig.xmlInsteadOfJson && eventConfig.xmlInsteadOfJson.indexOf(\"true\")>-1 && deepUrlKey.indexOf(\"item\") > -1)\r\n        {\r\n          res = await fetchRetry(this.fetchOld)(deepUrl[deepUrlKey], {\r\n            cache: 'no-cache',\r\n            headers: {\r\n              'Accept': 'application/xml',\r\n              'Accept-Language': this.config.language || 'en,en-US;q=0.9,de;q=0.8,de-DE;q=0.7,pl;q=0.6',\r\n              'Content-Type': 'application/xml;charset=utf-8'\r\n            },\r\n            retryOn: [404],\r\n            retries: 10,\r\n            retryDelay: 200\r\n          });\r\n        }\r\n        else\r\n        {\r\n        res = await fetchRetry(this.fetchOld)(deepUrl[deepUrlKey], {\r\n          cache: 'no-cache',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Accept-Language': this.config.language || 'en,en-US;q=0.9,de;q=0.8,de-DE;q=0.7,pl;q=0.6',\r\n            'Content-Type': 'application/json;odata=verbose;charset=utf-8'\r\n          },\r\n          retryOn: [404],\r\n          retries: 10,\r\n          retryDelay: 200\r\n        });\r\n      }\r\n\r\n        if(eventConfig.xmlInsteadOfJson && eventConfig.xmlInsteadOfJson.indexOf(\"true\")>-1 && deepUrlKey.indexOf(\"item\") > -1)\r\n        {\r\n          return await res.clone().text();\r\n        }\r\n        else\r\n        {\r\n          return await res.clone().json();\r\n        }\r\n      }\r\n\r\n      if (deepUrlKey.indexOf(\":cached\") > -1) {\r\n        deep[deepUrlKey.replace(\":cached\", \"\")] = await new PnPClientStorage()\r\n          .session\r\n          .getOrPut(`Piwik:DeepCatch:${deepUrl[deepUrlKey]}`, makeDeepCatchRequest, new Date(Date.now() + 30 * 60 * 1000));\r\n      } else {\r\n        deep[deepUrlKey] = await makeDeepCatchRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  private async processMappingsInternal(mappings: any, url: string, bodyGetter: () => Promise<any>, responseGetter: () => Promise<any>, responseHeaders: any, deferredMappings: any = null, deep: any, eventConfig: any): Promise<any> {\r\n    let body: any;\r\n    let response: any;\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    const input = (selector: string): string => {\r\n      const element = document.querySelector(selector) as any;\r\n      return element ? element.value : null;\r\n    }\r\n\r\n    const removeStartAspx = (url: string): string => {\r\n      return url.replace(/\\/_layouts\\/1.\\/start.aspx\\#/, \"\");\r\n    }\r\n\r\n    const processExpression = async (expression: string, key: string): Promise<string> => {\r\n      function tryDecodeURI(url)\r\n      {\r\n        try {\r\n          return decodeURI(url);\r\n      } catch (e) {\r\n          return url;\r\n      }\r\n    }\r\n      const splittedExpression = expression.split(\":\");\r\n      const sourceType = splittedExpression[0];\r\n      const valueExpression = splittedExpression.slice(1).join(\":\");\r\n\r\n      switch (sourceType.toLowerCase()) {\r\n        case \"url\": {\r\n          if (valueExpression) {\r\n            const regExp = new RegExp(valueExpression, \"i\");\r\n            return regExp.exec(removeStartAspx(tryDecodeURI(url)))[1];\r\n          } else {\r\n            return removeStartAspx(tryDecodeURI(url));\r\n          }\r\n        }\r\n        case \"global\": {\r\n          return this.getPropertyValueByPath(window, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"context\": {\r\n          return this.getPropertyValueByPath(this.context, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"querystring\": {\r\n          url = url.replace('#','%23');\r\n          const urlObj = new URL(url);\r\n          const urlParams = urlObj.searchParams;\r\n          return urlParams.get(valueExpression);\r\n        }\r\n        case \"querystringwithoutquotamarks\": {\r\n          const urlObj = new URL(url);\r\n          const urlParams = urlObj.searchParams;\r\n          return urlParams.get(valueExpression).replace(\"'\", \"\").replace(\"'\", \"\");\r\n        }\r\n        case \"body\": {\r\n          try {\r\n            body = body || await bodyGetter();\r\n          }\r\n          finally {\r\n            return this.getPropertyValueByPath(body, valueExpression, key, sourceType, eventConfig);\r\n          }\r\n        }\r\n        case \"response\": {\r\n          response = response || await responseGetter();\r\n          return this.getPropertyValueByPath(response, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"responseheader\": {\r\n          return this.getPropertyValueByPath(responseHeaders, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"ancestor\": {\r\n          const urlParts = removeStartAspx(tryDecodeURI(url)).replace(/\\/$/gi, \"\").split(\"/\");\r\n          return urlParts.slice(0, urlParts.length - +valueExpression).join(\"/\");\r\n        }\r\n        case \"eval\": {\r\n          /* eslint-disable-next-line no-eval */\r\n          try\r\n          {\r\n          return eval(valueExpression);\r\n          }\r\n          catch{\r\n            return null;\r\n          }\r\n        }\r\n        case \"deep\": {\r\n          return this.getPropertyValueByPath(deep, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"selectedrows\": {\r\n          return this.getPropertyValueByPath(this.selectedRows, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"clickedtarget\": {\r\n          return this.getPropertyValueByPath(this.clickedCurrentTarget, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"complex\": {\r\n          return await this.replaceAsync(valueExpression, /{{.+?}}/gi, (match: string) => processExpression(match.replace(/{{|}}/gi, \"\"), key));\r\n        }\r\n        case \"deferred\": {\r\n          return deferredMappings[valueExpression];\r\n        }\r\n        case \"event\": {\r\n          return this.getPropertyValueByPath(this.event, valueExpression, key, sourceType, eventConfig);\r\n        }\r\n        case \"folderpath\": {\r\n          let url: string;\r\n          if (document.querySelector(valueExpression)) {\r\n            let urlObj = new URL(window.location.origin + document.querySelector(valueExpression).getAttribute(\"href\"));\r\n            let urlParams = urlObj.searchParams;\r\n            url = urlParams.get(\"RootFolder\");\r\n          } else {\r\n            let urlObj = new URL(window.location.origin + document.querySelector('iframe[id^=\"FilterIframe\"]').getAttribute('filterlink'));\r\n            let urlParams = urlObj.searchParams;\r\n            url = urlParams.get(\"RootFolder\");\r\n            if (url === null) {\r\n              url = this.context.listUrl\r\n            }\r\n          }\r\n            return url;\r\n        }\r\n      }\r\n    };\r\n\r\n    const isMappingIgnored = (key: string): boolean => {\r\n      if (!this.trackerSettings.SendUserName && [\"userDisplayName\", \"authorDisplayName\"].indexOf(key) !== -1)\r\n        return true;\r\n\r\n      if (!this.trackerSettings.SendOffice && [\"office\", \"userOffice\", \"authorOffice\", \"pageAuthorOffice\"].indexOf(key) !== -1)\r\n        return true;\r\n\r\n      if (!this.trackerSettings.SendJobTitle && [\"jobTitle\", \"userJobTitle\", \"authorJobTitle\", \"pageAuthorJobTitle\"].indexOf(key) !== -1)\r\n        return true;\r\n\r\n      if (!this.trackerSettings.SendDepartment && [\"department\", \"userDepartment\", \"authorDepartment\", \"pageAuthorDepartment\"].indexOf(key) !== -1)\r\n        return true;\r\n\r\n      return false;\r\n    };\r\n\r\n    const processMappings = async (maps: any): Promise<any> => {\r\n      const result: any = {};\r\n\r\n      const keys = Object.keys(maps);\r\n      for (let key of keys) {\r\n        if (isMappingIgnored(key))\r\n          continue;\r\n\r\n        const mappingExpression = maps[key] as string;\r\n        result[key] = await processExpression(mappingExpression, key);\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    return await processMappings(mappings);\r\n  }\r\n\r\n  private getPropertyValueByPath(obj: any, path: string, key: string, sourceType: string, eventConfig: any): any {\r\n    function tryDecodeURI(url)\r\n    {\r\n      try {\r\n        return decodeURI(url);\r\n    } catch (e) {\r\n        return url;\r\n    }\r\n  }\r\n    const propertyPath = path.split(\".\");\r\n\r\n    let value = obj;\r\n    for (let property of propertyPath) {\r\n      try {\r\n        if (property === \"parseJson()\") {\r\n          value = JSON.parse(value);\r\n        }\r\n        else if (property === \"getContentTypeFromSchemaXml()\") {\r\n          let tempContentTypeId = value.substring(value.indexOf(\"ID=\") + 4, value.indexOf(\"Name=\") - 2);\r\n          let foundCT = false;\r\n          if(tempContentTypeId.startsWith(\"0x010108\"))\r\n          {\r\n            value = 'Wiki Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010109\"))\r\n          {\r\n            value = 'Web Part Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x0101009\"))\r\n          {\r\n            value = 'Site Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390064DEA0F\"))\r\n          {\r\n            value = 'Welcome Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390097EAECA\"))\r\n          {\r\n            value = 'Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457E\"))\r\n          {\r\n            value = 'Article Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x011000EC145E9F882C448EAAF71817CF337AB9006E4214AC2CA3074E802309A5A3BCABC2\"))\r\n          {\r\n            value = 'News Page';\r\n            foundCT = true;\r\n          }\r\n          if(foundCT === false)\r\n          {\r\n            value = 'Other';\r\n          }\r\n        }\r\n        else if (property === \"getContentTypeFromId()\") {\r\n          let tempContentTypeId = value;\r\n          let foundCT = false;\r\n          if(tempContentTypeId.startsWith(\"0x010108\"))\r\n          {\r\n            value = 'Wiki Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010109\"))\r\n          {\r\n            value = 'Web Part Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x0101009\"))\r\n          {\r\n            value = 'Site Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390064DEA0F\"))\r\n          {\r\n            value = 'Welcome Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390097EAECA\"))\r\n          {\r\n            value = 'Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457E\"))\r\n          {\r\n            value = 'Article Page';\r\n            foundCT = true;\r\n          }\r\n          if(tempContentTypeId.startsWith(\"0x011000EC145E9F882C448EAAF71817CF337AB9006E4214AC2CA3074E802309A5A3BCABC2\"))\r\n          {\r\n            value = 'News Page';\r\n            foundCT = true;\r\n          }\r\n          if(foundCT === false)\r\n          {\r\n            value = 'Other';\r\n          }\r\n        }\r\n        else if (property === \"toJson()\") {\r\n          value = JSON.stringify(value);\r\n        }\r\n        else if (property === \"toLowerCase()\") {\r\n          value = value.toLowerCase();\r\n        }\r\n        else if (property === \"anonymize()\") {\r\n          value = this.trackerSettings.SendUserIdEncoded ? (this.trackerSettings.UseSha3 ? SHA3 : SHA1)(value).toString() : value;\r\n        }\r\n        else if (property === \"hash()\") {\r\n          value = (this.trackerSettings.UseSha3 ? SHA3 : SHA1)(value).toString();\r\n        }\r\n        else if(property == \"getFileLeafRefByTagName()\")\r\n        {          \r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(value, \"application/xml\");\r\n          const errorNode = doc.querySelector(\"parsererror\");\r\n          if (errorNode) {\r\n            console.log(\"error while parsing\");\r\n          }\r\n            value = doc.getElementsByTagName(\"d:FileLeafRef\")[0].innerHTML;\r\n        }\r\n        else if(property == \"getIdByTagName()\")\r\n        {          \r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(value, \"application/xml\");\r\n          const errorNode = doc.querySelector(\"parsererror\");\r\n          if (errorNode) {\r\n            console.log(\"error while parsing\");\r\n          }\r\n            value = doc.getElementsByTagName(\"d:Id\")[0].innerHTML;\r\n        }\r\n        else if(property == \"getFileRefByTagName()\")\r\n        {          \r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(value, \"application/xml\");\r\n          const errorNode = doc.querySelector(\"parsererror\");\r\n          if (errorNode) {\r\n            console.log(\"error while parsing\");\r\n          }\r\n            value = doc.getElementsByTagName(\"d:FileRef\")[0].innerHTML;\r\n        }\r\n        else if(property == \"getTitleByTagName()\")\r\n        {          \r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(value, \"application/xml\");\r\n          const errorNode = doc.querySelector(\"parsererror\");\r\n          if (errorNode) {\r\n            console.log(\"error while parsing\");\r\n          }\r\n            value = doc.getElementsByTagName(\"d:Title\")[0].innerHTML;\r\n        }\r\n        else if (property === \"decodeClaims()\") {\r\n          const splitted = value.split(\"|\");\r\n          value = splitted[splitted.length - 1];\r\n        }\r\n        else if (property === \"getLastSegment()\") {\r\n          const splitted = value.split(\"/\");\r\n          if (splitted === \"\") {\r\n            value = splitted[splitted.length - 2];\r\n          } else {\r\n            value = splitted[splitted.length - 1]\r\n          }\r\n        }\r\n        else if (property === \"substractExt()\") {\r\n          const ext = value.split(\".\");\r\n          value = value !== ext[ext.length - 1] ? ext[ext.length - 1] : \"\";\r\n        }\r\n        else if (property === \"getId()\") {\r\n          const id = value.parentElement.getAttribute('id');\r\n          value = id;\r\n        }\r\n        else if (property === \"getTitle()\") {\r\n          const id = value.parentElement.parentElement.parentElement.querySelector('td > img').getAttribute('title');\r\n          value = id;\r\n        }\r\n        else if (property === \"getTitleOfListItem()\") {\r\n          let title: string;\r\n          let selectedRows = document.querySelectorAll('div[aria-selected=\"true\"]');\r\n          if (selectedRows.length === 1) {\r\n            title = selectedRows[0].querySelector(\"button[data-automationid='FieldRenderer-name']\").innerHTML\r\n          }\r\n          else {\r\n            title = value.closest(\".ms-DetailsRow-fields\").querySelector(\"button[data-automationid='FieldRenderer-name']\").innerText;\r\n          }\r\n          value = title;\r\n        }\r\n        else if (property === \"getParent()\") {\r\n          let arr = value.split(\"/\");\r\n          arr.pop();\r\n          let str = arr.join(\"/\");\r\n          value = str;\r\n        }\r\n        else if (property === \"decodeUrl()\") {\r\n          const decodedString = tryDecodeURI(value);\r\n          value = decodedString;\r\n        }\r\n        else if (property === \"parseInt()\") {\r\n          const int = parseInt(value);\r\n          value = int;\r\n        }\r\n        else if (property === \"getSearchQueryText()\") {\r\n          if (value.indexOf(\"QueryText=\") > -1) {\r\n            var tempVarA = value.substring(value.indexOf(\"QueryText=\"));\r\n            var tempVarB = tempVarA.substring(tempVarA.indexOf(\"QueryTemplate=\") - 3, tempVarA.indexOf(\"QueryText=\") + 12)\r\n            value = tempVarB;\r\n          }\r\n          else {\r\n            value = undefined;\r\n          }\r\n        }\r\n        else if (property === \"getSearchQueryCount()\") {\r\n          if (value.indexOf(\"TotalRows\") > -1) {\r\n            try\r\n            {\r\n            var tempVarA = value.substring(value.indexOf(\"TotalRows\"));\r\n            var tempVarB = tempVarA.substring(tempVarA.indexOf(\"TotalRowsIncludingDuplicates\") - 2, tempVarA.indexOf(\"TotalRows\") + 11)\r\n            value = tempVarB;\r\n            }\r\n            catch {\r\n              value = \"0\";\r\n            }\r\n          }\r\n          else {\r\n            value = \"0\";\r\n          }\r\n        }\r\n        else if (property === \"removeAspxExtension()\") {\r\n          if (value.indexOf(\".aspx\") > -1) {\r\n            value = value.replace(\".aspx\",\"\");\r\n          }\r\n        }\r\n        else if (property === \"parseKeyValueArray()\") {\r\n          value = Object.assign({}, ...value.map(x => ({[x.Key]: x.Value})));\r\n        }\r\n        else if (property !== \"\") {\r\n          if(value)\r\n          {\r\n          value = value[property];\r\n          }\r\n        }\r\n        if(eventConfig.name.indexOf(\"search\")>-1 && property.indexOf(\"Total\") > -1 && !value)\r\n        {\r\n          value = \"0\";\r\n        }\r\n      }\r\n      catch (error) {\r\n        if(this.config.mode === 'dev') {\r\n          console.log(`[TRACKER] ${error} | Property: '${key}', path: '${sourceType}:${path}' in '${eventConfig.name}' event.`)\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return value;\r\n  }\r\n\r\n  private async replaceAsync(str: string, searchValue: string | RegExp, replacer: (match: string) => Promise<string>): Promise<string> {\r\n    const matches = str.match(searchValue);\r\n    const promises = [];\r\n    matches.forEach(match => {\r\n      const promise = replacer(match);\r\n      promises.push(promise);\r\n    });\r\n    const data = await Promise.all(promises);\r\n    return str.replace(searchValue, () => data.shift());\r\n  }\r\n\r\n  private isStartPage(url: string): boolean {\r\n    return /\\/start\\.aspx$/.test(url);\r\n  }\r\n\r\n  private async checkElementType(): Promise<string> {\r\n    if (!window.top.document.querySelector(\"[class$='itm-selected']\")) {\r\n      return null;\r\n    } else {\r\n      try\r\n      {\r\n        if(window.top.document.querySelector(\"[class$='itm-selected'] [isecb='TRUE'] div a\").getAttribute('href').indexOf(\"listform.aspx\"))\r\n        {\r\n            return \"item\";\r\n        }\r\n        else\r\n        {\r\n      const fileName = window.top.document.querySelector(\"[class$='itm-selected'] [isecb='TRUE'] div a\").getAttribute('href').split(\"/\").pop();\r\n      if (fileName) {\r\n        const ext = fileName.split('.').pop();\r\n        if (ext === \"aspx\") {\r\n          return \"page\";\r\n        } else if (/aspx\\?/.test(ext)) {\r\n          return \"folder\";\r\n        } else {\r\n          return \"file\";\r\n        }\r\n      }\r\n    }\r\n    }\r\n    catch{\r\n      return null;\r\n    } \r\n    }\r\n  }\r\n\r\n  private async loadTagManager(): Promise<void> {\r\n    if (!this.trackerSettings.SiteId || !this.trackerSettings.ContainersUrl)\r\n      return;\r\n\r\n    /* eslint-disable */\r\n    try {\r\n      (function (window, document, dataLayerName, id, containersUrl) {\r\n        window[dataLayerName] = window[dataLayerName] || [], window[dataLayerName].push = Array.prototype.push, window[dataLayerName].push({ start: (new Date).getTime(), event: \"stg.start\" });\r\n\r\n        var scripts = document.getElementsByTagName('script')[0], tags = document.createElement('script');\r\n\r\n        function stgCreateCookie(a, b, c) {\r\n          var d = \"\";\r\n          if (c) {\r\n            var e = new Date;\r\n            e.setTime(e.getTime() + 24 * c * 60 * 60 * 1e3), d = \"; expires=\" + e.toUTCString()\r\n          }\r\n          document.cookie = a + \"=\" + b + d + \"; path=/\"\r\n        }\r\n\r\n        var isStgDebug = (window.location.href.match(\"stg_debug\") || document.cookie.match(\"stg_debug\")) && !window.location.href.match(\"stg_disable_debug\");\r\n        stgCreateCookie(\"stg_debug\", isStgDebug ? 1 : \"\", isStgDebug ? 14 : -1);\r\n        var qP = [];\r\n        dataLayerName !== \"dataLayer\" && qP.push(\"data_layer_name=\" + dataLayerName), isStgDebug && qP.push(\"stg_debug\");\r\n        var qPString = qP.length > 0 ? (\"?\" + qP.join(\"&\")) : \"\";\r\n        tags.async = !0, tags.src = containersUrl + \"/\" + id + \".js\" + qPString, scripts.parentNode.insertBefore(tags, scripts);\r\n        (function (a, n, i) {\r\n          a[n] = a[n] || {};\r\n          for (var c = 0; c < i.length; c++)\r\n            (function (i) {\r\n              a[n][i] = a[n][i] || {}, a[n][i].api = a[n][i].api || function () {\r\n                var a = [].slice.call(arguments, 0);\r\n                \"string\" == typeof a[0] && window[dataLayerName].push({ event: n + \".\" + i + \":\" + a[0], parameters: [].slice.call(arguments, 1) })\r\n              }\r\n            })(i[c])\r\n        })(window, \"ppms\", [\"tm\", \"cm\"]);\r\n      })(window, document, 'dataLayer', this.trackerSettings.SiteId, this.trackerSettings.ContainersUrl);\r\n    }\r\n    catch {\r\n      // Ignore\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  private async urlTracker(): Promise<void> {\r\n      this._nav = {\r\n        origin: window.location.origin,\r\n        pathname: window.location.pathname,\r\n        type: NAV_TYPE.INIT,\r\n        search: new URLSearchParams(window.location.search),\r\n        search_decoded: []\r\n      };\r\n      this.getSearchDecoded();\r\n\r\n      try {\r\n        ((history) => {\r\n          var pushState = history.pushState;\r\n          history.pushState = (state, key, path) => {\r\n            pushState.apply(history, [state, key, path]);\r\n            this.updateCurrentPath(NAV_TYPE.CLICK, path);\r\n          };\r\n        })(window.history);\r\n\r\n        window.addEventListener('popstate', (e) => {\r\n          this.updateCurrentPath(NAV_TYPE.HISTORY);\r\n        });\r\n      }\r\n      catch (err) {\r\n        return Promise.reject(err);\r\n      }\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  private updateCurrentPath(type: NAV_TYPE, key: string = window.location.href): void {\r\n    this._nav = {\r\n      origin: window.location.origin,\r\n      pathname: window.location.pathname,\r\n      type: type,\r\n      search: new URLSearchParams(window.location.search)\r\n    };\r\n    this.getSearchDecoded();\r\n    this.trackPageView();\r\n  }\r\n\r\n  private getSearchDecoded = () => {\r\n    this._nav.search_decoded = [];\r\n    for (var pair of this._nav.search.entries()) {\r\n      this._nav.search_decoded.push({ key: pair[0], value: pair[1] });\r\n    }\r\n  }\r\n}","import { ITracker } from './ITracker';\r\n\r\nexport class GlobalArrayTracker implements ITracker {\r\n    private readonly traceLog: { [key: string]: any }[];\r\n\r\n    constructor(variableName: string) {\r\n        (window as any)[variableName] = (window as any)[variableName] || [];\r\n        this.traceLog = (window as any)[variableName];\r\n    }\r\n\r\n    public async trackPageView(name: string, url: string, data?: { [key: string]: any }): Promise<void> {\r\n        this.fixArrayPush();\r\n        this.traceLog.push({ event: name, url, ...data });\r\n    }\r\n\r\n    public async trackEvent(name: string, data?: { [key: string]: any }, duration?: number): Promise<void> {\r\n        this.fixArrayPush();\r\n        this.traceLog.push({ event: name, duration, ...data });\r\n    }\r\n\r\n    private fixArrayPush(): void {\r\n        if (!window[\"sevenTag\"]) {\r\n            this.traceLog.push = window.Array.prototype.push;\r\n        }\r\n    };\r\n}\r\n","import { ITracker } from './ITracker';\r\n\r\nexport class ConsoleTracker implements ITracker {\r\n    public async trackPageView(name: string, url: string, data?: {[key: string]: any}): Promise<void> {\r\n        console.log(`[TRACKER] ${name} - URL: ${url}, Data: `, data);\r\n    }\r\n\r\n    public async trackEvent(name: string, data?: {[key: string]: any}, duration?: number): Promise<void> {\r\n        console.log(`[TRACKER] Event - Name: ${name}, Duration: ${duration}, Data: `, data);\r\n    }\r\n}\r\n","import { ITracker } from './ITracker';\r\n\r\nexport class BroadcastingTracker implements ITracker {\r\n    private readonly trackers: ITracker[];\r\n\r\n    constructor(trackers: ITracker[]) {\r\n        this.trackers = trackers;\r\n    }\r\n\r\n    public async trackPageView(name: string, url: string, data?: {[key: string]: any}): Promise<void> {\r\n        for (let tracker of this.trackers) {\r\n            await tracker.trackPageView(name, url, data);\r\n        }\r\n    }\r\n\r\n    public async trackEvent(name: string, data?: {[key: string]: any}, duration?: number): Promise<void> {\r\n        for (let tracker of this.trackers) {\r\n            await tracker.trackEvent(name, data, duration);\r\n        }\r\n    }\r\n}\r\n","import { ITracker } from './ITracker';\r\nimport { IContext } from '../contexts/IContext';\r\nimport { GlobalArrayTracker } from './GlobalArrayTracker';\r\nimport { ConsoleTracker } from './ConsoleTracker';\r\nimport { BroadcastingTracker } from './BroadcastingTracker';\r\n\r\nexport class TrackersProvider {\r\n    constructor(private readonly config: any, private readonly context: IContext) {}\r\n\r\n    public getTracker(): ITracker {\r\n        const trackers: ITracker[] = [];\r\n\r\n        const globalArray = this.config.trackers\r\n          .find(x => typeof x !== 'string' && x.name === \"GlobalArrayTracker\");\r\n\r\n        if (globalArray && typeof globalArray !== 'string') {\r\n          trackers.push(new GlobalArrayTracker(globalArray.params.variableName));\r\n        }\r\n  \r\n        if (this.config.trackers\r\n          .some(x => x === \"ConsoleTracker\" || (typeof x !== 'string' && x.name === \"ConsoleTracker\"))) {\r\n            trackers.push(new ConsoleTracker());\r\n          }\r\n    \r\n        return new BroadcastingTracker(trackers);\r\n    }\r\n}\r\n","import \"core-js/stable/array/from\";\r\nimport \"core-js/stable/array/fill\";\r\nimport \"core-js/stable/array/iterator\";\r\nimport \"core-js/stable/reflect\";\r\nimport \"es6-map/implement\";\r\nimport \"core-js/stable/symbol\";\r\nimport \"whatwg-fetch\";\r\n\r\nif (!window.Promise) {\r\n    require(\"core-js/stable/promise\");\r\n}","import { useState, SyntheticEvent, useEffect } from 'react';\r\nimport { ISettings } from '../services/ISettings';\r\nimport SettingsService from '../services/SettingsService';\r\nimport { IChoiceGroupOption } from 'office-ui-fabric-react';\r\n\r\nconst useSettingsForm = (dismiss: () => void) => {\r\n  const [inputs, setInputs] = useState({} as ISettings);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>(null);\r\n\r\n  const loadSettings = async (): Promise<void> => {\r\n    try {\r\n      setError(null);\r\n      setIsLoading(true);\r\n      const settings = await SettingsService.getSettings();\r\n      setInputs(settings);\r\n    }\r\n    catch (err) {\r\n      setError(err.toString());\r\n    }\r\n    finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const setSettings = async (settings: ISettings): Promise<void> => {\r\n    try {\r\n      setError(null);\r\n      setIsSaving(true);\r\n      await SettingsService.setSettings(settings);\r\n      dismiss();\r\n    }\r\n    catch (err) {\r\n      setError(err.toString());\r\n    }\r\n    finally {\r\n      setIsSaving(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadSettings();\r\n  }, []);\r\n\r\n  const handleSubmit = (event: SyntheticEvent) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    setSettings(inputs);\r\n  }\r\n\r\n  const handleInputChange = (event: SyntheticEvent<Element, Event> | undefined) => {\r\n    event!.persist();\r\n    setInputs((inputs: any) => ({ ...inputs, [(event!.target as any).name]: (event!.target as any).value }));\r\n  }\r\n\r\n  const handleCheckboxChange = (event: SyntheticEvent<Element, Event> | undefined, checked?: boolean) => {\r\n    event!.persist();\r\n    setInputs((inputs: any) => ({ ...inputs, [(event!.target as any).name]: checked }));\r\n  }\r\n\r\n  const handleChoiceGroupChangeBoolean = (ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption): void => {\r\n    ev!.persist();\r\n    setInputs((inputs: any) => ({ ...inputs, [(ev!.target as any).name]: option?.key === 'true' }));\r\n  }\r\n\r\n  const setValue = (name: string, value: string) => {\r\n    setInputs((inputs: any) => ({ ...inputs, [name]: value }));\r\n  }\r\n\r\n  return {\r\n    inputs,\r\n    isLoading,\r\n    isSaving,\r\n    error,\r\n    handleSubmit,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleChoiceGroupChangeBoolean,\r\n    setValue\r\n  };\r\n}\r\n\r\nexport default useSettingsForm;","import React, { useEffect, useState } from 'react';\r\nimport { TextField, PrimaryButton, Button, Pivot, PivotItem, Label, Checkbox, Stack, ChoiceGroup, Spinner, SpinnerSize, Text, Link } from 'office-ui-fabric-react';\r\nimport useSettingsForm from './useSettingsForm';\r\n\r\nimport styles from './Form.module.scss';\r\nimport { SettingsKeys } from '../services/SettingsKeys';\r\nimport { useConstCallback } from '@uifabric/react-hooks';\r\nimport { Constants } from '../Constants';\r\n\r\nfunction Form(props: { dismiss: () => void }) {\r\n  const {\r\n    inputs,\r\n    isLoading,\r\n    isSaving,\r\n    error,\r\n    handleSubmit,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleChoiceGroupChangeBoolean,\r\n    setValue\r\n  } = useSettingsForm(props.dismiss);\r\n  const [enableTrackingCheckbox, setEnableTrackingCheckbox] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !error) {\r\n      const state = inputs.PiwikStatus === \"Adding\" || inputs.PiwikStatus === \"New\" ||\r\n        ((!inputs.PiwikStatus || (inputs.PiwikStatus !== \"Deleting\" && inputs.PiwikStatus !== \"Deactivating\")) && inputs.IsTrackingActive);\r\n      setEnableTrackingCheckbox(state);\r\n    }\r\n  }, [inputs, error, isLoading]);\r\n\r\n  const setEnableTracking = useConstCallback((ev?: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean): void => {\r\n    ev!.persist();\r\n    setValue(SettingsKeys.PiwikStatus, checked ? \"Adding\" : \"Deleting\");\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner size={SpinnerSize.large} styles={{ root: { textAlign: \"center\", marginTop: 40 } }} />}\r\n      {!isLoading &&\r\n        <form onSubmit={handleSubmit}>\r\n          <Pivot aria-label=\"Piwik PRO\">\r\n            <PivotItem headerText=\"Site Collection Settings\">\r\n              <Stack tokens={{ childrenGap: 10 }}>\r\n                <Label style={{ fontWeight: \"bold\", fontSize: 18 }}>General</Label>\r\n                <Text styles={{root: {marginTop: \"0 !important\"}}}>It may take up to one hour for the changes on this tab to apply for all users.</Text>\r\n                <Checkbox label=\"Enable tracking\" name=\"EnableTracking\" onChange={setEnableTracking} checked={enableTrackingCheckbox}></Checkbox>\r\n                {enableTrackingCheckbox && !inputs.IsTrackingActive &&\r\n                  <Text style={{ color: \"#FFB900\" }}>The following settings will be available after activation.</Text>\r\n                }\r\n                <TextField label=\"Piwik PRO Site ID\" disabled={true} name=\"SiteId\" value={inputs.SiteId}></TextField>\r\n                {inputs.Url && inputs.SiteId &&\r\n                    <Link\r\n                      href={`${inputs.Url}/analytics/#/${inputs.SiteId}/dashboards`}\r\n                      target=\"_blank\"\r\n                      data-interception=\"off\">Piwik PRO Analytics</Link>\r\n                  }\r\n                <Label style={{ fontWeight: \"bold\", fontSize: 18 }}>User Information</Label>\r\n                <ChoiceGroup name=\"UseSiteCollectionSettings\" onChange={handleChoiceGroupChangeBoolean} selectedKey={inputs.UseSiteCollectionSettings?.toString()} options={[\r\n                  { key: \"false\", text: \"Use global settings\", styles: { root: { display: \"inline-block\", marginBottom: 5 } } },\r\n                  { key: \"true\", text: \"Overwrite global settings\", styles: { root: { display: \"inline-block\", marginLeft: 30, marginBottom: 5 } } }\r\n                ]} styles={{ applicationRole: { marginTop: 0 } }} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive} />\r\n                <Checkbox label=\"Send User ID anonymized\" name=\"SendUserIdEncoded\" onChange={handleCheckboxChange} checked={inputs.SendUserIdEncoded} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings}></Checkbox>\r\n                <Checkbox label=\"Send extended user information:\" name=\"SendExtendedUserinfo\" onChange={handleCheckboxChange} checked={inputs.SendExtendedUserinfo} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings}></Checkbox>\r\n                <Stack tokens={{ childrenGap: 10 }} style={{ marginLeft: 20 }}>\r\n                  <Checkbox label=\"Username (display name)\" name=\"SendUserName\" onChange={handleCheckboxChange} checked={inputs.SendUserName} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings || !inputs.SendExtendedUserinfo}></Checkbox>\r\n                  <Checkbox label=\"Office\" name=\"SendOffice\" onChange={handleCheckboxChange} checked={inputs.SendOffice} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings || !inputs.SendExtendedUserinfo}></Checkbox>\r\n                  <Checkbox label=\"JobTitle\" name=\"SendJobTitle\" onChange={handleCheckboxChange} checked={inputs.SendJobTitle} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings || !inputs.SendExtendedUserinfo}></Checkbox>\r\n                  <Checkbox label=\"Department\" name=\"SendDepartment\" onChange={handleCheckboxChange} checked={inputs.SendDepartment} disabled={!enableTrackingCheckbox || !inputs.IsTrackingActive || !inputs.UseSiteCollectionSettings || !inputs.SendExtendedUserinfo}></Checkbox>\r\n                </Stack>\r\n              </Stack>\r\n            </PivotItem>\r\n            {inputs.IsCurrentUserPiwikAdmin &&\r\n              <PivotItem headerText=\"Global Settings\">\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                  <Label style={{ fontWeight: \"bold\", fontSize: 18 }}>Default site collection settings</Label>\r\n                  <Checkbox label=\"Send User ID anonymized\" name=\"TemplateSendUserIdEncoded\" onChange={handleCheckboxChange} checked={inputs.TemplateSendUserIdEncoded}></Checkbox>\r\n                  <Checkbox label=\"Send extended user information:\" name=\"TemplateSendExtendedUserinfo\" onChange={handleCheckboxChange} checked={inputs.TemplateSendExtendedUserinfo}></Checkbox>\r\n                  <Stack tokens={{ childrenGap: 10 }} style={{ marginLeft: 20 }}>\r\n                    <Checkbox label=\"Username (display name)\" name=\"TemplateSendUserName\" onChange={handleCheckboxChange} checked={inputs.TemplateSendUserName} disabled={!inputs.TemplateSendExtendedUserinfo}></Checkbox>\r\n                    <Checkbox label=\"Office\" name=\"TemplateSendOffice\" onChange={handleCheckboxChange} checked={inputs.TemplateSendOffice} disabled={!inputs.TemplateSendExtendedUserinfo}></Checkbox>\r\n                    <Checkbox label=\"JobTitle\" name=\"TemplateSendJobTitle\" onChange={handleCheckboxChange} checked={inputs.TemplateSendJobTitle} disabled={!inputs.TemplateSendExtendedUserinfo}></Checkbox>\r\n                    <Checkbox label=\"Department\" name=\"TemplateSendDepartment\" onChange={handleCheckboxChange} checked={inputs.TemplateSendDepartment} disabled={!inputs.TemplateSendExtendedUserinfo}></Checkbox>\r\n                  </Stack>\r\n                </Stack>\r\n              </PivotItem>\r\n            }\r\n            {inputs.IsCurrentUserPiwikAdmin &&\r\n              <PivotItem headerText=\"Connection Settings\">\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                  <Label style={{ fontWeight: \"bold\", fontSize: 18 }}>Piwik PRO Analytics Suite instance connection settings</Label>\r\n                  <Checkbox label=\"Enforce SSL communication\" name=\"EnforceSslComunication\" onChange={handleCheckboxChange} checked={inputs.EnforceSslComunication}></Checkbox>\r\n                  <TextField label=\"Piwik PRO Instance URL\" name=\"Url\" onChange={handleInputChange} value={inputs.Url}></TextField>\r\n                  <TextField label=\"Piwik PRO Custom Containers URL\" name=\"ContainersUrl\" onChange={handleInputChange} value={inputs.ContainersUrl}></TextField>\r\n                  <Checkbox label=\"Use SHA3 to anonymize UserID (default SHA1)\" name=\"UseSha3\" onChange={handleCheckboxChange} checked={inputs.UseSha3}></Checkbox>\r\n                  <TextField label=\"Piwik PRO Client ID\" name=\"ClientID\" onChange={handleInputChange} value={inputs.ClientID}></TextField>\r\n                  <TextField label=\"Piwik PRO Client Secret\" name=\"ClientSecret\" onChange={handleInputChange} value={inputs.ClientSecret}></TextField>\r\n                </Stack>\r\n              </PivotItem>\r\n            }\r\n            {inputs.IsCurrentUserPiwikAdmin &&\r\n              <PivotItem headerText=\"About\">\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                  <Label style={{ fontWeight: \"bold\", fontSize: 18 }}>Versions</Label>\r\n                  <Text>Tracker: {Constants.version}</Text>\r\n                  <Text>Job: {inputs.JobVersion}</Text>\r\n                </Stack>\r\n              </PivotItem>\r\n            }\r\n          </Pivot>\r\n          <div style={{ marginTop: 10 }}>\r\n            <PrimaryButton type=\"submit\" text=\"Submit\" disabled={isSaving} />\r\n            <Button text=\"Cancel\" onClick={() => props.dismiss()} disabled={isSaving} />\r\n          </div>\r\n        </form>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Panel, initializeIcons, PanelType } from 'office-ui-fabric-react';\r\nimport { useConstCallback } from '@uifabric/react-hooks';\r\nimport Form from \"./form/Form\";\r\n\r\nimport styles from './App.module.scss';\r\n\r\ninitializeIcons(undefined, { disableWarnings: true })\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const openPanel = useConstCallback(() => setIsOpen(true));\r\n  const dismissPanel = useConstCallback(() => setIsOpen(false));\r\n\r\n  window[\"GeneratePiwikProSettings\"] = () => openPanel();\r\n\r\n  return (\r\n    <>\r\n      <a onClick={openPanel} className={`o365sx-neutral-accent-link piwik-pro-settings-link ${styles.piwikProLink}`}>Piwik PRO</a>\r\n      <Panel\r\n        headerText=\"Piwik PRO\"\r\n        isOpen={isOpen}\r\n        type={PanelType.medium}\r\n        onDismiss={dismissPanel}\r\n        closeButtonAriaLabel=\"Close\">\r\n          <Form dismiss={dismissPanel}></Form>\r\n      </Panel>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { IContext } from \"./IContext\";\r\n\r\nexport class Context implements IContext {\r\n    get siteId(): string {\r\n        return _spPageContextInfo.siteId;\r\n    }\r\n    get siteIdWithoutBrackets(): string {\r\n        return _spPageContextInfo.siteId.replace(\"{\", \"\").replace(\"}\", \"\");\r\n    }\r\n\r\n    get webId(): string {\r\n        return _spPageContextInfo.webId;\r\n    }\r\n    get webIdWithoutBrackets(): string {\r\n        return _spPageContextInfo.webId.replace(\"{\", \"\").replace(\"}\", \"\");\r\n    }\r\n\r\n    get webTitle(): string {\r\n        return _spPageContextInfo.webTitle;\r\n    }\r\n    get siteTitle(): string {\r\n        return (_spPageContextInfo as any).siteServerRelativeUrl.split('/').lastItem;\r\n    }\r\n\r\n    get userLoginName(): string {\r\n        return _spPageContextInfo.userLoginName;\r\n    }\r\n\r\n    get userDisplayName(): string {\r\n        return _spPageContextInfo.userDisplayName;\r\n    }\r\n\r\n    get webAbsoluteUrl(): string {\r\n        return _spPageContextInfo.webAbsoluteUrl;\r\n    }\r\n\r\n    get webServerRelativeUrl(): string {\r\n        return _spPageContextInfo.webServerRelativeUrl;\r\n    }\r\n\r\n    get listUrl(): string {\r\n        return _spPageContextInfo.listUrl;\r\n    }\r\n\r\n    get siteAbsoluteUrl(): string {\r\n        return _spPageContextInfo.siteAbsoluteUrl;\r\n    }\r\n\r\n    get serverRequestPath(): string {\r\n        return _spPageContextInfo.serverRequestPath;\r\n    }\r\n\r\n    get listTitle(): string {\r\n        return _spPageContextInfo.listTitle;\r\n    }\r\n\r\n    get listId(): string {\r\n        return _spPageContextInfo.listId.replace(\"{\", \"\").replace(\"}\", \"\");\r\n    }\r\n    get pageListId(): string {\r\n        if(_spPageContextInfo.pageListId)\r\n        {\r\n            return _spPageContextInfo.pageListId.replace(\"{\", \"\").replace(\"}\", \"\");\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get webTemplateConfiguration(): string {\r\n        return (_spPageContextInfo as any).webTemplateConfiguration;\r\n    }\r\n\r\n    get pageItemId(): string {\r\n        if(_spPageContextInfo.pageItemId)\r\n        {\r\n            return _spPageContextInfo.pageItemId.toString();\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get siteServerRelativeUrl(): string {\r\n        return _spPageContextInfo.siteServerRelativeUrl;\r\n    }\r\n    get serverUrl(): string {\r\n        return window.location.origin + _spPageContextInfo.serverRequestPath;\r\n    }\r\n    \r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"./polyfills\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GlobalSettings } from '@uifabric/utilities/lib/GlobalSettings';\r\nimport { getTheme } from '@uifabric/styling/lib/styles/theme';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Tracking } from './tracking/Tracking';\r\nimport { Context } from './tracking/contexts/Context';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { sp } from '@pnp/sp/presets/all';\r\n\r\nconst configureTracking = async (): Promise<void> => {\r\n    const tracking = new Tracking(new Context());\r\n    await tracking.init();\r\n}\r\n\r\nsp.setup({\r\n    sp: {\r\n        baseUrl: _spPageContextInfo.webAbsoluteUrl\r\n    },\r\n    ie11: true\r\n});\r\n\r\nconfigureTracking();\r\n\r\n/**\r\n * Fix to make it work with SharePoint 2019 and OUIFR 7.x\r\n */\r\nconst customizations = GlobalSettings?.getValue('customizations');\r\nconst theme = getTheme();\r\nif (customizations && theme) {\r\n    if (!(customizations as any).settings?.theme?.effects) {\r\n        (customizations as any).settings.theme.effects = { ...theme.effects };\r\n    }\r\n    if (!(customizations as any).settings?.theme?.spacing) {\r\n        (customizations as any).settings.theme.spacing = { ...theme.spacing };\r\n    }\r\n    if (!(customizations as any).settings?.theme?.fonts) {\r\n        (customizations as any).settings.theme.fonts = { ...theme.fonts };\r\n    }\r\n}\r\n/**\r\n * End of fix\r\n */\r\n\r\nconst addPiwikSettings = () => {\r\n    if (_spPageContextInfo.isSiteAdmin !== false) {\r\n        const tryToAddPiwikProSettingsLink = () => {\r\n            const navBarDataLinks = document.querySelector('#O365_Settings_navbardatalinks ul');\r\n            if (navBarDataLinks && !navBarDataLinks.querySelector('.piwikProLink')) {\r\n                const element = document.createElement('li');\r\n                element.className = \"piwikProLink\";\r\n                navBarDataLinks.append(element);\r\n                ReactDOM.render(<App />, element);\r\n            }\r\n\r\n            const settingsButton = document.querySelector('#O365_MainLink_Settings.o365cs-spo-topbarMenuOpen');\r\n            if (settingsButton) {\r\n                const contextMenu = settingsButton.parentElement.querySelector('.contextMenuPopup');\r\n                if (contextMenu && !contextMenu.querySelector('.piwikProLinkContextMenu')) {\r\n                    const element = document.createElement('span');\r\n                    element.className = \"piwikProLinkContextMenu o365button o365cs-contextMenuItem ms-fcl-b ms-fcl-b-h ms-fcl-b-f\";\r\n\r\n                    if (contextMenu.querySelector(\"[aria-label='Piwik PRO']\")) {\r\n                        element.className += \" hiddenPiwikLink\";\r\n                    }\r\n\r\n                    contextMenu.append(element);\r\n                    ReactDOM.render(<App />, element);\r\n                }\r\n            }\r\n\r\n            const siteSettingsButton = document.querySelector('#suiteBarButtons .ms-siteactions-root');\r\n            if (siteSettingsButton && !document.querySelector('.piwikProLink')) {\r\n                const element = document.createElement('div');\r\n                element.className = \"piwikProLink piwikProLinkSiteActions\";\r\n                document.body.append(element);\r\n                ReactDOM.render(<App />, element);\r\n            }\r\n        };\r\n\r\n        const settingsElement = document.querySelector(\"#O365_NavHeader, #suiteBarButtons .ms-siteactions-root\");\r\n        settingsElement?.addEventListener(\"click\", () => {\r\n            const interval = setInterval(tryToAddPiwikProSettingsLink, 100);\r\n            setTimeout(() => clearInterval(interval), 1000);\r\n        }, true);\r\n    }\r\n};\r\n\r\naddPiwikSettings();\r\n\r\nif ((window as any).asyncDeltaManager) {\r\n    (window as any).asyncDeltaManager.add_pageLoaded(() => {\r\n        addPiwikSettings();\r\n    });\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export abstract class SettingsKeys {\r\n    public static readonly ClientID = \"piwik_clientid\";\r\n    public static readonly ClientSecret = \"piwik_clientsecret\";\r\n    public static readonly ContainersUrl = \"piwik_containersurl\";\r\n    public static readonly EnforceSslComunication = \"piwik_enforcessl\";\r\n    public static readonly IsConnectedToMetaSite = \"isconnectedtometasite\";\r\n    public static readonly IsTrackingActive = \"piwik_istrackingactive\";\r\n    public static readonly MetaSiteId = \"piwik_metasitename\";\r\n    public static readonly PiwikStatus = \"PiwikStatus\";\r\n    public static readonly JobVersion = \"piwik_jobversion\";\r\n    public static readonly SendDepartment = \"piwik_senddepartment\";\r\n    public static readonly SendExtendedUserinfo = \"piwik_senduserextendedinfo\";\r\n    public static readonly SendJobTitle = \"piwik_sendjobtitle\";\r\n    public static readonly SendOffice = \"piwik_sendoffice\";\r\n    public static readonly SendUserIdEncoded = \"piwik_senduserencoded\";\r\n    public static readonly SendUserName = \"piwik_sendusername\";\r\n    public static readonly SiteId = \"piwik_metasitenamestored\";\r\n    public static readonly TemplateSendDepartment = \"piwik_templatesenddepartment\";\r\n    public static readonly TemplateSendExtendedUserinfo = \"piwik_templatesenduserextendedinfo\";\r\n    public static readonly TemplateSendJobTitle = \"piwik_templatesendjobtitle\";\r\n    public static readonly TemplateSendOffice = \"piwik_templatesendoffice\";\r\n    public static readonly TemplateSendUserIdEncoded = \"piwik_templatesenduserencoded\";\r\n    public static readonly TemplateSendUserName = \"piwik_templatesendusername\";\r\n    public static readonly Url = \"piwik_serviceurl\";\r\n    public static readonly UseSha3 = \"piwik_sha3\";\r\n    public static readonly UseSiteCollectionSettings = \"piwik_usesitecollectionsettings\";\r\n}"],"sourceRoot":""}