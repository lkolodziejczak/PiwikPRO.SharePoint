{
  "anonymize": false,
  "hashFunction": "sha256",
  "mode": "prod",
  "trackers": [
    {
      "name": "GlobalArrayTracker",
      "params": {
        "variableName": "dataLayer"
      }
    },
    "ConsoleTracker"
  ],
  "sharedEvent": {
    "deepCatch": {
      "site": "complex:{{context:siteAbsoluteUrl}}/_api/web?$select=Title",
      "jobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{context:userLoginName}}%27",
      "department": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{context:userLoginName}}%27",
      "office": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{context:userLoginName}}%27"
    },
    "sharedMappings": {
      "userID": "context:userLoginName.anonymize()",
      "userDisplayName": "context:userDisplayName",
      "userDepartment": "deep:department.value",
      "userOffice": "deep:office.value",
      "userJobTitle": "deep:jobTitle.value",
      "documentLibraryName": "context:listUrl.getLastSegment()",
      "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
      "documentLibraryID": "context:listId",
      "!listTitle": "context:listTitle",
      "webTitle": "context:webTitle",
      "webID": "context:webIdWithoutBrackets",
      "siteCollectionID": "context:siteIdWithoutBrackets",
      "siteCollectionTitle": "deep:site.Title"


    }
  },
  "events": [
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "^(?=.*(http:\/\/.*?[^/]+\/$|https:\/\/.*?[^/]+\/$|\/Pages\/.*?\\.aspx|\/Seiten\/.*?\\.aspx|\/SitePages\/.*?\\.aspx|\/start.aspx#\/_.*|\/_layouts\/\\d+\/start\\.aspx#[/]?))(?:(?!.*(Seiten\/Forms|SitePages\/Forms|\/Lists\/|\/Forms\/|\/AllPages\\.aspx\/|\/_layouts\/\\d+\/(?!.*start.aspx)|\/start.aspx#\/([a-zA-Z]+$|[a-zA-Z]+\/$))).).*",
      "deepCatch": {
        "props": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$expand=ContentType,FieldValuesAsText",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageTitle": "complex:{{context:webTitle}} - {{deep:props.FieldValuesAsText.FileLeafRef.removeAspxExtension()}}",
        "pageUrl": "url:(^[^?]*)",
        "pageUniqueID": "deep:props.FieldValuesAsText.UniqueId",
        "pageID": "context:pageItemId.parseInt()",
        "pageSize": "deep:props.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "pageName": "deep:props.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "contentTypeName": "deep:props.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testPropertyForDetectNews": "deep:props.LayoutWebpartsContent"
      }
    },
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "^(?=.*_layouts\/[\\d]{2}\/viewlsts.aspx)(?!.*(SitePages|Pages|Seiten)).*",
      "deepCatch": {},
      "mappings": {
        "pageUrl": "url:(.+?(?=_layouts\/[\\d]{2}))",
        "contentTypeName": "eval:'Other'",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      }
    },
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "\/SitePages\/_layouts\/15\/viewlsts.aspx",
      "deepCatch": {},
      "mappings": {
        "contentTypeName": "eval:'Other'",
        "pageUrl": "url:(.*\/SitePages\/)"
      }
    },
    {
      "name": "pageViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "\/Forms\/",
      "deepCatch": {},
      "mappings": {
        "contentTypeName": "eval:'Other'",
        "pageUrl": "url:(^.*(?=(Forms\/)))"
      }
    },
    {
      "name": "listViewEnrichment",
      "eventType": "pageView",
      "pageUrl": "^(?=.*\/Lists\/)(?:(?!.*(DispForm\\.aspx|\/EditForm\\.aspx|\/NewForm\\.aspx)).)*$",
      "deepCatch": {
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      }
    },
    {
      "name": "itemShared",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/ShareObject.*?@a2=.*$",
      "pageUrl": "\/Lists\/",
      "deepCatch": {
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=FieldValuesAsText",
        "listTitle": "complex:{{ancestor:2}}?@a1={{querystring:@a1}}",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "listUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileDirRef}}/",
        "listTitle": "deep:listTitle.Title",
        "listID": "context:listId",
        "itemTitle": "deep:item.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}/",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "filePinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/AddToSpotlight\\(itemId=@itemId,folderPath=@folderPath,afterItemId=@afterItemId\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@itemId}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileID": "deep:request.FieldValuesAsText.ID",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",

        "fileSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "parentFolderTitle": "deep:folder.Title"

      }
    },
    {
      "name": "fileUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/RemoveFromSpotlight\\(itemId=@itemId,folderPath=@folderPath.*\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@itemId}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileID": "deep:request.FieldValuesAsText.ID",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderPinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/AddToSpotlight\\(itemId=@itemId,folderPath=@folderPath,afterItemId=@afterItemId\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@itemId}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderTitle": "deep:item.Title",
        "folderID": "deep:item.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"

      }
    },
    {
      "name": "folderUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/RemoveFromSpotlight\\(itemId=@itemId,folderPath=@folderPath.*\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@itemId}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "folderTitle": "deep:item.Title",
        "folderID": "deep:item.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePinnedToTop",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/AddToSpotlight\\(itemId=@itemId,folderPath=@folderPath.*\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@list}})/Items({{querystring:@itemId}})?&$expand=FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:item.FieldValuesAsText.FileLeafRef",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.ID",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageUnpinned",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "method": "post",
      "catchFilter": "\/GetList\\(strUrl=@list\\)\/GetView\\(viewGuid=@view\\)\/RemoveFromSpotlight\\(itemId=@itemId,folderPath=@folderPath.*\\)\\?@itemId=.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/GetList({{querystring:@list}})/Items({{querystring:@itemId}})?&$expand=FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:item.FieldValuesAsText.FileLeafRef",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.ID",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareObject.*?[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=File,Properties,FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@itemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.File.ServerRelativeUrl}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:item.FieldValuesAsText.FileLeafRef.",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.Id",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "method": "click",
      "catchFilter": "#btnShare, #lnkGetLnkDlg",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 500,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deferredMappings": {},
      "mappings": {
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "pageSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",

        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageID": "deep:request.ID.parseInt()",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "suffix": "_contextmenu",
      "method": "click",
      "catchFilter": "a#ID_GetLink",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": false,
      "delay": 500,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deferredMappings": {},
      "mappings": {
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "pageSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",

        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageID": "deep:request.ID.parseInt()",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "folderCreatedOrUploaded",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/folders\/AddUsingPath\\(DecodedUrl=@a1,overwrite=@a2\\)\\?.*$[/]*$",
      "deepCatch": {
        "folder": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFolderByServerRelativePath(DecodedUrl={{querystring:@a1}})?&$expand=ListItemAllFields,ListItemAllFields/ContentType",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{deep:folder.ListItemAllFields.ID}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:folder.ListItemAllFields.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:folder.ServerRelativeUrl}}/",
        "folderName": "deep:folder.Name",
        "folderTitle": "deep:folder.ListItemAllFields.Title",
        "folderUniqueId": "deep:folder.UniqueId",
        "folderID": "deep:folder.ListItemAllFields.ID",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileUploaded",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/GetFileByServerRelativePath\\(DecodedUrl=@a1\\)\/FinishUpload.*?[/]*$",
      "deepCatch": {
        "folder": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(DecodedUrl={{querystring:@a1}})?&$expand=ListItemAllFields,ListItemAllFields/ContentType,ListItemAllFields/FieldValuesAsText",
        "item": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&$expand=Author&$filter=ServerRelativeUrl eq {{querystring:@a1}}",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:item.Author.LoginName.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:item.Author.LoginName.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:item.Author.LoginName.decodeClaims()}}%27"
      },
      "mappings": {
        "libraryName": "context:listTitle",
        "fileSize": "response:parseJson().d.Length",
        "fileUniqueID": "response:parseJson().d.UniqueId",
        "fileName": "response:parseJson().d.Name",
        "fileExt": "response:parseJson().d.Name.substractExt()",
        "fileUrl": "complex:{{global:location.origin}}{{response:parseJson().d.ServerRelativeUrl}}",
        "parentFolderName": "deep:folder.ListItemAllFields.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:folder.ListItemAllFields.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorDisplayName": "deep:item.Author.Title",
        "authorID": "deep:item.Author.LoginName.decodeClaims().anonymize()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareObject.*?[/]*$",
      "pageUrl": "^(?:(?!\/Lists\/).)*$",
      "deepCatch": {
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "request": "complex:{{ancestor:1}}?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=File/Author,FieldValuesAsText,ContentType",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageAddToNavigation",
      "suffix": 1,
      "eventType": "ajax",
      "method": "post",
      "pageUrl": "^(?!.*(SitePages\/Forms)).*",
      "catchFilter": "\/navigation\/QuickLaunch[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1={{querystring:@a1}}&@a2={{context:pageItemId}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{context:pageItemId}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{response:Url}}",
        "pageTitle": "response:Title",
        "pageID": "context:pageItemId",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageAddToNavigation",
      "suffix": 2,
      "eventType": "ajax",
      "method": "post",
      "pageUrl": "SitePages\/Forms",
      "catchFilter": "\/navigation\/QuickLaunch[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1={{context:listId}}&@a2={{selectedRows:0.ID}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{selectedRows:0.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{response:parseJson().d.Url}}",
        "pageTitle": "response:parseJson().d.Title",
        "pageID": "selectedRows:0.ID.parseInt()",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageMakeHomePage",
      "eventType": "ajax",
      "suffix": "_modern",
      "method": "post",
      "catchFilter": "\/RootFolder$",
      "deepCatch": {
        "pageProps": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='{{context:webServerRelativeUrl}}/{{body:parseJson().WelcomePage}}')",
        "pagePropsAllFields": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='{{context:webServerRelativeUrl}}/{{body:parseJson().WelcomePage}}')/ListItemAllFields",
        "item": "complex:{{ancestor:1}}/GetFileByServerRelativePath(decodedurl='{{context:webServerRelativeUrl}}/{{body:parseJson().WelcomePage}}')?&$expand=ListItemAllFields",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:item.ListItemAllFields.Id}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageName": "deep:item.Name",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.ListItemAllFields.Id",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "reloadTrackerForPageUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "li[id*='Ribbon.WebPartPage-title'] > a",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "pageMakeHomePage",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='HomePage_ToolTip']",
      "deferred": true,
      "confirmation": true,
      "immediateProcessDeferred": true,
      "registerOnEvent": "click",
      "delay": 1200,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=Title,Id,FileSizeDisplay,UniqueId,FileRef,FileLeafRef,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "context:pageItemId",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:propList.value.0.UniqueId",
        "pageSize": "deep:propList.value.0.FileSizeDisplay",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageMakeHomePage",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:window",
      "targetCatchFilter": "a[aria-describedby*='HomePage_ToolTip']",
      "deferred": true,
      "confirmation": false,
      "registerOnEvent": null,
      "immediateProcessDeferred": true,
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=Title,Id,FileSizeDisplay,UniqueId,FileRef,FileLeafRef,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "context:pageItemId",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:propList.value.0.UniqueId",
        "pageSize": "deep:propList.value.0.FileSizeDisplay",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "folderShared",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "post",
      "catchFilter": "\/Lists.*?\/GetItemById.*?\/ShareObject.*?[/]*$",
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1={{querystring:@a1}}&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{querystring:@a2}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "folderTitle": "deep:request.Title",
        "folderID": "deep:request.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/"
      }
    },
    {
      "name": "pagePromoteAsNews",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\/sitepages\/pages\\(\\d+\\)\/PromoteToNews$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/Web/GetFileByServerRelativePath(decodedurl='{{global:location.pathname}}')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.ListItemAllFields.ID",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteCopyLink",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[class*=copyButton]",
      "pageUrl": "^(?!.*(\/Lists\/|\/Forms\/)).*",
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFileByServerRelativePath(decodedurl='{{global:location.pathname}}')?&$expand=ListItemAllFields,Author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.ServerRelativeUrl}}",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.ListItemAllFields.ID",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "suffix": "_file",
      "catchFilter": "button[class*=copyButton]",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "suffix": "_folder",
      "catchFilter": "button[class*=copyButton]",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "folderTitle": "deep:request.Title",
        "folderID": "deep:request.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "suffix": "_page",
      "catchFilter": "button[class*=copyButton]",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:item.FieldValuesAsText.FileLeafRef.",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.Id",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "suffix": "_modern_fromSiteContents",
      "method": "click",
      "catchFilter": "button.ms-ListCreationPanel-CreateButton[aria-label='Create']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{ancestor:3}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.querySelector(\".ms-ListCreationPanelContent input.ms-TextField-field\"); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listURL": "url:(.*[^Forms\\/][^AllItems.aspx])",
        "listID": "deep:propertiesList.Id",
        "!DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      }
    },
    {
      "name": "listUpdated",
      "eventType": "ajax",
      "method": "post",
      "suffix": "_byAddItem",
      "catchFilter": "\\/_api\\/web\\/GetList\\(@a1\\)\\/AddValidateUpdateItemUsingPath\\(\\)\\?\\@a1=.*?[/]*$",
      "deepCatch": {},
      "mappings": {
        "listID": "context:listId",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)",
        "listTitle": "context:listTitle"
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "suffix": "_quickEdit",
      "catchFilter": "eval:document.querySelector('.CommandBar [data-icon-name=\"CheckMark\"]').parentElement.parentElement",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "listUrl": "eval:window.location.href.substring(0,window.location.href.lastIndexOf('/')+1)"
      }
    },
    {
      "name": "publishAction",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/sitepages\\/pages\\(\\d+\\)\\/publish$",
      "deepCatch": {
        "propList": "complex:{{ancestor:1}}?$select=AbsoluteUrl,ContentTypeId,UniqueId,Title,LayoutWebpartsContent,Version",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageID": "deep:propList.UniqueId",
        "pageUrl": "deep:propList.AbsoluteUrl",
        "typeOfContent": "deep:propList.ContentTypeId",
        "listID": "context:listId",
        "pageName": "deep:propList.Title",
        "!testPageProperty1": "deep:propList.LayoutWebpartsContent.parseJson().0.properties.titlePlaceholder",
        "!pageVersion": "deep:propList.Version",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "subsiteCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl00_RptControls_BtnCreateSubweb",
      "deferred": true,
      "blocking": true,
      "registerOnEvent": null,
      "immediateProcessDeferred": false,
      "delay": 0,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {
        "SubsiteTitle": "eval:document.querySelector('#ctl00_PlaceHolderMain_idTitleDescSection_ctl01_TxtCreateSubwebTitle').value",
        "SubsiteWebAddress": "eval:document.querySelector('#ctl00_PlaceHolderMain_idUrlSection_ctl01_TxtCreateSubwebName').value"
      },
      "mappings": {
        "pageName": "deferred:SubsiteTitle",
        "template": "context:webTemplateConfiguration",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      }
    },
    {
      "name": "listItemDirectView",
      "eventType": "event",
      "method": "click",
      "suffix": "_clickItem",
      "catchFilter": "eval: document.querySelectorAll(\"button[data-automationid='FieldRenderer-title']\")",
      "deferred": false,
      "registerOnEvent": "DOMSubtreeModified",
      "eventNodes": "div[data-automationid='DetailsList']",
      "registerOnInit": true,
      "delay": 500,
      "delayExecution": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)//items?$filter=Title eq '{{event:target.title}}'&@a1='{{context:listId}}'&$expand=FieldValuesAsText,ContentType"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listID": "context:listId",
        "itemTitle": "event:target.title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef}}/"
      }
    },
    {
      "name": "listItemDirectView",
      "eventType": "pageView",
      "pageUrl": "\\/DispForm.aspx\\?ID=[0-9]",
      "suffix": "_directlyOpenFromLink",
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists('{{context:listId}}')/GetItemById({{eval: window.location.search.substr(0,window.location.search.indexOf('&')).split('?ID=')[1]}})?$select=FileRef"
      },
      "mappings": {
        "listUrl": "eval: window.location.href.substr(0, window.location.href.lastIndexOf('/')).replaceAll('%20',' ')+'/'",
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "itemTitle": "eval:try{\ndocument.querySelector('.od-FieldEditor-display')?document.querySelector('.od-FieldEditor-display').textContent:document.querySelector('#SPFieldText').innerText} \ncatch{}",
        "itemUrl": "complex:{{eval:window.location.origin}}{{deep:item.FileRef}}/"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_modern_clickOnItem_noID",
      "method": "click",
      "pageUrl": "^(?:(?!id=|\/_layouts\/\\d+\/viewlsts.aspx|\/SitePages\/Forms).)*$",
      "catchFilter": "[data-automationid=\"DetailsRow\"]:not([aria-label*=\"Folder,\"]) span span span a",
      "deferred": false,
      "blocking": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{event:target.textContent}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType&$select=Title,FieldValuesAsText/UniqueId,FieldValuesAsText/FileLeafRef,FieldValuesAsText/File_x005f_x0020_x005f_Type,FieldValuesAsText/FileRef,FieldValuesAsText/FileDirRef,FieldValuesAsText/Created_x005f_x0020_x005f_By,FieldValuesAsText/Author,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileOpenedOrEdited",
      "eventType": "event",
      "suffix": "_modern_clickOnItem_ID",
      "method": "click",
      "pageUrl": "^.*?id=.*$",
      "catchFilter": "[data-automationid=\"DetailsRow\"]:not([aria-label*=\"Folder,\"]) span span span a",
      "deferred": false,
      "blocking": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{querystring:id}}/{{event:target.textContent}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType&$select=Title,FieldValuesAsText/UniqueId,FieldValuesAsText/FileLeafRef,FieldValuesAsText/File_x005f_x0020_x005f_Type,FieldValuesAsText/FileRef,FieldValuesAsText/FileDirRef,FieldValuesAsText/Created_x005f_x0020_x005f_By,FieldValuesAsText/Author,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_modern_contextMenu",
      "method": "click",
      "pageUrlCondition": "^.*?id=.*$",
      "catchFilter": "button[aria-label='Download']",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": false,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{querystring:id}}/{{eval:document.querySelector('[aria-selected=true] a').getAttribute('title')}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_modern_contextMenu",
      "method": "click",
      "pageUrlCondition": "^(?:(?!id=).)*$",
      "catchFilter": "button[aria-label='Download']",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": false,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{eval:document.querySelector('[aria-selected=true] a').getAttribute('title')}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_modern_fromMenu",
      "method": "click",
      "pageUrlCondition": "^.*?id=.*$",
      "catchFilter": "div[aria-label='Download']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{querystring:id}}/{{eval:document.querySelector('[aria-selected=true] a').getAttribute('title')}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_modern_fromMenu",
      "method": "click",
      "pageUrlCondition": "^(?:(?!id=).)*$",
      "catchFilter": "div[aria-label='Download']",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{eval:document.querySelector('[aria-selected=true] a').getAttribute('title')}}')/ListItemAllFields?$expand=FieldValuesAsText,ContentType/SchemaXml",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pagePromoteEmail",
      "eventType": "event",
      "method": "click",
      "suffix": "_modern",
      "catchFilter": "button[data-automation-id='promoteEmail']",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 300,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{ancestor:2}}/_api/Web/GetFileByServerRelativePath(decodedurl='{{context:listUrl}}/{{url:(?<=\/SitePages\/)(.*?)(?=\\.aspx)}}.aspx')/ListItemAllFields?&$expand=FieldValuesAsText,ContentType",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "pageTitle": "deep:request.Title",
        "pageID": "deep:request.ID",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listItemAttachmentView",
      "eventType": "event",
      "method": "click",
      "suffix": "_modern",
      "catchFilter": "eval:try {var el = document.querySelectorAll(\"span.ms-attachment-text--uploaded\")} catch(e) {}; el?el:null",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}/{{context:webServerRelativeUrl}}/_api/Web/lists/GetByTitle('{{context:listTitle}}')/items?$filter=Title eq '{{eval:document.querySelector('.od-Panel .od-Panel-content .od-ListForm-breadcrumb ul.BreadcrumbBar-list span.BreadcrumbBar-item').getAttribute('title')}}'&$expand=FieldValuesAsText"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "listID": "context:listId",
        "itemTitle": "deep:request.value.0.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FieldValuesAsText.FileRef}}/"
      }
    },
    {
      "name": "commentItem",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:2}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "itemUniqueId": "deep:item.UniqueId",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{response:id}}",
        "commentText": "response:text",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "!itemContentTypeId": "deep:item.ContentTypeId",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "commentReply",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetItemById\\([0-9]+\\)\\/comments\\([0-9]+\\)\\/replies[/]*$",
      "deepCatch": {
        "item": "complex:{{ancestor:3}}/items({{url:\\/GetItemById\\(([0-9]+)\\)\\/}})?$select=UniqueId,EncodedAbsUrl,Author/UserName,ContentTypeId,ContentType/SchemaXml,LayoutWebpartsContent&$expand=Author,ContentType",
        "comment": "complex:{{ancestor:1}}?$select=id,author",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "itemUniqueId": "deep:item.UniqueId",
        "itemUrl": "deep:item.EncodedAbsUrl",
        "commentUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{deep:comment.id}}",
        "commentText": "response:text",
        "commentReplyUrl": "complex:{{deep:item.EncodedAbsUrl}}#comment={{response:id}}",
        "itemContentTypeName": "deep:item.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "!testCommentPageProperty1": "deep:item.LayoutWebpartsContent",
        "!itemContentTypeId": "deep:item.ContentTypeId",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_createButton",
      "deferred": true,
      "registerOnEvent": null,
      "nextPageUrl": "\\.aspx\\?WikiPageMode=Edit\\&InitialTabId=Ribbon.EditingTools.CPEditTab\\&VisibilityContext=WSSWikiPage.*?[/]*$",
      "blocking": true,
      "delay": 300,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:listId}}')/Items?$filter=FileLeafRef eq '{{deferred:PageName}}.aspx'&$select=UniqueId",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "deferredMappings": {
        "PageName": "eval:if(document.activeElement.contentDocument) {document.activeElement.contentDocument.querySelector('#ctl00_PlaceHolderMain_nameInput').value;} else {document.querySelector('#ctl00_PlaceHolderMain_nameInput').value; }"
      },
      "mappings": {
        "pageID": "deep:propList.value.0.UniqueId",
        "pageUrl": "url:(.*\\.aspx)",
        "typeOfContent": "eval:'Wiki Page'",
        "listID": "context:listId",
        "pageName": "deferred:PageName",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automation-id='pageCommandBarEditButton']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[id='ctl00_PageStateActionButton'][_action='save']",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='WebPartPage.Edit.Edit.Menu.Actions.Stop_ToolTip']",
      "deferred": false,
      "blocking": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[id*='Ribbon.WebPartPage.Edit.Edit.Menu.Actions.Stop-Menu32']",
      "deferred": false,
      "blocking": true,
      "registerOnEvent": "click",
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='SaveAndStop_ToolTip']",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "input[ID='SaveDlgYes'][value='Save']",
      "deferred": true,
      "blocking": true,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='Save_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 200,
      "nextPageUrl": null,
      "immediateProcessDeferred": true,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='SaveAndStop_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 200,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:pageListId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=FileRef,FileLeafRef,GUID,ContentTypeId,ContentType/SchemaXml&$expand=ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[title='Edit'][role='button']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": "\\.aspx.*?[/]*$",
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForPageEdited2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='StopEditing_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 100,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "button[data-automation-id='pageCommandBarEditButton']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 2500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "pageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='SaveAndPublish_ToolTip']",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 500,
      "nextPageUrl": null,
      "deepCatch": {
        "propList": "complex:{{ancestor:2}}/_api/web/lists(guid'{{context:listId}}')/Items?$filter=ID eq '{{context:pageItemId}}'&$select=ContentType/SchemaXml&$expand=ContentType",
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{context:pageItemId}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:pageListId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:propList.value.0.FileRef}}",
        "pageName": "deep:propList.value.0.FileLeafRef.removeAspxExtension()",
        "pageID": "deep:propList.value.0.GUID",
        "contentTypeName": "deep:propList.value.0.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "reloadTrackerForPageEdited",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[title='Edit'][role='button']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 0,
      "nextPageUrl": "\\.aspx.*?[/]*$",
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForPageEdited2",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a[aria-describedby*='StopEditing_ToolTip']",
      "deferred": true,
      "registerOnEvent": "click",
      "delay": 100,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "folderCreated",
      "suffix": "_noRootFolder",
      "eventType": "event",
      "method": "click",
      "pageUrl": "^(?:(?!RootFolder=%2F.*?%2F.*?%2F.*?%2F.*&).)*$",
      "catchFilter": "input[id*='_toolBarTbl_RightRptControls_'][id$='_diidIOSaveItem']",
      "deferred": true,
      "blocking": true,
      "immediateProcessDeferred": true,
      "pageUrlCondition": "^(?!.*\/Lists\/)(?:(?!DispForm\\.aspx).)*$",
      "registerOnEvent": "keyup",
      "registerOnInit": false,
      "delay": 0,
      "delayExecution": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl",
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{deep:rootListProps.ServerRelativeUrl}}/{{deferred:id}}%27)/ListItemAllFields?$select=FileRef,FileDirRef,Title,FileLeafRef,ContentTypeId,ContentType/SchemaXml,UniqueId,Id&$expand=ContentType"
      },
      "deferredMappings": {
        "id": "eval:if(window.document.querySelector('iframe[id^=DlgFrame]')){window.document.querySelector('iframe[id^=DlgFrame]').contentWindow.document.querySelector('[id*=\"_folderNameInput\"][id$=\"_onetidIOFile\"]').value}else{document.querySelector('[id*=\"_folderNameInput\"][id$=\"_onetidIOFile\"]').value}"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FileRef}}/",
        "folderName": "deep:request.FileLeafRef",
        "folderTitle": "deep:request.Title",
        "contentTypeName": "eval:'Folder'",
        "folderUniqueID": "deep:request.UniqueId",
        "folderID": "deep:request.Id",
        "parentFolderName": "deep:rootListProps.Name",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "folderCreated",
      "suffix": "_RootFolder",
      "eventType": "event",
      "method": "click",
      "pageUrl": "RootFolder=%2F.*?%2F.*?%2F.*?%2F.*&",
      "catchFilter": "input[id*='_toolBarTbl_RightRptControls_'][id$='_diidIOSaveItem']",
      "deferred": true,
      "blocking": true,
      "immediateProcessDeferred": true,
      "pageUrlCondition": "^(?!.*\/Lists\/)(?:(?!DispForm\\.aspx).)*$",
      "registerOnEvent": "keyup",
      "registerOnInit": false,
      "delay": 0,
      "delayExecution": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{deferred:rootfolder}}/{{deferred:id}}%27)/ListItemAllFields?$select=FileRef,FileDirRef,Title,FileLeafRef,ContentTypeId,ContentType/SchemaXml,UniqueId,Id&$expand=ContentType",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/lists(guid'{{context:pageListId}}')/RootFolder?$select=Name,ServerRelativeUrl"
      },
      "deferredMappings": {
        "id": "eval:if(window.document.querySelector('iframe[id^=DlgFrame]')){window.document.querySelector('iframe[id^=DlgFrame]').contentWindow.document.querySelector('[id*=\"_folderNameInput\"][id$=\"_onetidIOFile\"]').value}else{document.querySelector('[id*=\"_folderNameInput\"][id$=\"_onetidIOFile\"]').value}",
        "rootfolder": "querystring:RootFolder"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FileRef}}/",
        "folderName": "deep:request.FileLeafRef",
        "folderTitle": "deep:request.Title",
        "contentTypeName": "eval:'Folder'",
        "folderUniqueID": "deep:request.UniqueId",
        "folderID": "deep:request.Id",
        "parentFolderName": "deep:request.FileLeafRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FileDirRef}}/",
        "documentLibraryName": "deep:rootListProps.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "itemShared",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#btnShare",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 0,
      "pageUrl": "\/Lists\/",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=Properties,FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "listUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "listTitle": "context:listTitle",
        "listID": "context:listId",
        "itemTitle": "deep:request.FieldValuesAsText.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderShared",
      "eventType": "event",
      "suffix": "_classic",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": "#btnShare, #lnkGetLnkDlg",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 500,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "id": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{folderpath:[class$='itm-selected'] [isecb='TRUE'] div a}}%27)?$expand=ListItemAllFields,ListItemAllFields/ContentType,Id,ServerRelativeUrl,ListItemAllFields/FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{deep:id.ListItemAllFields.ID}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderName": "deep:id.Name",
        "folderUrl": "complex:{{global:location.origin}}{{deep:id.ServerRelativeUrl}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "parentFolderName": "deep:id.ListItemAllFields.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:id.ListItemAllFields.FieldValuesAsText.FileDirRef}}/",
        "folderTitle": "deep:id.ListItemAllFields.Title",
        "folderID": "deep:id.ListItemAllFields.ID",
        "folderUniqueId": "deep:id.ListItemAllFields.FieldValuesAsText.UniqueId",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderShared",
      "eventType": "event",
      "suffix": "_contextmenu",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "method": "click",
      "catchFilter": "a#ID_GetLink",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": false,
      "delay": 500,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "id": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{folderpath:[class$='itm-selected'] [isecb='TRUE'] div a}}%27)?$expand=ListItemAllFields,ListItemAllFields/ContentType,Id,ServerRelativeUrl,ListItemAllFields/FieldValuesAsText",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{deep:id.ListItemAllFields.ID}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderName": "deep:id.Name",
        "folderUrl": "complex:{{global:location.origin}}{{deep:id.ServerRelativeUrl}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "parentFolderName": "deep:id.ListItemAllFields.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:id.ListItemAllFields.FieldValuesAsText.FileDirRef}}/",
        "folderTitle": "deep:id.ListItemAllFields.Title",
        "folderID": "deep:id.ListItemAllFields.ID",
        "folderUniqueId": "deep:id.ListItemAllFields.FieldValuesAsText.UniqueId",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "method": "click",
      "catchFilter": "a.ms-listlink.ms-draggable:not([aria-label$='Folder'])",
      "blocking": true,
      "pageUrl": "^(?!.*((SitePages|SiteAssets)\/Forms)|(.*\/Lists\/)).*",
      "registerOnEvent": "click",
      "eventNodes": null,
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Title,UniqueId,ID,File_x0020_Type,FileLeafRef,FileRef,FileDirRef&$filter=FileLeafRef eq '{{event:target.href.getLastSegment()}}'&@a1=%27{{context:pageListId}}%27",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=FileLeafRef eq '{{event:target.href.getLastSegment()}}'&@a1=%27{{context:pageListId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "rootListProps": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)?@a1=%27{{context:pageListId}}%27&$expand=RootFolder&$select=Title,RootFolder/Name,RootFolder/ServerRelativeUrl"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.value.0.UniqueId",
        "fileID": "deep:request.value.0.ID.parseInt()",
        "fileExt": "deep:request.value.0.File_x0020_Type",
        "fileName": "deep:request.value.0.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FileRef}}",
        "parentFolderName": "deep:request.value.0.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.value.0.FileDirRef}}/",
        "parentFolderTitle": "deep:rootListProps.Title",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "documentLibraryName": "deep:rootListProps.RootFolder.Name",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{deep:rootListProps.RootFolder.ServerRelativeUrl}}/",
        "documentLibraryID": "context:pageListId",
        "!listTitle": "deep:rootListProps.Title"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_contextmenu",
      "method": "click",
      "catchFilter": "#ID_DownloadACopy",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "eventNodes": null,
      "registerOnInit": true,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDownloaded",
      "eventType": "event",
      "suffix": "_contextmenu",
      "method": "click",
      "catchFilter": "#ID_DownloadACopy, a[id^='Ribbon.Documents.Copies.Download']",
      "deferred": false,
      "registerOnEvent": "click",
      "eventNodes": null,
      "registerOnInit": false,
      "delay": 600,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "event",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "method": "click",
      "catchFilter": "#btnShare, #lnkGetLnkDlg",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": false,
      "delay": 500,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deferredMappings": {},
      "mappings": {
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "event",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "suffix": "_contextmenu",
      "method": "click",
      "catchFilter": "a#ID_GetLink",
      "deferred": false,
      "registerOnEvent": "contextmenu",
      "registerOnInit": false,
      "delay": 500,
      "pageUrl": "^(?:(?!Lists).)*$",
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deferredMappings": {},
      "mappings": {
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listCreated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "input#ctl00_PlaceHolderMain_onetidCreateList",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 3000,
      "nextPageUrl": null,
      "deepCatch": {
        "propertiesList": "complex:{{context:webAbsoluteUrl}}/_api/web/lists/GetByTitle('{{deferred:ListTitle}}')?$select=ID,DocumentTemplateUrl,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
        "ListTitle": "eval:var el = document.activeElement.contentDocument.querySelector('#onetidListTitle'); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:ListTitle",
        "listURL": "complex:{{global:location.origin}}{{deep:propertiesList.RootFolder.ServerRelativeUrl}}/",
        "listID": "deep:propertiesList.Id",
        "!DocumentTemplateUrl": "deep:propertiesList.DocumentTemplateUrl",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      }
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "suffix": "_classic_addItem",
      "catchFilter": "[id$='RightRptControls_ctl00_ctl00_diidIOSaveItem']",
      "deferred": true,
      "blocking": true,
      "registerOnEvent": null,
      "registerOnInit": false,
      "pageUrlCondition": ".*\/Lists\/*.",
      "delay": 500,
      "delayExecution": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "list": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists('{{context:listId}}')?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "deep:list.Title",
        "listID": "context:listId",
        "listUrl": "complex:{{global:location.origin}}{{deep:list.RootFolder.ServerRelativeUrl}}/"
      },
      "comment": "From 'new item' click on page"
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "suffix": "_classic_quickEdit",
      "catchFilter": "eval:document.querySelectorAll('a.ms-list-addnew, .ms-heroCommandLink')[1]",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 200,
      "delayExecution": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "list": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists('{{context:listId}}')?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "deep:list.Title",
        "listID": "context:listId",
        "listUrl": "complex:{{global:location.origin}}{{deep:list.RootFolder.ServerRelativeUrl}}/"
      },
      "comment": "From edit click on page"
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "suffix": "_classic_ribbon",
      "catchFilter": "eval:document.querySelectorAll(\"a[id^='Ribbon.List.ViewFormat.Datasheet']\")",
      "deferred": false,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 600,
      "delayExecution": 0,
      "nextPageUrl": null,
      "deepCatch": {
        "list": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists('{{context:listId}}')?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "deep:list.Title",
        "listID": "context:listId",
        "listUrl": "complex:{{global:location.origin}}{{deep:list.RootFolder.ServerRelativeUrl}}/"
      },
      "comment": "From quick edit on ribbon"
    },
    {
      "name": "listUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl01_RptControls_BtnSave",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\.aspx\\?List={.*?[/]*$",
      "deepCatch": {
        "list": "complex:{{context:siteAbsoluteUrl}}/_api/web/Lists('{{context:pageListId}}')?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
        "NewTitle": "eval:var el = document.querySelector('#ctl00_PlaceHolderMain_ctl00_ctl03_TxtListTitle'); el ? el.value : null"
      },
      "mappings": {
        "listTitle": "deferred:NewTitle",
        "listID": "context:listId",
        "listUrl": "complex:{{global:location.origin}}{{deep:list.RootFolder.ServerRelativeUrl}}/"
      },
      "comment": "From list settings, change list title"
    },
    {
      "name": "reloadTrackerForListUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "li[id*='List-title'] > a",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "reloadTrackerForListUpdated",
      "eventType": "event",
      "method": "click",
      "catchFilter": "document.querySelectorAll(\"li[role=tab] a\")",
      "deferred": false,
      "registerOnEvent": "click",
      "delay": 1500,
      "nextPageUrl": null,
      "deepCatch": {},
      "mappings": {}
    },
    {
      "name": "fileUploaded",
      "eventType": "event",
      "method": "click",
      "suffix": "_rootFolder",
      "pageUrl": "RootFolder=%2F.*?%2F.*?%2F.*?%2F.*&",
      "catchFilter": "input[id$=_RptControls_btnOK]",
      "deferred": true,
      "confirmation": false,
      "immediateProcessDeferred": true,
      "registerOnEvent": null,
      "blocking": true,
      "delay": 0,
      "nextPageUrl": null,
      "deferredMappings": {
        "id": "eval:if(window.document.querySelector('iframe[id^=DlgFrame]')){window.document.querySelector('iframe[id^=DlgFrame]')?window.document.querySelector('iframe[id^=DlgFrame]').contentWindow.document.querySelector('input[id$=_InputFile]').value.slice(12):document.querySelector('input[id$=_InputFile]').value.slice(12)}else{document.querySelector('input[id$=_InputFile]').value.slice(12)}",
        "rootfolder": "querystring:RootFolder",
        "ListIDd": "context:listId"
      },
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{deferred:rootfolder}}/{{deferred:id}}%27)/ListItemAllFields?$select=FileRef,FileDirRef,Title,FileLeafRef,ContentTypeId,ContentType/SchemaXml,UniqueId,Id,FieldValuesAsText/File_x005f_x0020_x005f_Type,FieldValuesAsText/SMTotalFileStreamSize,FieldValuesAsText/FileLeafRef,FieldValuesAsText/FileRef,FieldValuesAsText/FileDirRef&$expand=ContentType,FieldValuesAsText"
      },
      "mappings": {
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize.parseInt()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'"

      }
    },
    {
      "name": "fileUploaded",
      "eventType": "event",
      "method": "click",
      "suffix": "_noRootFolder",
      "pageUrl": "^(?:(?!RootFolder=%2F.*?%2F.*?%2F.*?%2F.*&).)*$",
      "catchFilter": "input[id$=_RptControls_btnOK]",
      "deferred": true,
      "confirmation": false,
      "immediateProcessDeferred": true,
      "registerOnEvent": null,
      "blocking": true,
      "delay": 0,
      "nextPageUrl": null,
      "deferredMappings": {
        "id": "eval:if(window.document.querySelector('iframe[id^=DlgFrame]')){window.document.querySelector('iframe[id^=DlgFrame]')?window.document.querySelector('iframe[id^=DlgFrame]').contentWindow.document.querySelector('input[id$=_InputFile]').value.slice(12):document.querySelector('input[id$=_InputFile]').value.slice(12)}else{document.querySelector('input[id$=_InputFile]').value.slice(12)}",
        "rootfolder": "querystring:RootFolder",
        "ListIDd": "context:listId"
      },
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/Web/GetFolderByServerRelativeUrl(%27{{context:listUrl}}/{{deferred:id}}%27)/ListItemAllFields?$select=FileRef,FileDirRef,Title,FileLeafRef,ContentTypeId,ContentType/SchemaXml,UniqueId,Id,FieldValuesAsText/File_x005f_x0020_x005f_Type,FieldValuesAsText/SMTotalFileStreamSize,FieldValuesAsText/FileLeafRef,FieldValuesAsText/FileRef,FieldValuesAsText/FileDirRef&$expand=ContentType,FieldValuesAsText"
      },
      "mappings": {
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize.parseInt()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'"

      }
    },
    {
      "name": "folderDeleted",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/GetFolderById\\(@a1\\)\\/recycle\\?@a1=.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemByUniqueId(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a1}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:request.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:2}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "folderSize": "deep:item.Size",
        "folderTitle": "deep:item.Title",
        "FolderUrl": "deep:item.DirName",
        "folderName": "deep:request.FieldValuesAsText.FileRef.getLastSegment()",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "folderModified": "deep:request.FieldValuesAsText.Modified",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "pageUrl": "^(?:(?!\/Lists\/).)*$",
      "method": "post",
      "catchFilter": "\/GetItemById.*?\/recycle.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{deep:request.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:3}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "fileSize": "deep:item.Size",
        "deletionDate": "deep:item.DeletedDate",
        "itemTitle": "deep:item.Title",
        "fileUrl": "complex:{{global:location.origin}}{{deep:item.DirName}}/{{deep:item.Title}}",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "ajax",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "pageUrl": "^(?:(?!\/Lists\/).)*$",
      "method": "post",
      "catchFilter": "\/GetItemById.*?\/recycle.*?[/]*$",
      "deepCatchPre": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{querystring:@a2}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{deep:request.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "deepCatch": {
        "item": "complex:{{ancestor:3}}\/RecycleBin(guid'{{response:parseJson().d.Recycle}}')"
      },
      "mappings": {
        "fileSize": "deep:item.Size",
        "pageTitle": "deep:item.Title",
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.DirName}}/{{deep:item.Title}}",
        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorDisplayName": "deep:author.Title",
        "authorID": "deep:author.Name.decodeClaims()",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listDeleted",
      "eventType": "ajax",
      "method": "post",
      "catchFilter": "\\/_api\\/web\\/lists\\(@appId\\)\\/recycle\\?\\@appId=.*?[/]*$",
      "deepCatch": {},
      "deepCatchPre": {
        "propList": "complex:{{ancestor:4}}/_api/web/lists(guid{{querystring:@appId}})?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "mappings": {
        "listID": "querystringwithoutquotamarks:@appId",
        "listTitle": "deep:propList.Title",
        "listUrl": "complex:{{global:location.origin}}{{deep:propList.RootFolder.ServerRelativeUrl}}/",
        "#documentLibraryID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": ""
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "folder",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:request.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "parentfolder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title"

      },
      "mappings": {
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "contentTypeName": "eval:'Folder'",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderTitle": "deep:parentfolder.Title",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "folderTitle": "deep:request.Title",
        "folderID": "deep:request.ID",
        "folderUniqueID": "deep:request.FieldValuesAsText.UniqueId"
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "folder",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:request.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "parentfolder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title"

      },
      "mappings": {
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "contentTypeName": "eval:'Folder'",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderTitle": "deep:parentfolder.Title",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "folderTitle": "deep:request.Title",
        "folderID": "deep:request.ID",
        "folderUniqueID": "deep:request.FieldValuesAsText.UniqueId"
      }
    },
    {
      "name": "folderDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "elementType": "folder",
      "method": "click",
      "catchFilter": "eval:window",
      "targetCatchFilter": "a[id^='Ribbon.Documents.Manage.Delete']",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{deep:request.ID}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "parentfolder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title"
      },
      "mappings": {
        "deletionDate": "eval:var today = new Date();today.getFullYear() +'-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + 'T' + today.getUTCHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + 'Z'",
        "folderTitle": "deep:request.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderTitle": "deep:parentfolder.Title",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "catchFilter": "#ctl00_PlaceHolderMain_ctl10_RptControls_onetidListEdit2",
      "deferred": true,
      "registerOnEvent": null,
      "delay": 0,
      "nextPageUrl": "\\_layouts\\/15\\/viewlsts.aspx?.*$",
      "deepCatch": {},
      "deferredMappings": {
        "ListTitled": "eval:document.querySelector('#DeltaPlaceHolderPageTitleInTitleArea').children[0].children[0].outerText",
        "ListURLd": "eval:var listurlA = document.querySelector('#idItemHoverTable').children[0].children[2].children[1].outerText;listurlA = listurlA.substring(0, listurlA.lastIndexOf('/'));",
        "ListIDd": "url:([(]?[a-fA-F0-9]{8}[-]?([a-fA-F0-9]{4}[-]?){3}[a-fA-F0-9]{12}[)]?)"
      },
      "mappings": {
        "listID": "deferred:ListIDd",
        "listTitle": "deferred:ListTitled",
        "listUrl": "deferred:ListURLd",
        "#documentLibraryID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": ""
      }
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "confirmation": true,
      "catchFilter": "eval:var dd = document.querySelectorAll(\".js-callout-footerArea span span a\"),i;for(i=0; i<dd.length;++i){if(i == 2 || dd[i].innerText.toLowerCase().indexOf(\"remove\")>-1) { dd[i]; }}",
      "deferred": true,
      "delayExecution": 0,
      "pageUrlCondition": ".*\/viewlsts.aspx*.",
      "registerOnInit": false,
      "immediateProcessDeferred": true,
      "listDeletedProcessing": true,
      "registerOnEvent": "click",
      "delay": 1000,
      "nextPageUrl": null,
      "deepCatch": {},
      "deepCatchPre": {},
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "",
        "listURL": "",
        "listID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      },
      "comment": "From list site contents"
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "confirmation": true,
      "catchFilter": "eval:var dd = document.querySelectorAll(\".js-callout-footerArea span span a\"),i;for(i=0; i<dd.length;++i){if(i == 2 || dd[i].innerText.toLowerCase().indexOf(\"remove\")>-1) { dd[i]; }}",
      "deferred": true,
      "delayExecution": 0,
      "pageUrlCondition": ".*\/viewlsts.aspx*.",
      "registerOnInit": false,
      "immediateProcessDeferred": true,
      "listDeletedProcessing": true,
      "registerOnEvent": "click",
      "delay": 3000,
      "nextPageUrl": null,
      "deepCatch": {},
      "deepCatchPre": {},
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "",
        "listURL": "",
        "listID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      },
      "comment": "From list site contents"
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "confirmation": true,
      "catchFilter": "eval:var dd = document.querySelectorAll(\".js-callout-footerArea span span a\"),i;for(i=0; i<dd.length;++i){if(i == 2 || dd[i].innerText.toLowerCase().indexOf(\"remove\")>-1) { dd[i]; }}",
      "deferred": true,
      "delayExecution": 0,
      "pageUrlCondition": ".*\/viewlsts.aspx*.",
      "registerOnInit": false,
      "immediateProcessDeferred": true,
      "listDeletedProcessing": true,
      "registerOnEvent": "click",
      "delay": 5000,
      "nextPageUrl": null,
      "deepCatch": {},
      "deepCatchPre": {},
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "",
        "listURL": "",
        "listID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      },
      "comment": "From list site contents"
    },
    {
      "name": "listDeleted",
      "eventType": "event",
      "method": "click",
      "confirmation": true,
      "catchFilter": "eval:var dd = document.querySelectorAll(\".js-callout-footerArea span span a\"),i;for(i=0; i<dd.length;++i){if(i == 2 || dd[i].innerText.toLowerCase().indexOf(\"remove\")>-1) { dd[i]; }}",
      "deferred": true,
      "delayExecution": 0,
      "pageUrlCondition": ".*\/viewlsts.aspx*.",
      "registerOnInit": false,
      "immediateProcessDeferred": true,
      "listDeletedProcessing": true,
      "registerOnEvent": "click",
      "delay": 100,
      "nextPageUrl": null,
      "deepCatch": {},
      "deepCatchPre": {},
      "deferredMappings": {
      },
      "mappings": {
        "listTitle": "",
        "listURL": "",
        "listID": "",
        "#documentLibraryName": "",
        "#documentLibraryUrl": "",
        "#documentLibraryID": ""
      },
      "comment": "From list site contents"
    },
    {
      "name": "listItemAttachmentView",
      "eventType": "event",
      "method": "click",
      "suffix": "_classic",
      "catchFilter": "#idAttachmentsTable tr",
      "immediateProcessDeferred": true,
      "deferred": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 200,
      "blocking": true,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}/{{context:webServerRelativeUrl}}/_api/Web/Lists('{{context:pageListId}}')/items({{querystring:ID}})?$select=Title,FileRef",
        "list": "complex:{{context:siteAbsoluteUrl}}/_api/web/Lists('{{context:pageListId}}')?$select=Title,RootFolder/ServerRelativeUrl&$expand=RootFolder"
      },
      "deferredMappings": {
        "id": "querystring:ID"
      },
      "mappings": {
        "listUrl": "complex:{{global:location.origin}}{{deep:list.RootFolder.ServerRelativeUrl}}/",
        "listID": "context:pageListId",
        "itemTitle": "deep:request.Title",
        "itemUrl": "complex:{{global:location.origin}}{{deep:request.FileRef}}/"
      }
    },
    {
      "name": "search",
      "eventType": "ajax",
      "suffix": "_classicSP2013",
      "method": "post",
      "catchFilter": "\/_vti_bin\/client.svc\/ProcessQuery$",
      "deferred": true,
      "deepCatch": {
      },
      "deferredMappings": {
      },
      "mappings": {
        "queryString": "response:getSearchQueryText()",
        "count": "response:getSearchQueryCount()"
      }
    },
    {
      "name": "search",
      "eventType": "postMessage",
      "catchFilter": "QueryString",
      "mappings": {
        "queryString": "response:prefix.parseJson().EntityRequests.0.Query.QueryString",
        "count": "response:qfResponse.parseJson().EntitySets.0.ResultSets.0.Total"
      }
    },
    {
      "name": "search",
      "eventType": "ajax",
      "suffix": "_modernSP2019",
      "method": "post",
      "catchFilter": "postquery\\?suxrid=ms-oil-datasource-files",
      "deepCatch": {
      },
      "deferredMappings": {
      },
      "mappings": {
        "queryString": "body:parseJson().request.Querytext",
        "count": "response:parseJson().d.postquery.PrimaryQueryResult.RelevantResults.RowCount"
      }
    },
    {
      "name": "fileUploadedPQ",
      "eventType": "ajax",
      "suffix": "_classic",
      "method": "post",
      "catchFilter": "\/_vti_bin\/client.svc\/ProcessQuery$",
      "catchFilterPropertyName": "Upload",
      "deepCatch": {
      },
      "mappings": {
        "!actionName": "body:childNodes"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "file",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "folder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileID": "deep:request.FieldValuesAsText.ID.parseInt()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "parentFolderTitle": "deep:folder.Title",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "file",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "folder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileID": "deep:request.FieldValuesAsText.ID.parseInt()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "parentFolderTitle": "deep:folder.Title",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "elementType": "file",
      "method": "click",
      "catchFilter": "eval:window",
      "targetCatchFilter": "a[id^='Ribbon.Documents.Manage.Delete']",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType/SchemaXml",
        "folder": "complex:{{context:webAbsoluteUrl}}/_api/Web/GetFolderByServerRelativePath(DecodedUrl='{{deep:request.FieldValuesAsText.FileDirRef}}')/ListItemAllFields?$select=Title",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq {{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"

      },
      "mappings": {
        "fileTitle": "deep:request.FieldValuesAsText.Title",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileID": "deep:request.FieldValuesAsText.ID.parseInt()",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "parentFolderTitle": "deep:folder.Title",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "page",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "contextmenu",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "pageTitle": "deep:request.Title",
        "pageID": "deep:request.ID",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_contextmenu",
      "confirmation": true,
      "elementType": "page",
      "method": "click",
      "catchFilter": "a#ID_DeleteDocItem",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2={{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "pageTitle": "deep:request.Title",
        "pageID": "deep:request.ID",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_ribbon",
      "confirmation": true,
      "elementType": "page",
      "method": "click",
      "catchFilter": "eval:window",
      "targetCatchFilter": "a[id^='Ribbon.Documents.Manage.Delete']",
      "deferred": false,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{eval:SP.ListOperation.Selection.getSelectedItems()[0]?.id}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "pageTitle": "deep:request.Title",
        "pageID": "deep:request.ID",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()"
      }
    },
    {
      "name": "pageDeleted",
      "eventType": "event",
      "suffix": "_ribbon_from_inside",
      "pageUrl": "^(?:(?!.*(\/SitePages\/Forms)).)*$",
      "confirmation": true,
      "method": "click",
      "catchFilter": "eval:window",
      "targetCatchFilter": "a[id^='Ribbon'][id*='Manage.Delete'] span > img, a[id^='Ribbon'][id*='Manage.Delete'] span",
      "deferred": true,
      "immediateProcessDeferred": true,
      "blocking": true,
      "registerOnInit": false,
      "registerOnEvent": "click",
      "delay": 800,
      "nextPageUrl": null,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1='{{context:listId}}'&@a2='{{context:pageItemId}}'&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$select=Title,Name",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "pageTitle": "deep:request.Title",
        "pageID": "deep:request.ID",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims().anonymize()",
        "authorDisplayName": "deep:request.FieldValuesAsText.Author",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageSize": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Size.parseInt()"
      }
    },
    {
      "name": "topMenuItem",
      "eventType": "event",
      "method": "click",
      "suffix": "_classic",
      "catchFilter": "eval:document.querySelectorAll(\"ul[id='zz12_RootAspMenu'] li a.ms-core-listMenu-item\")",
      "immediateProcessDeferred": true,
      "deferred": true,
      "useCurrentTarget": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 200,
      "blocking": true,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {
        "itemHref": "clickedtarget:href",
        "itemTitle": "clickedtarget:textContent"
      }
    },
    {
      "name": "topMenuItem",
      "eventType": "event",
      "method": "click",
      "suffix": "_modern",
      "catchFilter": "eval:document.querySelectorAll(\"span.ms-HorizontalNavItem a[role='menuitem']\")",
      "immediateProcessDeferred": true,
      "deferred": true,
      "useCurrentTarget": true,
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 200,
      "blocking": true,
      "nextPageUrl": null,
      "deepCatch": {},
      "deferredMappings": {},
      "mappings": {
        "itemHref": "clickedtarget:href",
        "itemTitle": "clickedtarget:textContent"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "method": "click",
      "catchFilter": "eval:document.querySelectorAll(\"button[icon='Mail'][id*='share'][role='menuitem']\")",
      "deferred": false,
      "registerOnEvent": null,
      "registerOnInit": false,
      "delay": 200,
      "deepCatch": {
        "request": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{context:pageItemId}}%27&$expand=File,File/Author,Properties,FieldValuesAsText,ContentType/SchemaXml",
        "author": "complex:{{global:location.origin}}{{context:webServerRelativeUrl}}/_api/web/Lists(@a1)/Items?$select=Author/Name,Author/Title&$expand=Author&$filter=Id eq '{{context:pageItemId}}'&@a1=%27{{context:listId}}%27",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.value.0.Author.Name.decodeClaims()}}%27"
      },
      "deferredMappings": {},
      "mappings": {
        "pageExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "docLocalizaton": "complex:{{context:webAbsoluteUrl}}{{deep:request.FieldValuesAsText.FileDirRef}}",
        "pageSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "pageName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:request.FieldValuesAsText.FileLeafRef",
        "pageUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "deep:request.ContentType.SchemaXml.getContentTypeFromSchemaXml()",
        "authorID": "deep:author.value.0.Author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.value.0.Author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",

        "pageUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "pageID": "deep:request.ID.parseInt()",
        "documentLibraryID": "context:pageListId"
      }
    },
    {
      "name": "itemShared",
      "eventType": "event",
      "method": "click",
      "suffix": "_item",
      "catchFilter": "button[class*=copyButton]",
      "pageUrl": "\/Lists\/",
      "registerOnEvent": "click",
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "itemName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "itemTitle": "deep:item.Title",
        "itemID": "deep:item.Id",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "pageShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "page",
        "fieldname": "!pageName"
      },
      "suffix": "_page",
      "catchFilter": "input#ctl00_PlaceHolderMain_btnShare",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": null,
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "pageUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "pageName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "!pageName": "deep:item.FieldValuesAsText.FileLeafRef.",
        "pageTitle": "deep:item.Title",
        "pageID": "deep:item.Id",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "itemShared",
      "eventType": "event",
      "method": "click",
      "suffix": "_item",
      "catchFilter": "input#ctl00_PlaceHolderMain_btnShare",
      "pageUrl": "\/Lists\/",
      "registerOnEvent": null,
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "item": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "itemUrl": "complex:{{global:location.origin}}{{deep:item.FieldValuesAsText.FileRef}}",
        "itemName": "deep:item.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "itemTitle": "deep:item.Title",
        "itemID": "deep:item.Id",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "fileShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "file",
        "fieldname": "fileName"
      },
      "suffix": "_file",
      "catchFilter": "input#ctl00_PlaceHolderMain_btnShare",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": null,
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "fileSize": "deep:request.FieldValuesAsText.SMTotalFileStreamSize",
        "fileUniqueID": "deep:request.FieldValuesAsText.UniqueId",
        "fileName": "deep:request.FieldValuesAsText.FileLeafRef.removeAspxExtension()",
        "fileExt": "deep:request.FieldValuesAsText.File_x005f_x0020_x005f_Type",
        "fileUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Document'",
        "authorID": "deep:request.FieldValuesAsText.Created_x005f_x0020_x005f_By.decodeClaims()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value"
      }
    },
    {
      "name": "folderShared",
      "eventType": "event",
      "method": "click",
      "filterFiletype": {
        "filetype": "folder",
        "fieldname": "folderName"
      },
      "suffix": "_folder",
      "catchFilter": "input#ctl00_PlaceHolderMain_btnShare",
      "pageUrl": "\/Forms\/",
      "registerOnEvent": null,
      "registerOnInit": true,
      "delay": 1000,
      "deepCatch": {
        "request": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$expand=FieldValuesAsText,ContentType",
        "author": "complex:{{context:webAbsoluteUrl}}/_api/web/Lists(@a1)/GetItemById(@a2)/Author?@a1=%27{{context:listId}}%27&@a2=%27{{selectedRows:0.ID}}%27&$select=Name,Title",
        "authorJobTitle": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-JobTitle')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorDepartment": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='SPS-Department')?@v=%27{{deep:author.Name.decodeClaims()}}%27",
        "authorOffice": "complex:{{context:webAbsoluteUrl}}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Office')?@v=%27{{deep:author.Name.decodeClaims()}}%27"
      },
      "mappings": {
        "folderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileRef}}/",
        "folderTitle": "deep:request.Title",
        "folderID": "deep:request.ID",
        "folderUniqueId": "deep:request.FieldValuesAsText.UniqueId",
        "folderName": "deep:request.FieldValuesAsText.FileLeafRef",
        "documentLibraryName": "context:listUrl.getLastSegment()",
        "documentLibraryUrl": "complex:{{global:location.origin}}{{context:listUrl}}/",
        "contentTypeName": "eval:'Folder'",
        "authorID": "deep:author.Name.decodeClaims().anonymize()",
        "authorDisplayName": "deep:author.Title",
        "authorDepartment": "deep:authorDepartment.value",
        "authorOffice": "deep:authorOffice.value",
        "authorJobTitle": "deep:authorJobTitle.value",
        "parentFolderName": "deep:request.FieldValuesAsText.FileDirRef.getLastSegment()",
        "parentFolderUrl": "complex:{{global:location.origin}}{{deep:request.FieldValuesAsText.FileDirRef}}/"
      }
    }
  ]
}
